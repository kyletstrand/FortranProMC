// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProMC.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProMC.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace promc {

namespace {

const ::google::protobuf::Descriptor* ProMCEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProMCEvent_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProMCEvent_Event_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProMCEvent_Event_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProMCEvent_Particles_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProMCEvent_Particles_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProMCEvent_Jets_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProMCEvent_Jets_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProMCEvent_CAJets_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProMCEvent_CAJets_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProMCEvent_GenJets_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProMCEvent_GenJets_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProMCEvent_Electrons_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProMCEvent_Electrons_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProMCEvent_Muons_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProMCEvent_Muons_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProMCEvent_Tracks_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProMCEvent_Tracks_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProMCEvent_Photons_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProMCEvent_Photons_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProMCEvent_MissingET_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProMCEvent_MissingET_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProMCEvent_HT_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProMCEvent_HT_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProMCEvent_Rho_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProMCEvent_Rho_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProMC_2eproto() {
  protobuf_AddDesc_ProMC_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProMC.proto");
  GOOGLE_CHECK(file != NULL);
  ProMCEvent_descriptor_ = file->message_type(0);
  static const int ProMCEvent_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent, event_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent, particles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent, jets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent, genjets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent, cajets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent, electrons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent, muons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent, tracks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent, photons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent, missinget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent, ht_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent, rho_),
  };
  ProMCEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProMCEvent_descriptor_,
      ProMCEvent::default_instance_,
      ProMCEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProMCEvent));
  ProMCEvent_Event_descriptor_ = ProMCEvent_descriptor_->nested_type(0);
  static const int ProMCEvent_Event_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Event, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Event, process_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Event, mpi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Event, id1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Event, id2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Event, pdf1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Event, pdf2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Event, x1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Event, x2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Event, scale_pdf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Event, alpha_qed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Event, scale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Event, alpha_qcd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Event, weight_),
  };
  ProMCEvent_Event_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProMCEvent_Event_descriptor_,
      ProMCEvent_Event::default_instance_,
      ProMCEvent_Event_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Event, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Event, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProMCEvent_Event));
  ProMCEvent_Particles_descriptor_ = ProMCEvent_descriptor_->nested_type(1);
  static const int ProMCEvent_Particles_offsets_[21] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, pdg_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, mass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, px_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, py_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, pz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, mother1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, mother2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, daughter1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, daughter2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, barcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, t_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, weight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, charge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, pt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, eta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, phi_),
  };
  ProMCEvent_Particles_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProMCEvent_Particles_descriptor_,
      ProMCEvent_Particles::default_instance_,
      ProMCEvent_Particles_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Particles, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProMCEvent_Particles));
  ProMCEvent_Jets_descriptor_ = ProMCEvent_descriptor_->nested_type(2);
  static const int ProMCEvent_Jets_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Jets, pt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Jets, eta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Jets, phi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Jets, mass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Jets, btag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Jets, tautag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Jets, charge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Jets, deltaeta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Jets, deltaphi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Jets, hadovereem_),
  };
  ProMCEvent_Jets_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProMCEvent_Jets_descriptor_,
      ProMCEvent_Jets::default_instance_,
      ProMCEvent_Jets_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Jets, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Jets, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProMCEvent_Jets));
  ProMCEvent_CAJets_descriptor_ = ProMCEvent_descriptor_->nested_type(3);
  static const int ProMCEvent_CAJets_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_CAJets, pt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_CAJets, eta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_CAJets, phi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_CAJets, mass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_CAJets, btag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_CAJets, tautag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_CAJets, charge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_CAJets, deltaeta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_CAJets, deltaphi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_CAJets, hadovereem_),
  };
  ProMCEvent_CAJets_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProMCEvent_CAJets_descriptor_,
      ProMCEvent_CAJets::default_instance_,
      ProMCEvent_CAJets_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_CAJets, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_CAJets, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProMCEvent_CAJets));
  ProMCEvent_GenJets_descriptor_ = ProMCEvent_descriptor_->nested_type(4);
  static const int ProMCEvent_GenJets_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_GenJets, pt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_GenJets, eta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_GenJets, phi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_GenJets, mass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_GenJets, btag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_GenJets, tautag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_GenJets, charge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_GenJets, deltaeta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_GenJets, deltaphi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_GenJets, hadovereem_),
  };
  ProMCEvent_GenJets_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProMCEvent_GenJets_descriptor_,
      ProMCEvent_GenJets::default_instance_,
      ProMCEvent_GenJets_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_GenJets, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_GenJets, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProMCEvent_GenJets));
  ProMCEvent_Electrons_descriptor_ = ProMCEvent_descriptor_->nested_type(5);
  static const int ProMCEvent_Electrons_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Electrons, pt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Electrons, eta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Electrons, phi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Electrons, charge_),
  };
  ProMCEvent_Electrons_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProMCEvent_Electrons_descriptor_,
      ProMCEvent_Electrons::default_instance_,
      ProMCEvent_Electrons_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Electrons, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Electrons, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProMCEvent_Electrons));
  ProMCEvent_Muons_descriptor_ = ProMCEvent_descriptor_->nested_type(6);
  static const int ProMCEvent_Muons_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Muons, pt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Muons, eta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Muons, phi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Muons, charge_),
  };
  ProMCEvent_Muons_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProMCEvent_Muons_descriptor_,
      ProMCEvent_Muons::default_instance_,
      ProMCEvent_Muons_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Muons, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Muons, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProMCEvent_Muons));
  ProMCEvent_Tracks_descriptor_ = ProMCEvent_descriptor_->nested_type(7);
  static const int ProMCEvent_Tracks_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Tracks, pt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Tracks, eta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Tracks, phi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Tracks, charge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Tracks, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Tracks, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Tracks, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Tracks, xouter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Tracks, youter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Tracks, zouter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Tracks, etaouter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Tracks, phiouter_),
  };
  ProMCEvent_Tracks_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProMCEvent_Tracks_descriptor_,
      ProMCEvent_Tracks::default_instance_,
      ProMCEvent_Tracks_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Tracks, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Tracks, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProMCEvent_Tracks));
  ProMCEvent_Photons_descriptor_ = ProMCEvent_descriptor_->nested_type(8);
  static const int ProMCEvent_Photons_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Photons, pt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Photons, eta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Photons, phi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Photons, energy_),
  };
  ProMCEvent_Photons_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProMCEvent_Photons_descriptor_,
      ProMCEvent_Photons::default_instance_,
      ProMCEvent_Photons_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Photons, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Photons, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProMCEvent_Photons));
  ProMCEvent_MissingET_descriptor_ = ProMCEvent_descriptor_->nested_type(9);
  static const int ProMCEvent_MissingET_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_MissingET, met_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_MissingET, phi_),
  };
  ProMCEvent_MissingET_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProMCEvent_MissingET_descriptor_,
      ProMCEvent_MissingET::default_instance_,
      ProMCEvent_MissingET_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_MissingET, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_MissingET, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProMCEvent_MissingET));
  ProMCEvent_HT_descriptor_ = ProMCEvent_descriptor_->nested_type(10);
  static const int ProMCEvent_HT_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_HT, ht_),
  };
  ProMCEvent_HT_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProMCEvent_HT_descriptor_,
      ProMCEvent_HT::default_instance_,
      ProMCEvent_HT_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_HT, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_HT, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProMCEvent_HT));
  ProMCEvent_Rho_descriptor_ = ProMCEvent_descriptor_->nested_type(11);
  static const int ProMCEvent_Rho_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Rho, rho_),
  };
  ProMCEvent_Rho_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProMCEvent_Rho_descriptor_,
      ProMCEvent_Rho::default_instance_,
      ProMCEvent_Rho_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Rho, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProMCEvent_Rho, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProMCEvent_Rho));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProMC_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProMCEvent_descriptor_, &ProMCEvent::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProMCEvent_Event_descriptor_, &ProMCEvent_Event::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProMCEvent_Particles_descriptor_, &ProMCEvent_Particles::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProMCEvent_Jets_descriptor_, &ProMCEvent_Jets::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProMCEvent_CAJets_descriptor_, &ProMCEvent_CAJets::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProMCEvent_GenJets_descriptor_, &ProMCEvent_GenJets::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProMCEvent_Electrons_descriptor_, &ProMCEvent_Electrons::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProMCEvent_Muons_descriptor_, &ProMCEvent_Muons::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProMCEvent_Tracks_descriptor_, &ProMCEvent_Tracks::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProMCEvent_Photons_descriptor_, &ProMCEvent_Photons::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProMCEvent_MissingET_descriptor_, &ProMCEvent_MissingET::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProMCEvent_HT_descriptor_, &ProMCEvent_HT::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProMCEvent_Rho_descriptor_, &ProMCEvent_Rho::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProMC_2eproto() {
  delete ProMCEvent::default_instance_;
  delete ProMCEvent_reflection_;
  delete ProMCEvent_Event::default_instance_;
  delete ProMCEvent_Event_reflection_;
  delete ProMCEvent_Particles::default_instance_;
  delete ProMCEvent_Particles_reflection_;
  delete ProMCEvent_Jets::default_instance_;
  delete ProMCEvent_Jets_reflection_;
  delete ProMCEvent_CAJets::default_instance_;
  delete ProMCEvent_CAJets_reflection_;
  delete ProMCEvent_GenJets::default_instance_;
  delete ProMCEvent_GenJets_reflection_;
  delete ProMCEvent_Electrons::default_instance_;
  delete ProMCEvent_Electrons_reflection_;
  delete ProMCEvent_Muons::default_instance_;
  delete ProMCEvent_Muons_reflection_;
  delete ProMCEvent_Tracks::default_instance_;
  delete ProMCEvent_Tracks_reflection_;
  delete ProMCEvent_Photons::default_instance_;
  delete ProMCEvent_Photons_reflection_;
  delete ProMCEvent_MissingET::default_instance_;
  delete ProMCEvent_MissingET_reflection_;
  delete ProMCEvent_HT::default_instance_;
  delete ProMCEvent_HT_reflection_;
  delete ProMCEvent_Rho::default_instance_;
  delete ProMCEvent_Rho_reflection_;
}

void protobuf_AddDesc_ProMC_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013ProMC.proto\022\005promc\"\374\021\n\nProMCEvent\022&\n\005e"
    "vent\030\001 \001(\0132\027.promc.ProMCEvent.Event\022.\n\tp"
    "articles\030\002 \001(\0132\033.promc.ProMCEvent.Partic"
    "les\022$\n\004jets\030\003 \001(\0132\026.promc.ProMCEvent.Jet"
    "s\022*\n\007genjets\030\004 \001(\0132\031.promc.ProMCEvent.Ge"
    "nJets\022(\n\006cajets\030\005 \001(\0132\030.promc.ProMCEvent"
    ".CAJets\022.\n\telectrons\030\006 \001(\0132\033.promc.ProMC"
    "Event.Electrons\022&\n\005muons\030\007 \001(\0132\027.promc.P"
    "roMCEvent.Muons\022(\n\006tracks\030\010 \001(\0132\030.promc."
    "ProMCEvent.Tracks\022*\n\007photons\030\t \001(\0132\031.pro"
    "mc.ProMCEvent.Photons\022.\n\tmissingET\030\n \001(\013"
    "2\033.promc.ProMCEvent.MissingET\022 \n\002ht\030\013 \001("
    "\0132\024.promc.ProMCEvent.HT\022\"\n\003rho\030\014 \001(\0132\025.p"
    "romc.ProMCEvent.Rho\032\336\001\n\005Event\022\016\n\006Number\030"
    "\001 \001(\005\022\022\n\nProcess_ID\030\002 \001(\005\022\013\n\003MPI\030\003 \001(\005\022\013"
    "\n\003ID1\030\004 \001(\005\022\013\n\003ID2\030\005 \001(\005\022\014\n\004PDF1\030\006 \001(\002\022\014"
    "\n\004PDF2\030\007 \001(\002\022\n\n\002X1\030\010 \001(\002\022\n\n\002X2\030\t \001(\002\022\021\n\t"
    "Scale_PDF\030\n \001(\002\022\021\n\tAlpha_QED\030\013 \001(\002\022\r\n\005Sc"
    "ale\030\014 \001(\002\022\021\n\tAlpha_QCD\030\r \001(\002\022\016\n\006Weight\030\016"
    " \001(\001\032\210\003\n\tParticles\022\016\n\002id\030\001 \003(\rB\002\020\001\022\022\n\006pd"
    "g_id\030\002 \003(\021B\002\020\001\022\022\n\006status\030\003 \003(\rB\002\020\001\022\020\n\004ma"
    "ss\030\004 \003(\004B\002\020\001\022\016\n\002Px\030\005 \003(\022B\002\020\001\022\016\n\002Py\030\006 \003(\022"
    "B\002\020\001\022\016\n\002Pz\030\007 \003(\022B\002\020\001\022\023\n\007mother1\030\010 \003(\rB\002\020"
    "\001\022\023\n\007mother2\030\t \003(\rB\002\020\001\022\025\n\tdaughter1\030\n \003("
    "\rB\002\020\001\022\025\n\tdaughter2\030\013 \003(\rB\002\020\001\022\023\n\007barcode\030"
    "\014 \003(\021B\002\020\001\022\r\n\001X\030\r \003(\021B\002\020\001\022\r\n\001Y\030\016 \003(\021B\002\020\001\022"
    "\r\n\001Z\030\017 \003(\021B\002\020\001\022\r\n\001T\030\020 \003(\rB\002\020\001\022\022\n\006weight\030"
    "\021 \003(\004B\002\020\001\022\022\n\006charge\030\022 \003(\021B\002\020\001\022\016\n\002PT\030\023 \003("
    "\004B\002\020\001\022\017\n\003Eta\030\024 \003(\022B\002\020\001\022\017\n\003Phi\030\025 \003(\022B\002\020\001\032"
    "\310\001\n\004Jets\022\016\n\002PT\030\001 \003(\004B\002\020\001\022\017\n\003Eta\030\002 \003(\022B\002\020"
    "\001\022\017\n\003Phi\030\003 \003(\022B\002\020\001\022\020\n\004Mass\030\004 \003(\004B\002\020\001\022\020\n\004"
    "Btag\030\005 \003(\021B\002\020\001\022\022\n\006Tautag\030\006 \003(\021B\002\020\001\022\022\n\006Ch"
    "arge\030\007 \003(\021B\002\020\001\022\024\n\010DeltaEta\030\010 \003(\rB\002\020\001\022\024\n\010"
    "DeltaPhi\030\t \003(\rB\002\020\001\022\026\n\nHadOverEem\030\n \003(\021B\002"
    "\020\001\032\312\001\n\006CAJets\022\016\n\002PT\030\001 \003(\004B\002\020\001\022\017\n\003Eta\030\002 \003"
    "(\022B\002\020\001\022\017\n\003Phi\030\003 \003(\022B\002\020\001\022\020\n\004Mass\030\004 \003(\004B\002\020"
    "\001\022\020\n\004Btag\030\005 \003(\021B\002\020\001\022\022\n\006TauTag\030\006 \003(\021B\002\020\001\022"
    "\022\n\006Charge\030\007 \003(\021B\002\020\001\022\024\n\010DeltaEta\030\010 \003(\rB\002\020"
    "\001\022\024\n\010DeltaPhi\030\t \003(\rB\002\020\001\022\026\n\nHadOverEem\030\n "
    "\003(\021B\002\020\001\032\313\001\n\007GenJets\022\016\n\002PT\030\001 \003(\004B\002\020\001\022\017\n\003E"
    "ta\030\002 \003(\022B\002\020\001\022\017\n\003Phi\030\003 \003(\022B\002\020\001\022\020\n\004Mass\030\004 "
    "\003(\004B\002\020\001\022\020\n\004Btag\030\005 \003(\021B\002\020\001\022\022\n\006TauTag\030\006 \003("
    "\021B\002\020\001\022\022\n\006Charge\030\007 \003(\021B\002\020\001\022\024\n\010DeltaEta\030\010 "
    "\003(\rB\002\020\001\022\024\n\010DeltaPhi\030\t \003(\rB\002\020\001\022\026\n\nHadOver"
    "Eem\030\n \003(\021B\002\020\001\032Q\n\tElectrons\022\016\n\002PT\030\001 \003(\004B\002"
    "\020\001\022\017\n\003Eta\030\002 \003(\022B\002\020\001\022\017\n\003Phi\030\003 \003(\022B\002\020\001\022\022\n\006"
    "Charge\030\004 \003(\021B\002\020\001\032M\n\005Muons\022\016\n\002PT\030\001 \003(\004B\002\020"
    "\001\022\017\n\003Eta\030\002 \003(\022B\002\020\001\022\017\n\003Phi\030\003 \003(\022B\002\020\001\022\022\n\006C"
    "harge\030\004 \003(\021B\002\020\001\032\343\001\n\006Tracks\022\016\n\002PT\030\001 \003(\004B\002"
    "\020\001\022\017\n\003Eta\030\002 \003(\022B\002\020\001\022\017\n\003Phi\030\003 \003(\022B\002\020\001\022\022\n\006"
    "Charge\030\004 \003(\021B\002\020\001\022\r\n\001X\030\005 \003(\021B\002\020\001\022\r\n\001Y\030\006 \003"
    "(\021B\002\020\001\022\r\n\001Z\030\007 \003(\021B\002\020\001\022\022\n\006XOuter\030\010 \003(\021B\002\020"
    "\001\022\022\n\006YOuter\030\t \003(\021B\002\020\001\022\022\n\006ZOuter\030\n \003(\021B\002\020"
    "\001\022\024\n\010EtaOuter\030\013 \003(\021B\002\020\001\022\024\n\010PhiOuter\030\014 \003("
    "\021B\002\020\001\032O\n\007Photons\022\016\n\002PT\030\001 \003(\004B\002\020\001\022\017\n\003Eta\030"
    "\002 \003(\022B\002\020\001\022\017\n\003Phi\030\003 \003(\022B\002\020\001\022\022\n\006Energy\030\004 \003"
    "(\022B\002\020\001\032%\n\tMissingET\022\013\n\003MET\030\001 \001(\004\022\013\n\003Phi\030"
    "\002 \001(\022\032\020\n\002HT\022\n\n\002HT\030\001 \001(\004\032\022\n\003Rho\022\013\n\003Rho\030\001 "
    "\001(\004B\021\n\010promc.ioB\005ProMC", 2342);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProMC.proto", &protobuf_RegisterTypes);
  ProMCEvent::default_instance_ = new ProMCEvent();
  ProMCEvent_Event::default_instance_ = new ProMCEvent_Event();
  ProMCEvent_Particles::default_instance_ = new ProMCEvent_Particles();
  ProMCEvent_Jets::default_instance_ = new ProMCEvent_Jets();
  ProMCEvent_CAJets::default_instance_ = new ProMCEvent_CAJets();
  ProMCEvent_GenJets::default_instance_ = new ProMCEvent_GenJets();
  ProMCEvent_Electrons::default_instance_ = new ProMCEvent_Electrons();
  ProMCEvent_Muons::default_instance_ = new ProMCEvent_Muons();
  ProMCEvent_Tracks::default_instance_ = new ProMCEvent_Tracks();
  ProMCEvent_Photons::default_instance_ = new ProMCEvent_Photons();
  ProMCEvent_MissingET::default_instance_ = new ProMCEvent_MissingET();
  ProMCEvent_HT::default_instance_ = new ProMCEvent_HT();
  ProMCEvent_Rho::default_instance_ = new ProMCEvent_Rho();
  ProMCEvent::default_instance_->InitAsDefaultInstance();
  ProMCEvent_Event::default_instance_->InitAsDefaultInstance();
  ProMCEvent_Particles::default_instance_->InitAsDefaultInstance();
  ProMCEvent_Jets::default_instance_->InitAsDefaultInstance();
  ProMCEvent_CAJets::default_instance_->InitAsDefaultInstance();
  ProMCEvent_GenJets::default_instance_->InitAsDefaultInstance();
  ProMCEvent_Electrons::default_instance_->InitAsDefaultInstance();
  ProMCEvent_Muons::default_instance_->InitAsDefaultInstance();
  ProMCEvent_Tracks::default_instance_->InitAsDefaultInstance();
  ProMCEvent_Photons::default_instance_->InitAsDefaultInstance();
  ProMCEvent_MissingET::default_instance_->InitAsDefaultInstance();
  ProMCEvent_HT::default_instance_->InitAsDefaultInstance();
  ProMCEvent_Rho::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProMC_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProMC_2eproto {
  StaticDescriptorInitializer_ProMC_2eproto() {
    protobuf_AddDesc_ProMC_2eproto();
  }
} static_descriptor_initializer_ProMC_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ProMCEvent_Event::kNumberFieldNumber;
const int ProMCEvent_Event::kProcessIDFieldNumber;
const int ProMCEvent_Event::kMPIFieldNumber;
const int ProMCEvent_Event::kID1FieldNumber;
const int ProMCEvent_Event::kID2FieldNumber;
const int ProMCEvent_Event::kPDF1FieldNumber;
const int ProMCEvent_Event::kPDF2FieldNumber;
const int ProMCEvent_Event::kX1FieldNumber;
const int ProMCEvent_Event::kX2FieldNumber;
const int ProMCEvent_Event::kScalePDFFieldNumber;
const int ProMCEvent_Event::kAlphaQEDFieldNumber;
const int ProMCEvent_Event::kScaleFieldNumber;
const int ProMCEvent_Event::kAlphaQCDFieldNumber;
const int ProMCEvent_Event::kWeightFieldNumber;
#endif  // !_MSC_VER

ProMCEvent_Event::ProMCEvent_Event()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProMCEvent_Event::InitAsDefaultInstance() {
}

ProMCEvent_Event::ProMCEvent_Event(const ProMCEvent_Event& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProMCEvent_Event::SharedCtor() {
  _cached_size_ = 0;
  number_ = 0;
  process_id_ = 0;
  mpi_ = 0;
  id1_ = 0;
  id2_ = 0;
  pdf1_ = 0;
  pdf2_ = 0;
  x1_ = 0;
  x2_ = 0;
  scale_pdf_ = 0;
  alpha_qed_ = 0;
  scale_ = 0;
  alpha_qcd_ = 0;
  weight_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProMCEvent_Event::~ProMCEvent_Event() {
  SharedDtor();
}

void ProMCEvent_Event::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProMCEvent_Event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProMCEvent_Event::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProMCEvent_Event_descriptor_;
}

const ProMCEvent_Event& ProMCEvent_Event::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProMC_2eproto();
  return *default_instance_;
}

ProMCEvent_Event* ProMCEvent_Event::default_instance_ = NULL;

ProMCEvent_Event* ProMCEvent_Event::New() const {
  return new ProMCEvent_Event;
}

void ProMCEvent_Event::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    number_ = 0;
    process_id_ = 0;
    mpi_ = 0;
    id1_ = 0;
    id2_ = 0;
    pdf1_ = 0;
    pdf2_ = 0;
    x1_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    x2_ = 0;
    scale_pdf_ = 0;
    alpha_qed_ = 0;
    scale_ = 0;
    alpha_qcd_ = 0;
    weight_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProMCEvent_Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Number = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
          set_has_number();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Process_ID;
        break;
      }

      // optional int32 Process_ID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Process_ID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &process_id_)));
          set_has_process_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_MPI;
        break;
      }

      // optional int32 MPI = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_MPI:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mpi_)));
          set_has_mpi();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_ID1;
        break;
      }

      // optional int32 ID1 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ID1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id1_)));
          set_has_id1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_ID2;
        break;
      }

      // optional int32 ID2 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ID2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id2_)));
          set_has_id2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(53)) goto parse_PDF1;
        break;
      }

      // optional float PDF1 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_PDF1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pdf1_)));
          set_has_pdf1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(61)) goto parse_PDF2;
        break;
      }

      // optional float PDF2 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_PDF2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pdf2_)));
          set_has_pdf2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(69)) goto parse_X1;
        break;
      }

      // optional float X1 = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_X1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x1_)));
          set_has_x1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(77)) goto parse_X2;
        break;
      }

      // optional float X2 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_X2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x2_)));
          set_has_x2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(85)) goto parse_Scale_PDF;
        break;
      }

      // optional float Scale_PDF = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_Scale_PDF:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &scale_pdf_)));
          set_has_scale_pdf();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(93)) goto parse_Alpha_QED;
        break;
      }

      // optional float Alpha_QED = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_Alpha_QED:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &alpha_qed_)));
          set_has_alpha_qed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(101)) goto parse_Scale;
        break;
      }

      // optional float Scale = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_Scale:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &scale_)));
          set_has_scale();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(109)) goto parse_Alpha_QCD;
        break;
      }

      // optional float Alpha_QCD = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_Alpha_QCD:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &alpha_qcd_)));
          set_has_alpha_qcd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(113)) goto parse_Weight;
        break;
      }

      // optional double Weight = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_Weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &weight_)));
          set_has_weight();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProMCEvent_Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 Number = 1;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->number(), output);
  }

  // optional int32 Process_ID = 2;
  if (has_process_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->process_id(), output);
  }

  // optional int32 MPI = 3;
  if (has_mpi()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mpi(), output);
  }

  // optional int32 ID1 = 4;
  if (has_id1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->id1(), output);
  }

  // optional int32 ID2 = 5;
  if (has_id2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->id2(), output);
  }

  // optional float PDF1 = 6;
  if (has_pdf1()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->pdf1(), output);
  }

  // optional float PDF2 = 7;
  if (has_pdf2()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->pdf2(), output);
  }

  // optional float X1 = 8;
  if (has_x1()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->x1(), output);
  }

  // optional float X2 = 9;
  if (has_x2()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->x2(), output);
  }

  // optional float Scale_PDF = 10;
  if (has_scale_pdf()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->scale_pdf(), output);
  }

  // optional float Alpha_QED = 11;
  if (has_alpha_qed()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->alpha_qed(), output);
  }

  // optional float Scale = 12;
  if (has_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->scale(), output);
  }

  // optional float Alpha_QCD = 13;
  if (has_alpha_qcd()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->alpha_qcd(), output);
  }

  // optional double Weight = 14;
  if (has_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->weight(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProMCEvent_Event::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 Number = 1;
  if (has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->number(), target);
  }

  // optional int32 Process_ID = 2;
  if (has_process_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->process_id(), target);
  }

  // optional int32 MPI = 3;
  if (has_mpi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mpi(), target);
  }

  // optional int32 ID1 = 4;
  if (has_id1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->id1(), target);
  }

  // optional int32 ID2 = 5;
  if (has_id2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->id2(), target);
  }

  // optional float PDF1 = 6;
  if (has_pdf1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->pdf1(), target);
  }

  // optional float PDF2 = 7;
  if (has_pdf2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->pdf2(), target);
  }

  // optional float X1 = 8;
  if (has_x1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->x1(), target);
  }

  // optional float X2 = 9;
  if (has_x2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->x2(), target);
  }

  // optional float Scale_PDF = 10;
  if (has_scale_pdf()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->scale_pdf(), target);
  }

  // optional float Alpha_QED = 11;
  if (has_alpha_qed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->alpha_qed(), target);
  }

  // optional float Scale = 12;
  if (has_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->scale(), target);
  }

  // optional float Alpha_QCD = 13;
  if (has_alpha_qcd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->alpha_qcd(), target);
  }

  // optional double Weight = 14;
  if (has_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->weight(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProMCEvent_Event::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 Number = 1;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->number());
    }

    // optional int32 Process_ID = 2;
    if (has_process_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->process_id());
    }

    // optional int32 MPI = 3;
    if (has_mpi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mpi());
    }

    // optional int32 ID1 = 4;
    if (has_id1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id1());
    }

    // optional int32 ID2 = 5;
    if (has_id2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id2());
    }

    // optional float PDF1 = 6;
    if (has_pdf1()) {
      total_size += 1 + 4;
    }

    // optional float PDF2 = 7;
    if (has_pdf2()) {
      total_size += 1 + 4;
    }

    // optional float X1 = 8;
    if (has_x1()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional float X2 = 9;
    if (has_x2()) {
      total_size += 1 + 4;
    }

    // optional float Scale_PDF = 10;
    if (has_scale_pdf()) {
      total_size += 1 + 4;
    }

    // optional float Alpha_QED = 11;
    if (has_alpha_qed()) {
      total_size += 1 + 4;
    }

    // optional float Scale = 12;
    if (has_scale()) {
      total_size += 1 + 4;
    }

    // optional float Alpha_QCD = 13;
    if (has_alpha_qcd()) {
      total_size += 1 + 4;
    }

    // optional double Weight = 14;
    if (has_weight()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProMCEvent_Event::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProMCEvent_Event* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProMCEvent_Event*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProMCEvent_Event::MergeFrom(const ProMCEvent_Event& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_number()) {
      set_number(from.number());
    }
    if (from.has_process_id()) {
      set_process_id(from.process_id());
    }
    if (from.has_mpi()) {
      set_mpi(from.mpi());
    }
    if (from.has_id1()) {
      set_id1(from.id1());
    }
    if (from.has_id2()) {
      set_id2(from.id2());
    }
    if (from.has_pdf1()) {
      set_pdf1(from.pdf1());
    }
    if (from.has_pdf2()) {
      set_pdf2(from.pdf2());
    }
    if (from.has_x1()) {
      set_x1(from.x1());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_x2()) {
      set_x2(from.x2());
    }
    if (from.has_scale_pdf()) {
      set_scale_pdf(from.scale_pdf());
    }
    if (from.has_alpha_qed()) {
      set_alpha_qed(from.alpha_qed());
    }
    if (from.has_scale()) {
      set_scale(from.scale());
    }
    if (from.has_alpha_qcd()) {
      set_alpha_qcd(from.alpha_qcd());
    }
    if (from.has_weight()) {
      set_weight(from.weight());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProMCEvent_Event::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProMCEvent_Event::CopyFrom(const ProMCEvent_Event& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProMCEvent_Event::IsInitialized() const {

  return true;
}

void ProMCEvent_Event::Swap(ProMCEvent_Event* other) {
  if (other != this) {
    std::swap(number_, other->number_);
    std::swap(process_id_, other->process_id_);
    std::swap(mpi_, other->mpi_);
    std::swap(id1_, other->id1_);
    std::swap(id2_, other->id2_);
    std::swap(pdf1_, other->pdf1_);
    std::swap(pdf2_, other->pdf2_);
    std::swap(x1_, other->x1_);
    std::swap(x2_, other->x2_);
    std::swap(scale_pdf_, other->scale_pdf_);
    std::swap(alpha_qed_, other->alpha_qed_);
    std::swap(scale_, other->scale_);
    std::swap(alpha_qcd_, other->alpha_qcd_);
    std::swap(weight_, other->weight_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProMCEvent_Event::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProMCEvent_Event_descriptor_;
  metadata.reflection = ProMCEvent_Event_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ProMCEvent_Particles::kIdFieldNumber;
const int ProMCEvent_Particles::kPdgIdFieldNumber;
const int ProMCEvent_Particles::kStatusFieldNumber;
const int ProMCEvent_Particles::kMassFieldNumber;
const int ProMCEvent_Particles::kPxFieldNumber;
const int ProMCEvent_Particles::kPyFieldNumber;
const int ProMCEvent_Particles::kPzFieldNumber;
const int ProMCEvent_Particles::kMother1FieldNumber;
const int ProMCEvent_Particles::kMother2FieldNumber;
const int ProMCEvent_Particles::kDaughter1FieldNumber;
const int ProMCEvent_Particles::kDaughter2FieldNumber;
const int ProMCEvent_Particles::kBarcodeFieldNumber;
const int ProMCEvent_Particles::kXFieldNumber;
const int ProMCEvent_Particles::kYFieldNumber;
const int ProMCEvent_Particles::kZFieldNumber;
const int ProMCEvent_Particles::kTFieldNumber;
const int ProMCEvent_Particles::kWeightFieldNumber;
const int ProMCEvent_Particles::kChargeFieldNumber;
const int ProMCEvent_Particles::kPTFieldNumber;
const int ProMCEvent_Particles::kEtaFieldNumber;
const int ProMCEvent_Particles::kPhiFieldNumber;
#endif  // !_MSC_VER

ProMCEvent_Particles::ProMCEvent_Particles()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProMCEvent_Particles::InitAsDefaultInstance() {
}

ProMCEvent_Particles::ProMCEvent_Particles(const ProMCEvent_Particles& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProMCEvent_Particles::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProMCEvent_Particles::~ProMCEvent_Particles() {
  SharedDtor();
}

void ProMCEvent_Particles::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProMCEvent_Particles::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProMCEvent_Particles::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProMCEvent_Particles_descriptor_;
}

const ProMCEvent_Particles& ProMCEvent_Particles::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProMC_2eproto();
  return *default_instance_;
}

ProMCEvent_Particles* ProMCEvent_Particles::default_instance_ = NULL;

ProMCEvent_Particles* ProMCEvent_Particles::New() const {
  return new ProMCEvent_Particles;
}

void ProMCEvent_Particles::Clear() {
  id_.Clear();
  pdg_id_.Clear();
  status_.Clear();
  mass_.Clear();
  px_.Clear();
  py_.Clear();
  pz_.Clear();
  mother1_.Clear();
  mother2_.Clear();
  daughter1_.Clear();
  daughter2_.Clear();
  barcode_.Clear();
  x_.Clear();
  y_.Clear();
  z_.Clear();
  t_.Clear();
  weight_.Clear();
  charge_.Clear();
  pt_.Clear();
  eta_.Clear();
  phi_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProMCEvent_Particles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 id = 1 [packed = true];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10, input, this->mutable_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_pdg_id;
        break;
      }

      // repeated sint32 pdg_id = 2 [packed = true];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pdg_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_pdg_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18, input, this->mutable_pdg_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_status;
        break;
      }

      // repeated uint32 status = 3 [packed = true];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_status())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26, input, this->mutable_status())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mass;
        break;
      }

      // repeated uint64 mass = 4 [packed = true];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mass:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_mass())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34, input, this->mutable_mass())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_Px;
        break;
      }

      // repeated sint64 Px = 5 [packed = true];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Px:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_px())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 42, input, this->mutable_px())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_Py;
        break;
      }

      // repeated sint64 Py = 6 [packed = true];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Py:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_py())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 50, input, this->mutable_py())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_Pz;
        break;
      }

      // repeated sint64 Pz = 7 [packed = true];
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Pz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_pz())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 58, input, this->mutable_pz())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_mother1;
        break;
      }

      // repeated uint32 mother1 = 8 [packed = true];
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mother1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_mother1())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66, input, this->mutable_mother1())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_mother2;
        break;
      }

      // repeated uint32 mother2 = 9 [packed = true];
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mother2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_mother2())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 74, input, this->mutable_mother2())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_daughter1;
        break;
      }

      // repeated uint32 daughter1 = 10 [packed = true];
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_daughter1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_daughter1())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 82, input, this->mutable_daughter1())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_daughter2;
        break;
      }

      // repeated uint32 daughter2 = 11 [packed = true];
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_daughter2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_daughter2())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 90, input, this->mutable_daughter2())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_barcode;
        break;
      }

      // repeated sint32 barcode = 12 [packed = true];
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_barcode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_barcode())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 98, input, this->mutable_barcode())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_X;
        break;
      }

      // repeated sint32 X = 13 [packed = true];
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_X:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_x())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 106, input, this->mutable_x())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_Y;
        break;
      }

      // repeated sint32 Y = 14 [packed = true];
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_y())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 114, input, this->mutable_y())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_Z;
        break;
      }

      // repeated sint32 Z = 15 [packed = true];
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_z())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 122, input, this->mutable_z())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_T;
        break;
      }

      // repeated uint32 T = 16 [packed = true];
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_T:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_t())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 130, input, this->mutable_t())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_weight;
        break;
      }

      // repeated uint64 weight = 17 [packed = true];
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_weight())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 138, input, this->mutable_weight())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_charge;
        break;
      }

      // repeated sint32 charge = 18 [packed = true];
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_charge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_charge())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 146, input, this->mutable_charge())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_PT;
        break;
      }

      // repeated uint64 PT = 19 [packed = true];
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PT:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_pt())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 154, input, this->mutable_pt())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_Eta;
        break;
      }

      // repeated sint64 Eta = 20 [packed = true];
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Eta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_eta())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 2, 162, input, this->mutable_eta())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_Phi;
        break;
      }

      // repeated sint64 Phi = 21 [packed = true];
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Phi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_phi())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 2, 170, input, this->mutable_phi())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProMCEvent_Particles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint32 id = 1 [packed = true];
  if (this->id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_id_cached_byte_size_);
  }
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->id(i), output);
  }

  // repeated sint32 pdg_id = 2 [packed = true];
  if (this->pdg_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pdg_id_cached_byte_size_);
  }
  for (int i = 0; i < this->pdg_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->pdg_id(i), output);
  }

  // repeated uint32 status = 3 [packed = true];
  if (this->status_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_status_cached_byte_size_);
  }
  for (int i = 0; i < this->status_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->status(i), output);
  }

  // repeated uint64 mass = 4 [packed = true];
  if (this->mass_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_mass_cached_byte_size_);
  }
  for (int i = 0; i < this->mass_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->mass(i), output);
  }

  // repeated sint64 Px = 5 [packed = true];
  if (this->px_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_px_cached_byte_size_);
  }
  for (int i = 0; i < this->px_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->px(i), output);
  }

  // repeated sint64 Py = 6 [packed = true];
  if (this->py_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_py_cached_byte_size_);
  }
  for (int i = 0; i < this->py_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->py(i), output);
  }

  // repeated sint64 Pz = 7 [packed = true];
  if (this->pz_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pz_cached_byte_size_);
  }
  for (int i = 0; i < this->pz_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->pz(i), output);
  }

  // repeated uint32 mother1 = 8 [packed = true];
  if (this->mother1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_mother1_cached_byte_size_);
  }
  for (int i = 0; i < this->mother1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->mother1(i), output);
  }

  // repeated uint32 mother2 = 9 [packed = true];
  if (this->mother2_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_mother2_cached_byte_size_);
  }
  for (int i = 0; i < this->mother2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->mother2(i), output);
  }

  // repeated uint32 daughter1 = 10 [packed = true];
  if (this->daughter1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_daughter1_cached_byte_size_);
  }
  for (int i = 0; i < this->daughter1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->daughter1(i), output);
  }

  // repeated uint32 daughter2 = 11 [packed = true];
  if (this->daughter2_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_daughter2_cached_byte_size_);
  }
  for (int i = 0; i < this->daughter2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->daughter2(i), output);
  }

  // repeated sint32 barcode = 12 [packed = true];
  if (this->barcode_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_barcode_cached_byte_size_);
  }
  for (int i = 0; i < this->barcode_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->barcode(i), output);
  }

  // repeated sint32 X = 13 [packed = true];
  if (this->x_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_x_cached_byte_size_);
  }
  for (int i = 0; i < this->x_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->x(i), output);
  }

  // repeated sint32 Y = 14 [packed = true];
  if (this->y_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_y_cached_byte_size_);
  }
  for (int i = 0; i < this->y_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->y(i), output);
  }

  // repeated sint32 Z = 15 [packed = true];
  if (this->z_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_z_cached_byte_size_);
  }
  for (int i = 0; i < this->z_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->z(i), output);
  }

  // repeated uint32 T = 16 [packed = true];
  if (this->t_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(16, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_t_cached_byte_size_);
  }
  for (int i = 0; i < this->t_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->t(i), output);
  }

  // repeated uint64 weight = 17 [packed = true];
  if (this->weight_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(17, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_weight_cached_byte_size_);
  }
  for (int i = 0; i < this->weight_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->weight(i), output);
  }

  // repeated sint32 charge = 18 [packed = true];
  if (this->charge_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(18, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_charge_cached_byte_size_);
  }
  for (int i = 0; i < this->charge_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->charge(i), output);
  }

  // repeated uint64 PT = 19 [packed = true];
  if (this->pt_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(19, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pt_cached_byte_size_);
  }
  for (int i = 0; i < this->pt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->pt(i), output);
  }

  // repeated sint64 Eta = 20 [packed = true];
  if (this->eta_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(20, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_eta_cached_byte_size_);
  }
  for (int i = 0; i < this->eta_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->eta(i), output);
  }

  // repeated sint64 Phi = 21 [packed = true];
  if (this->phi_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(21, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_phi_cached_byte_size_);
  }
  for (int i = 0; i < this->phi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->phi(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProMCEvent_Particles::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 id = 1 [packed = true];
  if (this->id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _id_cached_byte_size_, target);
  }
  for (int i = 0; i < this->id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->id(i), target);
  }

  // repeated sint32 pdg_id = 2 [packed = true];
  if (this->pdg_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pdg_id_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pdg_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->pdg_id(i), target);
  }

  // repeated uint32 status = 3 [packed = true];
  if (this->status_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _status_cached_byte_size_, target);
  }
  for (int i = 0; i < this->status_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->status(i), target);
  }

  // repeated uint64 mass = 4 [packed = true];
  if (this->mass_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _mass_cached_byte_size_, target);
  }
  for (int i = 0; i < this->mass_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->mass(i), target);
  }

  // repeated sint64 Px = 5 [packed = true];
  if (this->px_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _px_cached_byte_size_, target);
  }
  for (int i = 0; i < this->px_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->px(i), target);
  }

  // repeated sint64 Py = 6 [packed = true];
  if (this->py_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _py_cached_byte_size_, target);
  }
  for (int i = 0; i < this->py_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->py(i), target);
  }

  // repeated sint64 Pz = 7 [packed = true];
  if (this->pz_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pz_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pz_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->pz(i), target);
  }

  // repeated uint32 mother1 = 8 [packed = true];
  if (this->mother1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _mother1_cached_byte_size_, target);
  }
  for (int i = 0; i < this->mother1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->mother1(i), target);
  }

  // repeated uint32 mother2 = 9 [packed = true];
  if (this->mother2_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _mother2_cached_byte_size_, target);
  }
  for (int i = 0; i < this->mother2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->mother2(i), target);
  }

  // repeated uint32 daughter1 = 10 [packed = true];
  if (this->daughter1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _daughter1_cached_byte_size_, target);
  }
  for (int i = 0; i < this->daughter1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->daughter1(i), target);
  }

  // repeated uint32 daughter2 = 11 [packed = true];
  if (this->daughter2_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _daughter2_cached_byte_size_, target);
  }
  for (int i = 0; i < this->daughter2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->daughter2(i), target);
  }

  // repeated sint32 barcode = 12 [packed = true];
  if (this->barcode_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _barcode_cached_byte_size_, target);
  }
  for (int i = 0; i < this->barcode_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->barcode(i), target);
  }

  // repeated sint32 X = 13 [packed = true];
  if (this->x_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _x_cached_byte_size_, target);
  }
  for (int i = 0; i < this->x_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->x(i), target);
  }

  // repeated sint32 Y = 14 [packed = true];
  if (this->y_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _y_cached_byte_size_, target);
  }
  for (int i = 0; i < this->y_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->y(i), target);
  }

  // repeated sint32 Z = 15 [packed = true];
  if (this->z_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _z_cached_byte_size_, target);
  }
  for (int i = 0; i < this->z_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->z(i), target);
  }

  // repeated uint32 T = 16 [packed = true];
  if (this->t_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      16,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _t_cached_byte_size_, target);
  }
  for (int i = 0; i < this->t_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->t(i), target);
  }

  // repeated uint64 weight = 17 [packed = true];
  if (this->weight_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      17,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _weight_cached_byte_size_, target);
  }
  for (int i = 0; i < this->weight_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->weight(i), target);
  }

  // repeated sint32 charge = 18 [packed = true];
  if (this->charge_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      18,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _charge_cached_byte_size_, target);
  }
  for (int i = 0; i < this->charge_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->charge(i), target);
  }

  // repeated uint64 PT = 19 [packed = true];
  if (this->pt_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      19,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pt_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->pt(i), target);
  }

  // repeated sint64 Eta = 20 [packed = true];
  if (this->eta_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      20,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _eta_cached_byte_size_, target);
  }
  for (int i = 0; i < this->eta_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->eta(i), target);
  }

  // repeated sint64 Phi = 21 [packed = true];
  if (this->phi_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      21,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _phi_cached_byte_size_, target);
  }
  for (int i = 0; i < this->phi_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->phi(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProMCEvent_Particles::ByteSize() const {
  int total_size = 0;

  // repeated uint32 id = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->id(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _id_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 pdg_id = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->pdg_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->pdg_id(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pdg_id_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 status = 3 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->status_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->status(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _status_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 mass = 4 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->mass_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->mass(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mass_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Px = 5 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->px_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->px(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _px_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Py = 6 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->py_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->py(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _py_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Pz = 7 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->pz_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->pz(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pz_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 mother1 = 8 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->mother1_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->mother1(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mother1_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 mother2 = 9 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->mother2_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->mother2(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mother2_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 daughter1 = 10 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->daughter1_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->daughter1(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _daughter1_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 daughter2 = 11 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->daughter2_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->daughter2(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _daughter2_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 barcode = 12 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->barcode_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->barcode(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _barcode_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 X = 13 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->x_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->x(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _x_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 Y = 14 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->y_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->y(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _y_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 Z = 15 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->z_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->z(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _z_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 T = 16 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->t_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->t(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _t_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 weight = 17 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->weight_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->weight(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _weight_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 charge = 18 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->charge_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->charge(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _charge_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 PT = 19 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->pt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->pt(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pt_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Eta = 20 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->eta_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->eta(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _eta_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Phi = 21 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->phi_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->phi(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _phi_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProMCEvent_Particles::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProMCEvent_Particles* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProMCEvent_Particles*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProMCEvent_Particles::MergeFrom(const ProMCEvent_Particles& from) {
  GOOGLE_CHECK_NE(&from, this);
  id_.MergeFrom(from.id_);
  pdg_id_.MergeFrom(from.pdg_id_);
  status_.MergeFrom(from.status_);
  mass_.MergeFrom(from.mass_);
  px_.MergeFrom(from.px_);
  py_.MergeFrom(from.py_);
  pz_.MergeFrom(from.pz_);
  mother1_.MergeFrom(from.mother1_);
  mother2_.MergeFrom(from.mother2_);
  daughter1_.MergeFrom(from.daughter1_);
  daughter2_.MergeFrom(from.daughter2_);
  barcode_.MergeFrom(from.barcode_);
  x_.MergeFrom(from.x_);
  y_.MergeFrom(from.y_);
  z_.MergeFrom(from.z_);
  t_.MergeFrom(from.t_);
  weight_.MergeFrom(from.weight_);
  charge_.MergeFrom(from.charge_);
  pt_.MergeFrom(from.pt_);
  eta_.MergeFrom(from.eta_);
  phi_.MergeFrom(from.phi_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProMCEvent_Particles::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProMCEvent_Particles::CopyFrom(const ProMCEvent_Particles& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProMCEvent_Particles::IsInitialized() const {

  return true;
}

void ProMCEvent_Particles::Swap(ProMCEvent_Particles* other) {
  if (other != this) {
    id_.Swap(&other->id_);
    pdg_id_.Swap(&other->pdg_id_);
    status_.Swap(&other->status_);
    mass_.Swap(&other->mass_);
    px_.Swap(&other->px_);
    py_.Swap(&other->py_);
    pz_.Swap(&other->pz_);
    mother1_.Swap(&other->mother1_);
    mother2_.Swap(&other->mother2_);
    daughter1_.Swap(&other->daughter1_);
    daughter2_.Swap(&other->daughter2_);
    barcode_.Swap(&other->barcode_);
    x_.Swap(&other->x_);
    y_.Swap(&other->y_);
    z_.Swap(&other->z_);
    t_.Swap(&other->t_);
    weight_.Swap(&other->weight_);
    charge_.Swap(&other->charge_);
    pt_.Swap(&other->pt_);
    eta_.Swap(&other->eta_);
    phi_.Swap(&other->phi_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProMCEvent_Particles::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProMCEvent_Particles_descriptor_;
  metadata.reflection = ProMCEvent_Particles_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ProMCEvent_Jets::kPTFieldNumber;
const int ProMCEvent_Jets::kEtaFieldNumber;
const int ProMCEvent_Jets::kPhiFieldNumber;
const int ProMCEvent_Jets::kMassFieldNumber;
const int ProMCEvent_Jets::kBtagFieldNumber;
const int ProMCEvent_Jets::kTautagFieldNumber;
const int ProMCEvent_Jets::kChargeFieldNumber;
const int ProMCEvent_Jets::kDeltaEtaFieldNumber;
const int ProMCEvent_Jets::kDeltaPhiFieldNumber;
const int ProMCEvent_Jets::kHadOverEemFieldNumber;
#endif  // !_MSC_VER

ProMCEvent_Jets::ProMCEvent_Jets()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProMCEvent_Jets::InitAsDefaultInstance() {
}

ProMCEvent_Jets::ProMCEvent_Jets(const ProMCEvent_Jets& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProMCEvent_Jets::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProMCEvent_Jets::~ProMCEvent_Jets() {
  SharedDtor();
}

void ProMCEvent_Jets::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProMCEvent_Jets::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProMCEvent_Jets::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProMCEvent_Jets_descriptor_;
}

const ProMCEvent_Jets& ProMCEvent_Jets::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProMC_2eproto();
  return *default_instance_;
}

ProMCEvent_Jets* ProMCEvent_Jets::default_instance_ = NULL;

ProMCEvent_Jets* ProMCEvent_Jets::New() const {
  return new ProMCEvent_Jets;
}

void ProMCEvent_Jets::Clear() {
  pt_.Clear();
  eta_.Clear();
  phi_.Clear();
  mass_.Clear();
  btag_.Clear();
  tautag_.Clear();
  charge_.Clear();
  deltaeta_.Clear();
  deltaphi_.Clear();
  hadovereem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProMCEvent_Jets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 PT = 1 [packed = true];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_pt())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10, input, this->mutable_pt())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Eta;
        break;
      }

      // repeated sint64 Eta = 2 [packed = true];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Eta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_eta())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18, input, this->mutable_eta())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_Phi;
        break;
      }

      // repeated sint64 Phi = 3 [packed = true];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Phi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_phi())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 26, input, this->mutable_phi())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_Mass;
        break;
      }

      // repeated uint64 Mass = 4 [packed = true];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Mass:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_mass())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34, input, this->mutable_mass())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_Btag;
        break;
      }

      // repeated sint32 Btag = 5 [packed = true];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Btag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_btag())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 42, input, this->mutable_btag())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_Tautag;
        break;
      }

      // repeated sint32 Tautag = 6 [packed = true];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Tautag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_tautag())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 50, input, this->mutable_tautag())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_Charge;
        break;
      }

      // repeated sint32 Charge = 7 [packed = true];
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Charge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_charge())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 58, input, this->mutable_charge())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_DeltaEta;
        break;
      }

      // repeated uint32 DeltaEta = 8 [packed = true];
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DeltaEta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_deltaeta())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66, input, this->mutable_deltaeta())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_DeltaPhi;
        break;
      }

      // repeated uint32 DeltaPhi = 9 [packed = true];
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DeltaPhi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_deltaphi())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 74, input, this->mutable_deltaphi())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_HadOverEem;
        break;
      }

      // repeated sint32 HadOverEem = 10 [packed = true];
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_HadOverEem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_hadovereem())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 82, input, this->mutable_hadovereem())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProMCEvent_Jets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint64 PT = 1 [packed = true];
  if (this->pt_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pt_cached_byte_size_);
  }
  for (int i = 0; i < this->pt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->pt(i), output);
  }

  // repeated sint64 Eta = 2 [packed = true];
  if (this->eta_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_eta_cached_byte_size_);
  }
  for (int i = 0; i < this->eta_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->eta(i), output);
  }

  // repeated sint64 Phi = 3 [packed = true];
  if (this->phi_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_phi_cached_byte_size_);
  }
  for (int i = 0; i < this->phi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->phi(i), output);
  }

  // repeated uint64 Mass = 4 [packed = true];
  if (this->mass_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_mass_cached_byte_size_);
  }
  for (int i = 0; i < this->mass_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->mass(i), output);
  }

  // repeated sint32 Btag = 5 [packed = true];
  if (this->btag_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_btag_cached_byte_size_);
  }
  for (int i = 0; i < this->btag_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->btag(i), output);
  }

  // repeated sint32 Tautag = 6 [packed = true];
  if (this->tautag_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_tautag_cached_byte_size_);
  }
  for (int i = 0; i < this->tautag_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->tautag(i), output);
  }

  // repeated sint32 Charge = 7 [packed = true];
  if (this->charge_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_charge_cached_byte_size_);
  }
  for (int i = 0; i < this->charge_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->charge(i), output);
  }

  // repeated uint32 DeltaEta = 8 [packed = true];
  if (this->deltaeta_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_deltaeta_cached_byte_size_);
  }
  for (int i = 0; i < this->deltaeta_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->deltaeta(i), output);
  }

  // repeated uint32 DeltaPhi = 9 [packed = true];
  if (this->deltaphi_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_deltaphi_cached_byte_size_);
  }
  for (int i = 0; i < this->deltaphi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->deltaphi(i), output);
  }

  // repeated sint32 HadOverEem = 10 [packed = true];
  if (this->hadovereem_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_hadovereem_cached_byte_size_);
  }
  for (int i = 0; i < this->hadovereem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->hadovereem(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProMCEvent_Jets::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint64 PT = 1 [packed = true];
  if (this->pt_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pt_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->pt(i), target);
  }

  // repeated sint64 Eta = 2 [packed = true];
  if (this->eta_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _eta_cached_byte_size_, target);
  }
  for (int i = 0; i < this->eta_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->eta(i), target);
  }

  // repeated sint64 Phi = 3 [packed = true];
  if (this->phi_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _phi_cached_byte_size_, target);
  }
  for (int i = 0; i < this->phi_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->phi(i), target);
  }

  // repeated uint64 Mass = 4 [packed = true];
  if (this->mass_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _mass_cached_byte_size_, target);
  }
  for (int i = 0; i < this->mass_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->mass(i), target);
  }

  // repeated sint32 Btag = 5 [packed = true];
  if (this->btag_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _btag_cached_byte_size_, target);
  }
  for (int i = 0; i < this->btag_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->btag(i), target);
  }

  // repeated sint32 Tautag = 6 [packed = true];
  if (this->tautag_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _tautag_cached_byte_size_, target);
  }
  for (int i = 0; i < this->tautag_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->tautag(i), target);
  }

  // repeated sint32 Charge = 7 [packed = true];
  if (this->charge_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _charge_cached_byte_size_, target);
  }
  for (int i = 0; i < this->charge_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->charge(i), target);
  }

  // repeated uint32 DeltaEta = 8 [packed = true];
  if (this->deltaeta_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _deltaeta_cached_byte_size_, target);
  }
  for (int i = 0; i < this->deltaeta_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->deltaeta(i), target);
  }

  // repeated uint32 DeltaPhi = 9 [packed = true];
  if (this->deltaphi_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _deltaphi_cached_byte_size_, target);
  }
  for (int i = 0; i < this->deltaphi_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->deltaphi(i), target);
  }

  // repeated sint32 HadOverEem = 10 [packed = true];
  if (this->hadovereem_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _hadovereem_cached_byte_size_, target);
  }
  for (int i = 0; i < this->hadovereem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->hadovereem(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProMCEvent_Jets::ByteSize() const {
  int total_size = 0;

  // repeated uint64 PT = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->pt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->pt(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pt_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Eta = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->eta_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->eta(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _eta_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Phi = 3 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->phi_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->phi(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _phi_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 Mass = 4 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->mass_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->mass(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mass_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 Btag = 5 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->btag_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->btag(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _btag_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 Tautag = 6 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->tautag_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->tautag(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tautag_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 Charge = 7 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->charge_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->charge(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _charge_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 DeltaEta = 8 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->deltaeta_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->deltaeta(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _deltaeta_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 DeltaPhi = 9 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->deltaphi_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->deltaphi(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _deltaphi_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 HadOverEem = 10 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->hadovereem_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->hadovereem(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _hadovereem_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProMCEvent_Jets::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProMCEvent_Jets* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProMCEvent_Jets*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProMCEvent_Jets::MergeFrom(const ProMCEvent_Jets& from) {
  GOOGLE_CHECK_NE(&from, this);
  pt_.MergeFrom(from.pt_);
  eta_.MergeFrom(from.eta_);
  phi_.MergeFrom(from.phi_);
  mass_.MergeFrom(from.mass_);
  btag_.MergeFrom(from.btag_);
  tautag_.MergeFrom(from.tautag_);
  charge_.MergeFrom(from.charge_);
  deltaeta_.MergeFrom(from.deltaeta_);
  deltaphi_.MergeFrom(from.deltaphi_);
  hadovereem_.MergeFrom(from.hadovereem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProMCEvent_Jets::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProMCEvent_Jets::CopyFrom(const ProMCEvent_Jets& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProMCEvent_Jets::IsInitialized() const {

  return true;
}

void ProMCEvent_Jets::Swap(ProMCEvent_Jets* other) {
  if (other != this) {
    pt_.Swap(&other->pt_);
    eta_.Swap(&other->eta_);
    phi_.Swap(&other->phi_);
    mass_.Swap(&other->mass_);
    btag_.Swap(&other->btag_);
    tautag_.Swap(&other->tautag_);
    charge_.Swap(&other->charge_);
    deltaeta_.Swap(&other->deltaeta_);
    deltaphi_.Swap(&other->deltaphi_);
    hadovereem_.Swap(&other->hadovereem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProMCEvent_Jets::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProMCEvent_Jets_descriptor_;
  metadata.reflection = ProMCEvent_Jets_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ProMCEvent_CAJets::kPTFieldNumber;
const int ProMCEvent_CAJets::kEtaFieldNumber;
const int ProMCEvent_CAJets::kPhiFieldNumber;
const int ProMCEvent_CAJets::kMassFieldNumber;
const int ProMCEvent_CAJets::kBtagFieldNumber;
const int ProMCEvent_CAJets::kTauTagFieldNumber;
const int ProMCEvent_CAJets::kChargeFieldNumber;
const int ProMCEvent_CAJets::kDeltaEtaFieldNumber;
const int ProMCEvent_CAJets::kDeltaPhiFieldNumber;
const int ProMCEvent_CAJets::kHadOverEemFieldNumber;
#endif  // !_MSC_VER

ProMCEvent_CAJets::ProMCEvent_CAJets()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProMCEvent_CAJets::InitAsDefaultInstance() {
}

ProMCEvent_CAJets::ProMCEvent_CAJets(const ProMCEvent_CAJets& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProMCEvent_CAJets::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProMCEvent_CAJets::~ProMCEvent_CAJets() {
  SharedDtor();
}

void ProMCEvent_CAJets::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProMCEvent_CAJets::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProMCEvent_CAJets::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProMCEvent_CAJets_descriptor_;
}

const ProMCEvent_CAJets& ProMCEvent_CAJets::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProMC_2eproto();
  return *default_instance_;
}

ProMCEvent_CAJets* ProMCEvent_CAJets::default_instance_ = NULL;

ProMCEvent_CAJets* ProMCEvent_CAJets::New() const {
  return new ProMCEvent_CAJets;
}

void ProMCEvent_CAJets::Clear() {
  pt_.Clear();
  eta_.Clear();
  phi_.Clear();
  mass_.Clear();
  btag_.Clear();
  tautag_.Clear();
  charge_.Clear();
  deltaeta_.Clear();
  deltaphi_.Clear();
  hadovereem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProMCEvent_CAJets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 PT = 1 [packed = true];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_pt())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10, input, this->mutable_pt())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Eta;
        break;
      }

      // repeated sint64 Eta = 2 [packed = true];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Eta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_eta())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18, input, this->mutable_eta())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_Phi;
        break;
      }

      // repeated sint64 Phi = 3 [packed = true];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Phi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_phi())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 26, input, this->mutable_phi())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_Mass;
        break;
      }

      // repeated uint64 Mass = 4 [packed = true];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Mass:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_mass())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34, input, this->mutable_mass())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_Btag;
        break;
      }

      // repeated sint32 Btag = 5 [packed = true];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Btag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_btag())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 42, input, this->mutable_btag())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_TauTag;
        break;
      }

      // repeated sint32 TauTag = 6 [packed = true];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TauTag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_tautag())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 50, input, this->mutable_tautag())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_Charge;
        break;
      }

      // repeated sint32 Charge = 7 [packed = true];
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Charge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_charge())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 58, input, this->mutable_charge())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_DeltaEta;
        break;
      }

      // repeated uint32 DeltaEta = 8 [packed = true];
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DeltaEta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_deltaeta())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66, input, this->mutable_deltaeta())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_DeltaPhi;
        break;
      }

      // repeated uint32 DeltaPhi = 9 [packed = true];
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DeltaPhi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_deltaphi())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 74, input, this->mutable_deltaphi())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_HadOverEem;
        break;
      }

      // repeated sint32 HadOverEem = 10 [packed = true];
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_HadOverEem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_hadovereem())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 82, input, this->mutable_hadovereem())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProMCEvent_CAJets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint64 PT = 1 [packed = true];
  if (this->pt_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pt_cached_byte_size_);
  }
  for (int i = 0; i < this->pt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->pt(i), output);
  }

  // repeated sint64 Eta = 2 [packed = true];
  if (this->eta_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_eta_cached_byte_size_);
  }
  for (int i = 0; i < this->eta_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->eta(i), output);
  }

  // repeated sint64 Phi = 3 [packed = true];
  if (this->phi_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_phi_cached_byte_size_);
  }
  for (int i = 0; i < this->phi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->phi(i), output);
  }

  // repeated uint64 Mass = 4 [packed = true];
  if (this->mass_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_mass_cached_byte_size_);
  }
  for (int i = 0; i < this->mass_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->mass(i), output);
  }

  // repeated sint32 Btag = 5 [packed = true];
  if (this->btag_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_btag_cached_byte_size_);
  }
  for (int i = 0; i < this->btag_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->btag(i), output);
  }

  // repeated sint32 TauTag = 6 [packed = true];
  if (this->tautag_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_tautag_cached_byte_size_);
  }
  for (int i = 0; i < this->tautag_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->tautag(i), output);
  }

  // repeated sint32 Charge = 7 [packed = true];
  if (this->charge_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_charge_cached_byte_size_);
  }
  for (int i = 0; i < this->charge_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->charge(i), output);
  }

  // repeated uint32 DeltaEta = 8 [packed = true];
  if (this->deltaeta_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_deltaeta_cached_byte_size_);
  }
  for (int i = 0; i < this->deltaeta_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->deltaeta(i), output);
  }

  // repeated uint32 DeltaPhi = 9 [packed = true];
  if (this->deltaphi_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_deltaphi_cached_byte_size_);
  }
  for (int i = 0; i < this->deltaphi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->deltaphi(i), output);
  }

  // repeated sint32 HadOverEem = 10 [packed = true];
  if (this->hadovereem_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_hadovereem_cached_byte_size_);
  }
  for (int i = 0; i < this->hadovereem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->hadovereem(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProMCEvent_CAJets::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint64 PT = 1 [packed = true];
  if (this->pt_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pt_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->pt(i), target);
  }

  // repeated sint64 Eta = 2 [packed = true];
  if (this->eta_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _eta_cached_byte_size_, target);
  }
  for (int i = 0; i < this->eta_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->eta(i), target);
  }

  // repeated sint64 Phi = 3 [packed = true];
  if (this->phi_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _phi_cached_byte_size_, target);
  }
  for (int i = 0; i < this->phi_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->phi(i), target);
  }

  // repeated uint64 Mass = 4 [packed = true];
  if (this->mass_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _mass_cached_byte_size_, target);
  }
  for (int i = 0; i < this->mass_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->mass(i), target);
  }

  // repeated sint32 Btag = 5 [packed = true];
  if (this->btag_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _btag_cached_byte_size_, target);
  }
  for (int i = 0; i < this->btag_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->btag(i), target);
  }

  // repeated sint32 TauTag = 6 [packed = true];
  if (this->tautag_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _tautag_cached_byte_size_, target);
  }
  for (int i = 0; i < this->tautag_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->tautag(i), target);
  }

  // repeated sint32 Charge = 7 [packed = true];
  if (this->charge_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _charge_cached_byte_size_, target);
  }
  for (int i = 0; i < this->charge_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->charge(i), target);
  }

  // repeated uint32 DeltaEta = 8 [packed = true];
  if (this->deltaeta_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _deltaeta_cached_byte_size_, target);
  }
  for (int i = 0; i < this->deltaeta_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->deltaeta(i), target);
  }

  // repeated uint32 DeltaPhi = 9 [packed = true];
  if (this->deltaphi_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _deltaphi_cached_byte_size_, target);
  }
  for (int i = 0; i < this->deltaphi_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->deltaphi(i), target);
  }

  // repeated sint32 HadOverEem = 10 [packed = true];
  if (this->hadovereem_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _hadovereem_cached_byte_size_, target);
  }
  for (int i = 0; i < this->hadovereem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->hadovereem(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProMCEvent_CAJets::ByteSize() const {
  int total_size = 0;

  // repeated uint64 PT = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->pt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->pt(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pt_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Eta = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->eta_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->eta(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _eta_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Phi = 3 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->phi_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->phi(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _phi_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 Mass = 4 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->mass_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->mass(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mass_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 Btag = 5 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->btag_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->btag(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _btag_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 TauTag = 6 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->tautag_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->tautag(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tautag_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 Charge = 7 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->charge_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->charge(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _charge_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 DeltaEta = 8 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->deltaeta_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->deltaeta(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _deltaeta_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 DeltaPhi = 9 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->deltaphi_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->deltaphi(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _deltaphi_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 HadOverEem = 10 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->hadovereem_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->hadovereem(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _hadovereem_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProMCEvent_CAJets::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProMCEvent_CAJets* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProMCEvent_CAJets*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProMCEvent_CAJets::MergeFrom(const ProMCEvent_CAJets& from) {
  GOOGLE_CHECK_NE(&from, this);
  pt_.MergeFrom(from.pt_);
  eta_.MergeFrom(from.eta_);
  phi_.MergeFrom(from.phi_);
  mass_.MergeFrom(from.mass_);
  btag_.MergeFrom(from.btag_);
  tautag_.MergeFrom(from.tautag_);
  charge_.MergeFrom(from.charge_);
  deltaeta_.MergeFrom(from.deltaeta_);
  deltaphi_.MergeFrom(from.deltaphi_);
  hadovereem_.MergeFrom(from.hadovereem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProMCEvent_CAJets::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProMCEvent_CAJets::CopyFrom(const ProMCEvent_CAJets& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProMCEvent_CAJets::IsInitialized() const {

  return true;
}

void ProMCEvent_CAJets::Swap(ProMCEvent_CAJets* other) {
  if (other != this) {
    pt_.Swap(&other->pt_);
    eta_.Swap(&other->eta_);
    phi_.Swap(&other->phi_);
    mass_.Swap(&other->mass_);
    btag_.Swap(&other->btag_);
    tautag_.Swap(&other->tautag_);
    charge_.Swap(&other->charge_);
    deltaeta_.Swap(&other->deltaeta_);
    deltaphi_.Swap(&other->deltaphi_);
    hadovereem_.Swap(&other->hadovereem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProMCEvent_CAJets::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProMCEvent_CAJets_descriptor_;
  metadata.reflection = ProMCEvent_CAJets_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ProMCEvent_GenJets::kPTFieldNumber;
const int ProMCEvent_GenJets::kEtaFieldNumber;
const int ProMCEvent_GenJets::kPhiFieldNumber;
const int ProMCEvent_GenJets::kMassFieldNumber;
const int ProMCEvent_GenJets::kBtagFieldNumber;
const int ProMCEvent_GenJets::kTauTagFieldNumber;
const int ProMCEvent_GenJets::kChargeFieldNumber;
const int ProMCEvent_GenJets::kDeltaEtaFieldNumber;
const int ProMCEvent_GenJets::kDeltaPhiFieldNumber;
const int ProMCEvent_GenJets::kHadOverEemFieldNumber;
#endif  // !_MSC_VER

ProMCEvent_GenJets::ProMCEvent_GenJets()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProMCEvent_GenJets::InitAsDefaultInstance() {
}

ProMCEvent_GenJets::ProMCEvent_GenJets(const ProMCEvent_GenJets& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProMCEvent_GenJets::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProMCEvent_GenJets::~ProMCEvent_GenJets() {
  SharedDtor();
}

void ProMCEvent_GenJets::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProMCEvent_GenJets::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProMCEvent_GenJets::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProMCEvent_GenJets_descriptor_;
}

const ProMCEvent_GenJets& ProMCEvent_GenJets::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProMC_2eproto();
  return *default_instance_;
}

ProMCEvent_GenJets* ProMCEvent_GenJets::default_instance_ = NULL;

ProMCEvent_GenJets* ProMCEvent_GenJets::New() const {
  return new ProMCEvent_GenJets;
}

void ProMCEvent_GenJets::Clear() {
  pt_.Clear();
  eta_.Clear();
  phi_.Clear();
  mass_.Clear();
  btag_.Clear();
  tautag_.Clear();
  charge_.Clear();
  deltaeta_.Clear();
  deltaphi_.Clear();
  hadovereem_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProMCEvent_GenJets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 PT = 1 [packed = true];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_pt())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10, input, this->mutable_pt())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Eta;
        break;
      }

      // repeated sint64 Eta = 2 [packed = true];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Eta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_eta())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18, input, this->mutable_eta())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_Phi;
        break;
      }

      // repeated sint64 Phi = 3 [packed = true];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Phi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_phi())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 26, input, this->mutable_phi())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_Mass;
        break;
      }

      // repeated uint64 Mass = 4 [packed = true];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Mass:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_mass())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34, input, this->mutable_mass())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_Btag;
        break;
      }

      // repeated sint32 Btag = 5 [packed = true];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Btag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_btag())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 42, input, this->mutable_btag())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_TauTag;
        break;
      }

      // repeated sint32 TauTag = 6 [packed = true];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TauTag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_tautag())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 50, input, this->mutable_tautag())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_Charge;
        break;
      }

      // repeated sint32 Charge = 7 [packed = true];
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Charge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_charge())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 58, input, this->mutable_charge())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_DeltaEta;
        break;
      }

      // repeated uint32 DeltaEta = 8 [packed = true];
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DeltaEta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_deltaeta())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66, input, this->mutable_deltaeta())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_DeltaPhi;
        break;
      }

      // repeated uint32 DeltaPhi = 9 [packed = true];
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DeltaPhi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_deltaphi())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 74, input, this->mutable_deltaphi())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_HadOverEem;
        break;
      }

      // repeated sint32 HadOverEem = 10 [packed = true];
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_HadOverEem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_hadovereem())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 82, input, this->mutable_hadovereem())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProMCEvent_GenJets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint64 PT = 1 [packed = true];
  if (this->pt_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pt_cached_byte_size_);
  }
  for (int i = 0; i < this->pt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->pt(i), output);
  }

  // repeated sint64 Eta = 2 [packed = true];
  if (this->eta_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_eta_cached_byte_size_);
  }
  for (int i = 0; i < this->eta_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->eta(i), output);
  }

  // repeated sint64 Phi = 3 [packed = true];
  if (this->phi_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_phi_cached_byte_size_);
  }
  for (int i = 0; i < this->phi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->phi(i), output);
  }

  // repeated uint64 Mass = 4 [packed = true];
  if (this->mass_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_mass_cached_byte_size_);
  }
  for (int i = 0; i < this->mass_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->mass(i), output);
  }

  // repeated sint32 Btag = 5 [packed = true];
  if (this->btag_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_btag_cached_byte_size_);
  }
  for (int i = 0; i < this->btag_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->btag(i), output);
  }

  // repeated sint32 TauTag = 6 [packed = true];
  if (this->tautag_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_tautag_cached_byte_size_);
  }
  for (int i = 0; i < this->tautag_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->tautag(i), output);
  }

  // repeated sint32 Charge = 7 [packed = true];
  if (this->charge_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_charge_cached_byte_size_);
  }
  for (int i = 0; i < this->charge_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->charge(i), output);
  }

  // repeated uint32 DeltaEta = 8 [packed = true];
  if (this->deltaeta_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_deltaeta_cached_byte_size_);
  }
  for (int i = 0; i < this->deltaeta_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->deltaeta(i), output);
  }

  // repeated uint32 DeltaPhi = 9 [packed = true];
  if (this->deltaphi_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_deltaphi_cached_byte_size_);
  }
  for (int i = 0; i < this->deltaphi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->deltaphi(i), output);
  }

  // repeated sint32 HadOverEem = 10 [packed = true];
  if (this->hadovereem_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_hadovereem_cached_byte_size_);
  }
  for (int i = 0; i < this->hadovereem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->hadovereem(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProMCEvent_GenJets::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint64 PT = 1 [packed = true];
  if (this->pt_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pt_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->pt(i), target);
  }

  // repeated sint64 Eta = 2 [packed = true];
  if (this->eta_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _eta_cached_byte_size_, target);
  }
  for (int i = 0; i < this->eta_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->eta(i), target);
  }

  // repeated sint64 Phi = 3 [packed = true];
  if (this->phi_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _phi_cached_byte_size_, target);
  }
  for (int i = 0; i < this->phi_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->phi(i), target);
  }

  // repeated uint64 Mass = 4 [packed = true];
  if (this->mass_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _mass_cached_byte_size_, target);
  }
  for (int i = 0; i < this->mass_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->mass(i), target);
  }

  // repeated sint32 Btag = 5 [packed = true];
  if (this->btag_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _btag_cached_byte_size_, target);
  }
  for (int i = 0; i < this->btag_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->btag(i), target);
  }

  // repeated sint32 TauTag = 6 [packed = true];
  if (this->tautag_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _tautag_cached_byte_size_, target);
  }
  for (int i = 0; i < this->tautag_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->tautag(i), target);
  }

  // repeated sint32 Charge = 7 [packed = true];
  if (this->charge_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _charge_cached_byte_size_, target);
  }
  for (int i = 0; i < this->charge_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->charge(i), target);
  }

  // repeated uint32 DeltaEta = 8 [packed = true];
  if (this->deltaeta_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _deltaeta_cached_byte_size_, target);
  }
  for (int i = 0; i < this->deltaeta_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->deltaeta(i), target);
  }

  // repeated uint32 DeltaPhi = 9 [packed = true];
  if (this->deltaphi_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _deltaphi_cached_byte_size_, target);
  }
  for (int i = 0; i < this->deltaphi_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->deltaphi(i), target);
  }

  // repeated sint32 HadOverEem = 10 [packed = true];
  if (this->hadovereem_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _hadovereem_cached_byte_size_, target);
  }
  for (int i = 0; i < this->hadovereem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->hadovereem(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProMCEvent_GenJets::ByteSize() const {
  int total_size = 0;

  // repeated uint64 PT = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->pt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->pt(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pt_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Eta = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->eta_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->eta(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _eta_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Phi = 3 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->phi_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->phi(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _phi_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 Mass = 4 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->mass_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->mass(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mass_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 Btag = 5 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->btag_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->btag(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _btag_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 TauTag = 6 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->tautag_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->tautag(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tautag_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 Charge = 7 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->charge_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->charge(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _charge_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 DeltaEta = 8 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->deltaeta_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->deltaeta(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _deltaeta_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 DeltaPhi = 9 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->deltaphi_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->deltaphi(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _deltaphi_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 HadOverEem = 10 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->hadovereem_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->hadovereem(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _hadovereem_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProMCEvent_GenJets::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProMCEvent_GenJets* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProMCEvent_GenJets*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProMCEvent_GenJets::MergeFrom(const ProMCEvent_GenJets& from) {
  GOOGLE_CHECK_NE(&from, this);
  pt_.MergeFrom(from.pt_);
  eta_.MergeFrom(from.eta_);
  phi_.MergeFrom(from.phi_);
  mass_.MergeFrom(from.mass_);
  btag_.MergeFrom(from.btag_);
  tautag_.MergeFrom(from.tautag_);
  charge_.MergeFrom(from.charge_);
  deltaeta_.MergeFrom(from.deltaeta_);
  deltaphi_.MergeFrom(from.deltaphi_);
  hadovereem_.MergeFrom(from.hadovereem_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProMCEvent_GenJets::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProMCEvent_GenJets::CopyFrom(const ProMCEvent_GenJets& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProMCEvent_GenJets::IsInitialized() const {

  return true;
}

void ProMCEvent_GenJets::Swap(ProMCEvent_GenJets* other) {
  if (other != this) {
    pt_.Swap(&other->pt_);
    eta_.Swap(&other->eta_);
    phi_.Swap(&other->phi_);
    mass_.Swap(&other->mass_);
    btag_.Swap(&other->btag_);
    tautag_.Swap(&other->tautag_);
    charge_.Swap(&other->charge_);
    deltaeta_.Swap(&other->deltaeta_);
    deltaphi_.Swap(&other->deltaphi_);
    hadovereem_.Swap(&other->hadovereem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProMCEvent_GenJets::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProMCEvent_GenJets_descriptor_;
  metadata.reflection = ProMCEvent_GenJets_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ProMCEvent_Electrons::kPTFieldNumber;
const int ProMCEvent_Electrons::kEtaFieldNumber;
const int ProMCEvent_Electrons::kPhiFieldNumber;
const int ProMCEvent_Electrons::kChargeFieldNumber;
#endif  // !_MSC_VER

ProMCEvent_Electrons::ProMCEvent_Electrons()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProMCEvent_Electrons::InitAsDefaultInstance() {
}

ProMCEvent_Electrons::ProMCEvent_Electrons(const ProMCEvent_Electrons& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProMCEvent_Electrons::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProMCEvent_Electrons::~ProMCEvent_Electrons() {
  SharedDtor();
}

void ProMCEvent_Electrons::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProMCEvent_Electrons::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProMCEvent_Electrons::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProMCEvent_Electrons_descriptor_;
}

const ProMCEvent_Electrons& ProMCEvent_Electrons::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProMC_2eproto();
  return *default_instance_;
}

ProMCEvent_Electrons* ProMCEvent_Electrons::default_instance_ = NULL;

ProMCEvent_Electrons* ProMCEvent_Electrons::New() const {
  return new ProMCEvent_Electrons;
}

void ProMCEvent_Electrons::Clear() {
  pt_.Clear();
  eta_.Clear();
  phi_.Clear();
  charge_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProMCEvent_Electrons::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 PT = 1 [packed = true];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_pt())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10, input, this->mutable_pt())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Eta;
        break;
      }

      // repeated sint64 Eta = 2 [packed = true];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Eta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_eta())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18, input, this->mutable_eta())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_Phi;
        break;
      }

      // repeated sint64 Phi = 3 [packed = true];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Phi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_phi())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 26, input, this->mutable_phi())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_Charge;
        break;
      }

      // repeated sint32 Charge = 4 [packed = true];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Charge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_charge())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 34, input, this->mutable_charge())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProMCEvent_Electrons::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint64 PT = 1 [packed = true];
  if (this->pt_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pt_cached_byte_size_);
  }
  for (int i = 0; i < this->pt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->pt(i), output);
  }

  // repeated sint64 Eta = 2 [packed = true];
  if (this->eta_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_eta_cached_byte_size_);
  }
  for (int i = 0; i < this->eta_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->eta(i), output);
  }

  // repeated sint64 Phi = 3 [packed = true];
  if (this->phi_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_phi_cached_byte_size_);
  }
  for (int i = 0; i < this->phi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->phi(i), output);
  }

  // repeated sint32 Charge = 4 [packed = true];
  if (this->charge_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_charge_cached_byte_size_);
  }
  for (int i = 0; i < this->charge_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->charge(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProMCEvent_Electrons::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint64 PT = 1 [packed = true];
  if (this->pt_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pt_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->pt(i), target);
  }

  // repeated sint64 Eta = 2 [packed = true];
  if (this->eta_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _eta_cached_byte_size_, target);
  }
  for (int i = 0; i < this->eta_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->eta(i), target);
  }

  // repeated sint64 Phi = 3 [packed = true];
  if (this->phi_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _phi_cached_byte_size_, target);
  }
  for (int i = 0; i < this->phi_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->phi(i), target);
  }

  // repeated sint32 Charge = 4 [packed = true];
  if (this->charge_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _charge_cached_byte_size_, target);
  }
  for (int i = 0; i < this->charge_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->charge(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProMCEvent_Electrons::ByteSize() const {
  int total_size = 0;

  // repeated uint64 PT = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->pt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->pt(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pt_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Eta = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->eta_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->eta(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _eta_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Phi = 3 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->phi_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->phi(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _phi_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 Charge = 4 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->charge_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->charge(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _charge_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProMCEvent_Electrons::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProMCEvent_Electrons* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProMCEvent_Electrons*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProMCEvent_Electrons::MergeFrom(const ProMCEvent_Electrons& from) {
  GOOGLE_CHECK_NE(&from, this);
  pt_.MergeFrom(from.pt_);
  eta_.MergeFrom(from.eta_);
  phi_.MergeFrom(from.phi_);
  charge_.MergeFrom(from.charge_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProMCEvent_Electrons::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProMCEvent_Electrons::CopyFrom(const ProMCEvent_Electrons& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProMCEvent_Electrons::IsInitialized() const {

  return true;
}

void ProMCEvent_Electrons::Swap(ProMCEvent_Electrons* other) {
  if (other != this) {
    pt_.Swap(&other->pt_);
    eta_.Swap(&other->eta_);
    phi_.Swap(&other->phi_);
    charge_.Swap(&other->charge_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProMCEvent_Electrons::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProMCEvent_Electrons_descriptor_;
  metadata.reflection = ProMCEvent_Electrons_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ProMCEvent_Muons::kPTFieldNumber;
const int ProMCEvent_Muons::kEtaFieldNumber;
const int ProMCEvent_Muons::kPhiFieldNumber;
const int ProMCEvent_Muons::kChargeFieldNumber;
#endif  // !_MSC_VER

ProMCEvent_Muons::ProMCEvent_Muons()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProMCEvent_Muons::InitAsDefaultInstance() {
}

ProMCEvent_Muons::ProMCEvent_Muons(const ProMCEvent_Muons& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProMCEvent_Muons::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProMCEvent_Muons::~ProMCEvent_Muons() {
  SharedDtor();
}

void ProMCEvent_Muons::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProMCEvent_Muons::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProMCEvent_Muons::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProMCEvent_Muons_descriptor_;
}

const ProMCEvent_Muons& ProMCEvent_Muons::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProMC_2eproto();
  return *default_instance_;
}

ProMCEvent_Muons* ProMCEvent_Muons::default_instance_ = NULL;

ProMCEvent_Muons* ProMCEvent_Muons::New() const {
  return new ProMCEvent_Muons;
}

void ProMCEvent_Muons::Clear() {
  pt_.Clear();
  eta_.Clear();
  phi_.Clear();
  charge_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProMCEvent_Muons::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 PT = 1 [packed = true];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_pt())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10, input, this->mutable_pt())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Eta;
        break;
      }

      // repeated sint64 Eta = 2 [packed = true];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Eta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_eta())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18, input, this->mutable_eta())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_Phi;
        break;
      }

      // repeated sint64 Phi = 3 [packed = true];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Phi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_phi())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 26, input, this->mutable_phi())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_Charge;
        break;
      }

      // repeated sint32 Charge = 4 [packed = true];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Charge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_charge())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 34, input, this->mutable_charge())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProMCEvent_Muons::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint64 PT = 1 [packed = true];
  if (this->pt_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pt_cached_byte_size_);
  }
  for (int i = 0; i < this->pt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->pt(i), output);
  }

  // repeated sint64 Eta = 2 [packed = true];
  if (this->eta_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_eta_cached_byte_size_);
  }
  for (int i = 0; i < this->eta_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->eta(i), output);
  }

  // repeated sint64 Phi = 3 [packed = true];
  if (this->phi_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_phi_cached_byte_size_);
  }
  for (int i = 0; i < this->phi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->phi(i), output);
  }

  // repeated sint32 Charge = 4 [packed = true];
  if (this->charge_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_charge_cached_byte_size_);
  }
  for (int i = 0; i < this->charge_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->charge(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProMCEvent_Muons::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint64 PT = 1 [packed = true];
  if (this->pt_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pt_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->pt(i), target);
  }

  // repeated sint64 Eta = 2 [packed = true];
  if (this->eta_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _eta_cached_byte_size_, target);
  }
  for (int i = 0; i < this->eta_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->eta(i), target);
  }

  // repeated sint64 Phi = 3 [packed = true];
  if (this->phi_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _phi_cached_byte_size_, target);
  }
  for (int i = 0; i < this->phi_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->phi(i), target);
  }

  // repeated sint32 Charge = 4 [packed = true];
  if (this->charge_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _charge_cached_byte_size_, target);
  }
  for (int i = 0; i < this->charge_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->charge(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProMCEvent_Muons::ByteSize() const {
  int total_size = 0;

  // repeated uint64 PT = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->pt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->pt(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pt_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Eta = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->eta_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->eta(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _eta_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Phi = 3 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->phi_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->phi(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _phi_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 Charge = 4 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->charge_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->charge(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _charge_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProMCEvent_Muons::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProMCEvent_Muons* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProMCEvent_Muons*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProMCEvent_Muons::MergeFrom(const ProMCEvent_Muons& from) {
  GOOGLE_CHECK_NE(&from, this);
  pt_.MergeFrom(from.pt_);
  eta_.MergeFrom(from.eta_);
  phi_.MergeFrom(from.phi_);
  charge_.MergeFrom(from.charge_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProMCEvent_Muons::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProMCEvent_Muons::CopyFrom(const ProMCEvent_Muons& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProMCEvent_Muons::IsInitialized() const {

  return true;
}

void ProMCEvent_Muons::Swap(ProMCEvent_Muons* other) {
  if (other != this) {
    pt_.Swap(&other->pt_);
    eta_.Swap(&other->eta_);
    phi_.Swap(&other->phi_);
    charge_.Swap(&other->charge_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProMCEvent_Muons::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProMCEvent_Muons_descriptor_;
  metadata.reflection = ProMCEvent_Muons_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ProMCEvent_Tracks::kPTFieldNumber;
const int ProMCEvent_Tracks::kEtaFieldNumber;
const int ProMCEvent_Tracks::kPhiFieldNumber;
const int ProMCEvent_Tracks::kChargeFieldNumber;
const int ProMCEvent_Tracks::kXFieldNumber;
const int ProMCEvent_Tracks::kYFieldNumber;
const int ProMCEvent_Tracks::kZFieldNumber;
const int ProMCEvent_Tracks::kXOuterFieldNumber;
const int ProMCEvent_Tracks::kYOuterFieldNumber;
const int ProMCEvent_Tracks::kZOuterFieldNumber;
const int ProMCEvent_Tracks::kEtaOuterFieldNumber;
const int ProMCEvent_Tracks::kPhiOuterFieldNumber;
#endif  // !_MSC_VER

ProMCEvent_Tracks::ProMCEvent_Tracks()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProMCEvent_Tracks::InitAsDefaultInstance() {
}

ProMCEvent_Tracks::ProMCEvent_Tracks(const ProMCEvent_Tracks& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProMCEvent_Tracks::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProMCEvent_Tracks::~ProMCEvent_Tracks() {
  SharedDtor();
}

void ProMCEvent_Tracks::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProMCEvent_Tracks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProMCEvent_Tracks::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProMCEvent_Tracks_descriptor_;
}

const ProMCEvent_Tracks& ProMCEvent_Tracks::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProMC_2eproto();
  return *default_instance_;
}

ProMCEvent_Tracks* ProMCEvent_Tracks::default_instance_ = NULL;

ProMCEvent_Tracks* ProMCEvent_Tracks::New() const {
  return new ProMCEvent_Tracks;
}

void ProMCEvent_Tracks::Clear() {
  pt_.Clear();
  eta_.Clear();
  phi_.Clear();
  charge_.Clear();
  x_.Clear();
  y_.Clear();
  z_.Clear();
  xouter_.Clear();
  youter_.Clear();
  zouter_.Clear();
  etaouter_.Clear();
  phiouter_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProMCEvent_Tracks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 PT = 1 [packed = true];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_pt())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10, input, this->mutable_pt())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Eta;
        break;
      }

      // repeated sint64 Eta = 2 [packed = true];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Eta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_eta())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18, input, this->mutable_eta())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_Phi;
        break;
      }

      // repeated sint64 Phi = 3 [packed = true];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Phi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_phi())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 26, input, this->mutable_phi())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_Charge;
        break;
      }

      // repeated sint32 Charge = 4 [packed = true];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Charge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_charge())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 34, input, this->mutable_charge())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_X;
        break;
      }

      // repeated sint32 X = 5 [packed = true];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_X:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_x())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 42, input, this->mutable_x())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_Y;
        break;
      }

      // repeated sint32 Y = 6 [packed = true];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_y())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 50, input, this->mutable_y())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_Z;
        break;
      }

      // repeated sint32 Z = 7 [packed = true];
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_z())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 58, input, this->mutable_z())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_XOuter;
        break;
      }

      // repeated sint32 XOuter = 8 [packed = true];
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_XOuter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_xouter())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 66, input, this->mutable_xouter())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_YOuter;
        break;
      }

      // repeated sint32 YOuter = 9 [packed = true];
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_YOuter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_youter())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 74, input, this->mutable_youter())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_ZOuter;
        break;
      }

      // repeated sint32 ZOuter = 10 [packed = true];
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ZOuter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_zouter())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 82, input, this->mutable_zouter())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_EtaOuter;
        break;
      }

      // repeated sint32 EtaOuter = 11 [packed = true];
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_EtaOuter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_etaouter())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 90, input, this->mutable_etaouter())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_PhiOuter;
        break;
      }

      // repeated sint32 PhiOuter = 12 [packed = true];
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_PhiOuter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_phiouter())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 98, input, this->mutable_phiouter())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProMCEvent_Tracks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint64 PT = 1 [packed = true];
  if (this->pt_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pt_cached_byte_size_);
  }
  for (int i = 0; i < this->pt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->pt(i), output);
  }

  // repeated sint64 Eta = 2 [packed = true];
  if (this->eta_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_eta_cached_byte_size_);
  }
  for (int i = 0; i < this->eta_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->eta(i), output);
  }

  // repeated sint64 Phi = 3 [packed = true];
  if (this->phi_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_phi_cached_byte_size_);
  }
  for (int i = 0; i < this->phi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->phi(i), output);
  }

  // repeated sint32 Charge = 4 [packed = true];
  if (this->charge_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_charge_cached_byte_size_);
  }
  for (int i = 0; i < this->charge_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->charge(i), output);
  }

  // repeated sint32 X = 5 [packed = true];
  if (this->x_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_x_cached_byte_size_);
  }
  for (int i = 0; i < this->x_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->x(i), output);
  }

  // repeated sint32 Y = 6 [packed = true];
  if (this->y_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_y_cached_byte_size_);
  }
  for (int i = 0; i < this->y_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->y(i), output);
  }

  // repeated sint32 Z = 7 [packed = true];
  if (this->z_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_z_cached_byte_size_);
  }
  for (int i = 0; i < this->z_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->z(i), output);
  }

  // repeated sint32 XOuter = 8 [packed = true];
  if (this->xouter_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_xouter_cached_byte_size_);
  }
  for (int i = 0; i < this->xouter_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->xouter(i), output);
  }

  // repeated sint32 YOuter = 9 [packed = true];
  if (this->youter_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_youter_cached_byte_size_);
  }
  for (int i = 0; i < this->youter_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->youter(i), output);
  }

  // repeated sint32 ZOuter = 10 [packed = true];
  if (this->zouter_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_zouter_cached_byte_size_);
  }
  for (int i = 0; i < this->zouter_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->zouter(i), output);
  }

  // repeated sint32 EtaOuter = 11 [packed = true];
  if (this->etaouter_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_etaouter_cached_byte_size_);
  }
  for (int i = 0; i < this->etaouter_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->etaouter(i), output);
  }

  // repeated sint32 PhiOuter = 12 [packed = true];
  if (this->phiouter_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_phiouter_cached_byte_size_);
  }
  for (int i = 0; i < this->phiouter_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->phiouter(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProMCEvent_Tracks::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint64 PT = 1 [packed = true];
  if (this->pt_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pt_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->pt(i), target);
  }

  // repeated sint64 Eta = 2 [packed = true];
  if (this->eta_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _eta_cached_byte_size_, target);
  }
  for (int i = 0; i < this->eta_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->eta(i), target);
  }

  // repeated sint64 Phi = 3 [packed = true];
  if (this->phi_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _phi_cached_byte_size_, target);
  }
  for (int i = 0; i < this->phi_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->phi(i), target);
  }

  // repeated sint32 Charge = 4 [packed = true];
  if (this->charge_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _charge_cached_byte_size_, target);
  }
  for (int i = 0; i < this->charge_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->charge(i), target);
  }

  // repeated sint32 X = 5 [packed = true];
  if (this->x_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _x_cached_byte_size_, target);
  }
  for (int i = 0; i < this->x_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->x(i), target);
  }

  // repeated sint32 Y = 6 [packed = true];
  if (this->y_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _y_cached_byte_size_, target);
  }
  for (int i = 0; i < this->y_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->y(i), target);
  }

  // repeated sint32 Z = 7 [packed = true];
  if (this->z_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _z_cached_byte_size_, target);
  }
  for (int i = 0; i < this->z_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->z(i), target);
  }

  // repeated sint32 XOuter = 8 [packed = true];
  if (this->xouter_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _xouter_cached_byte_size_, target);
  }
  for (int i = 0; i < this->xouter_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->xouter(i), target);
  }

  // repeated sint32 YOuter = 9 [packed = true];
  if (this->youter_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _youter_cached_byte_size_, target);
  }
  for (int i = 0; i < this->youter_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->youter(i), target);
  }

  // repeated sint32 ZOuter = 10 [packed = true];
  if (this->zouter_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _zouter_cached_byte_size_, target);
  }
  for (int i = 0; i < this->zouter_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->zouter(i), target);
  }

  // repeated sint32 EtaOuter = 11 [packed = true];
  if (this->etaouter_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _etaouter_cached_byte_size_, target);
  }
  for (int i = 0; i < this->etaouter_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->etaouter(i), target);
  }

  // repeated sint32 PhiOuter = 12 [packed = true];
  if (this->phiouter_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _phiouter_cached_byte_size_, target);
  }
  for (int i = 0; i < this->phiouter_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->phiouter(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProMCEvent_Tracks::ByteSize() const {
  int total_size = 0;

  // repeated uint64 PT = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->pt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->pt(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pt_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Eta = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->eta_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->eta(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _eta_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Phi = 3 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->phi_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->phi(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _phi_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 Charge = 4 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->charge_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->charge(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _charge_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 X = 5 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->x_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->x(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _x_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 Y = 6 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->y_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->y(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _y_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 Z = 7 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->z_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->z(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _z_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 XOuter = 8 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->xouter_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->xouter(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _xouter_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 YOuter = 9 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->youter_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->youter(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _youter_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 ZOuter = 10 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->zouter_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->zouter(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _zouter_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 EtaOuter = 11 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->etaouter_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->etaouter(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _etaouter_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 PhiOuter = 12 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->phiouter_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->phiouter(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _phiouter_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProMCEvent_Tracks::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProMCEvent_Tracks* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProMCEvent_Tracks*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProMCEvent_Tracks::MergeFrom(const ProMCEvent_Tracks& from) {
  GOOGLE_CHECK_NE(&from, this);
  pt_.MergeFrom(from.pt_);
  eta_.MergeFrom(from.eta_);
  phi_.MergeFrom(from.phi_);
  charge_.MergeFrom(from.charge_);
  x_.MergeFrom(from.x_);
  y_.MergeFrom(from.y_);
  z_.MergeFrom(from.z_);
  xouter_.MergeFrom(from.xouter_);
  youter_.MergeFrom(from.youter_);
  zouter_.MergeFrom(from.zouter_);
  etaouter_.MergeFrom(from.etaouter_);
  phiouter_.MergeFrom(from.phiouter_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProMCEvent_Tracks::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProMCEvent_Tracks::CopyFrom(const ProMCEvent_Tracks& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProMCEvent_Tracks::IsInitialized() const {

  return true;
}

void ProMCEvent_Tracks::Swap(ProMCEvent_Tracks* other) {
  if (other != this) {
    pt_.Swap(&other->pt_);
    eta_.Swap(&other->eta_);
    phi_.Swap(&other->phi_);
    charge_.Swap(&other->charge_);
    x_.Swap(&other->x_);
    y_.Swap(&other->y_);
    z_.Swap(&other->z_);
    xouter_.Swap(&other->xouter_);
    youter_.Swap(&other->youter_);
    zouter_.Swap(&other->zouter_);
    etaouter_.Swap(&other->etaouter_);
    phiouter_.Swap(&other->phiouter_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProMCEvent_Tracks::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProMCEvent_Tracks_descriptor_;
  metadata.reflection = ProMCEvent_Tracks_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ProMCEvent_Photons::kPTFieldNumber;
const int ProMCEvent_Photons::kEtaFieldNumber;
const int ProMCEvent_Photons::kPhiFieldNumber;
const int ProMCEvent_Photons::kEnergyFieldNumber;
#endif  // !_MSC_VER

ProMCEvent_Photons::ProMCEvent_Photons()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProMCEvent_Photons::InitAsDefaultInstance() {
}

ProMCEvent_Photons::ProMCEvent_Photons(const ProMCEvent_Photons& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProMCEvent_Photons::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProMCEvent_Photons::~ProMCEvent_Photons() {
  SharedDtor();
}

void ProMCEvent_Photons::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProMCEvent_Photons::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProMCEvent_Photons::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProMCEvent_Photons_descriptor_;
}

const ProMCEvent_Photons& ProMCEvent_Photons::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProMC_2eproto();
  return *default_instance_;
}

ProMCEvent_Photons* ProMCEvent_Photons::default_instance_ = NULL;

ProMCEvent_Photons* ProMCEvent_Photons::New() const {
  return new ProMCEvent_Photons;
}

void ProMCEvent_Photons::Clear() {
  pt_.Clear();
  eta_.Clear();
  phi_.Clear();
  energy_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProMCEvent_Photons::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 PT = 1 [packed = true];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_pt())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10, input, this->mutable_pt())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Eta;
        break;
      }

      // repeated sint64 Eta = 2 [packed = true];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Eta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_eta())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18, input, this->mutable_eta())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_Phi;
        break;
      }

      // repeated sint64 Phi = 3 [packed = true];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Phi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_phi())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 26, input, this->mutable_phi())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_Energy;
        break;
      }

      // repeated sint64 Energy = 4 [packed = true];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Energy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_energy())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 34, input, this->mutable_energy())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProMCEvent_Photons::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint64 PT = 1 [packed = true];
  if (this->pt_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pt_cached_byte_size_);
  }
  for (int i = 0; i < this->pt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->pt(i), output);
  }

  // repeated sint64 Eta = 2 [packed = true];
  if (this->eta_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_eta_cached_byte_size_);
  }
  for (int i = 0; i < this->eta_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->eta(i), output);
  }

  // repeated sint64 Phi = 3 [packed = true];
  if (this->phi_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_phi_cached_byte_size_);
  }
  for (int i = 0; i < this->phi_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->phi(i), output);
  }

  // repeated sint64 Energy = 4 [packed = true];
  if (this->energy_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_energy_cached_byte_size_);
  }
  for (int i = 0; i < this->energy_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->energy(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProMCEvent_Photons::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint64 PT = 1 [packed = true];
  if (this->pt_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pt_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->pt(i), target);
  }

  // repeated sint64 Eta = 2 [packed = true];
  if (this->eta_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _eta_cached_byte_size_, target);
  }
  for (int i = 0; i < this->eta_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->eta(i), target);
  }

  // repeated sint64 Phi = 3 [packed = true];
  if (this->phi_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _phi_cached_byte_size_, target);
  }
  for (int i = 0; i < this->phi_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->phi(i), target);
  }

  // repeated sint64 Energy = 4 [packed = true];
  if (this->energy_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _energy_cached_byte_size_, target);
  }
  for (int i = 0; i < this->energy_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->energy(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProMCEvent_Photons::ByteSize() const {
  int total_size = 0;

  // repeated uint64 PT = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->pt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->pt(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pt_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Eta = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->eta_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->eta(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _eta_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Phi = 3 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->phi_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->phi(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _phi_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 Energy = 4 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->energy_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->energy(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _energy_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProMCEvent_Photons::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProMCEvent_Photons* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProMCEvent_Photons*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProMCEvent_Photons::MergeFrom(const ProMCEvent_Photons& from) {
  GOOGLE_CHECK_NE(&from, this);
  pt_.MergeFrom(from.pt_);
  eta_.MergeFrom(from.eta_);
  phi_.MergeFrom(from.phi_);
  energy_.MergeFrom(from.energy_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProMCEvent_Photons::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProMCEvent_Photons::CopyFrom(const ProMCEvent_Photons& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProMCEvent_Photons::IsInitialized() const {

  return true;
}

void ProMCEvent_Photons::Swap(ProMCEvent_Photons* other) {
  if (other != this) {
    pt_.Swap(&other->pt_);
    eta_.Swap(&other->eta_);
    phi_.Swap(&other->phi_);
    energy_.Swap(&other->energy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProMCEvent_Photons::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProMCEvent_Photons_descriptor_;
  metadata.reflection = ProMCEvent_Photons_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ProMCEvent_MissingET::kMETFieldNumber;
const int ProMCEvent_MissingET::kPhiFieldNumber;
#endif  // !_MSC_VER

ProMCEvent_MissingET::ProMCEvent_MissingET()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProMCEvent_MissingET::InitAsDefaultInstance() {
}

ProMCEvent_MissingET::ProMCEvent_MissingET(const ProMCEvent_MissingET& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProMCEvent_MissingET::SharedCtor() {
  _cached_size_ = 0;
  met_ = GOOGLE_ULONGLONG(0);
  phi_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProMCEvent_MissingET::~ProMCEvent_MissingET() {
  SharedDtor();
}

void ProMCEvent_MissingET::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProMCEvent_MissingET::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProMCEvent_MissingET::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProMCEvent_MissingET_descriptor_;
}

const ProMCEvent_MissingET& ProMCEvent_MissingET::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProMC_2eproto();
  return *default_instance_;
}

ProMCEvent_MissingET* ProMCEvent_MissingET::default_instance_ = NULL;

ProMCEvent_MissingET* ProMCEvent_MissingET::New() const {
  return new ProMCEvent_MissingET;
}

void ProMCEvent_MissingET::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    met_ = GOOGLE_ULONGLONG(0);
    phi_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProMCEvent_MissingET::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 MET = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &met_)));
          set_has_met();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Phi;
        break;
      }

      // optional sint64 Phi = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Phi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &phi_)));
          set_has_phi();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProMCEvent_MissingET::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 MET = 1;
  if (has_met()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->met(), output);
  }

  // optional sint64 Phi = 2;
  if (has_phi()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->phi(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProMCEvent_MissingET::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 MET = 1;
  if (has_met()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->met(), target);
  }

  // optional sint64 Phi = 2;
  if (has_phi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->phi(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProMCEvent_MissingET::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 MET = 1;
    if (has_met()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->met());
    }

    // optional sint64 Phi = 2;
    if (has_phi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->phi());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProMCEvent_MissingET::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProMCEvent_MissingET* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProMCEvent_MissingET*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProMCEvent_MissingET::MergeFrom(const ProMCEvent_MissingET& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_met()) {
      set_met(from.met());
    }
    if (from.has_phi()) {
      set_phi(from.phi());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProMCEvent_MissingET::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProMCEvent_MissingET::CopyFrom(const ProMCEvent_MissingET& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProMCEvent_MissingET::IsInitialized() const {

  return true;
}

void ProMCEvent_MissingET::Swap(ProMCEvent_MissingET* other) {
  if (other != this) {
    std::swap(met_, other->met_);
    std::swap(phi_, other->phi_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProMCEvent_MissingET::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProMCEvent_MissingET_descriptor_;
  metadata.reflection = ProMCEvent_MissingET_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ProMCEvent_HT::kHTFieldNumber;
#endif  // !_MSC_VER

ProMCEvent_HT::ProMCEvent_HT()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProMCEvent_HT::InitAsDefaultInstance() {
}

ProMCEvent_HT::ProMCEvent_HT(const ProMCEvent_HT& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProMCEvent_HT::SharedCtor() {
  _cached_size_ = 0;
  ht_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProMCEvent_HT::~ProMCEvent_HT() {
  SharedDtor();
}

void ProMCEvent_HT::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProMCEvent_HT::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProMCEvent_HT::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProMCEvent_HT_descriptor_;
}

const ProMCEvent_HT& ProMCEvent_HT::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProMC_2eproto();
  return *default_instance_;
}

ProMCEvent_HT* ProMCEvent_HT::default_instance_ = NULL;

ProMCEvent_HT* ProMCEvent_HT::New() const {
  return new ProMCEvent_HT;
}

void ProMCEvent_HT::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ht_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProMCEvent_HT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 HT = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ht_)));
          set_has_ht();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProMCEvent_HT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 HT = 1;
  if (has_ht()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ht(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProMCEvent_HT::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 HT = 1;
  if (has_ht()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ht(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProMCEvent_HT::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 HT = 1;
    if (has_ht()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ht());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProMCEvent_HT::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProMCEvent_HT* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProMCEvent_HT*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProMCEvent_HT::MergeFrom(const ProMCEvent_HT& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ht()) {
      set_ht(from.ht());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProMCEvent_HT::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProMCEvent_HT::CopyFrom(const ProMCEvent_HT& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProMCEvent_HT::IsInitialized() const {

  return true;
}

void ProMCEvent_HT::Swap(ProMCEvent_HT* other) {
  if (other != this) {
    std::swap(ht_, other->ht_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProMCEvent_HT::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProMCEvent_HT_descriptor_;
  metadata.reflection = ProMCEvent_HT_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ProMCEvent_Rho::kRhoFieldNumber;
#endif  // !_MSC_VER

ProMCEvent_Rho::ProMCEvent_Rho()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProMCEvent_Rho::InitAsDefaultInstance() {
}

ProMCEvent_Rho::ProMCEvent_Rho(const ProMCEvent_Rho& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProMCEvent_Rho::SharedCtor() {
  _cached_size_ = 0;
  rho_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProMCEvent_Rho::~ProMCEvent_Rho() {
  SharedDtor();
}

void ProMCEvent_Rho::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProMCEvent_Rho::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProMCEvent_Rho::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProMCEvent_Rho_descriptor_;
}

const ProMCEvent_Rho& ProMCEvent_Rho::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProMC_2eproto();
  return *default_instance_;
}

ProMCEvent_Rho* ProMCEvent_Rho::default_instance_ = NULL;

ProMCEvent_Rho* ProMCEvent_Rho::New() const {
  return new ProMCEvent_Rho;
}

void ProMCEvent_Rho::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rho_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProMCEvent_Rho::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Rho = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rho_)));
          set_has_rho();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProMCEvent_Rho::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint64 Rho = 1;
  if (has_rho()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rho(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProMCEvent_Rho::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint64 Rho = 1;
  if (has_rho()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rho(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProMCEvent_Rho::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 Rho = 1;
    if (has_rho()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rho());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProMCEvent_Rho::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProMCEvent_Rho* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProMCEvent_Rho*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProMCEvent_Rho::MergeFrom(const ProMCEvent_Rho& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rho()) {
      set_rho(from.rho());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProMCEvent_Rho::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProMCEvent_Rho::CopyFrom(const ProMCEvent_Rho& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProMCEvent_Rho::IsInitialized() const {

  return true;
}

void ProMCEvent_Rho::Swap(ProMCEvent_Rho* other) {
  if (other != this) {
    std::swap(rho_, other->rho_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProMCEvent_Rho::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProMCEvent_Rho_descriptor_;
  metadata.reflection = ProMCEvent_Rho_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ProMCEvent::kEventFieldNumber;
const int ProMCEvent::kParticlesFieldNumber;
const int ProMCEvent::kJetsFieldNumber;
const int ProMCEvent::kGenjetsFieldNumber;
const int ProMCEvent::kCajetsFieldNumber;
const int ProMCEvent::kElectronsFieldNumber;
const int ProMCEvent::kMuonsFieldNumber;
const int ProMCEvent::kTracksFieldNumber;
const int ProMCEvent::kPhotonsFieldNumber;
const int ProMCEvent::kMissingETFieldNumber;
const int ProMCEvent::kHtFieldNumber;
const int ProMCEvent::kRhoFieldNumber;
#endif  // !_MSC_VER

ProMCEvent::ProMCEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProMCEvent::InitAsDefaultInstance() {
  event_ = const_cast< ::promc::ProMCEvent_Event*>(&::promc::ProMCEvent_Event::default_instance());
  particles_ = const_cast< ::promc::ProMCEvent_Particles*>(&::promc::ProMCEvent_Particles::default_instance());
  jets_ = const_cast< ::promc::ProMCEvent_Jets*>(&::promc::ProMCEvent_Jets::default_instance());
  genjets_ = const_cast< ::promc::ProMCEvent_GenJets*>(&::promc::ProMCEvent_GenJets::default_instance());
  cajets_ = const_cast< ::promc::ProMCEvent_CAJets*>(&::promc::ProMCEvent_CAJets::default_instance());
  electrons_ = const_cast< ::promc::ProMCEvent_Electrons*>(&::promc::ProMCEvent_Electrons::default_instance());
  muons_ = const_cast< ::promc::ProMCEvent_Muons*>(&::promc::ProMCEvent_Muons::default_instance());
  tracks_ = const_cast< ::promc::ProMCEvent_Tracks*>(&::promc::ProMCEvent_Tracks::default_instance());
  photons_ = const_cast< ::promc::ProMCEvent_Photons*>(&::promc::ProMCEvent_Photons::default_instance());
  missinget_ = const_cast< ::promc::ProMCEvent_MissingET*>(&::promc::ProMCEvent_MissingET::default_instance());
  ht_ = const_cast< ::promc::ProMCEvent_HT*>(&::promc::ProMCEvent_HT::default_instance());
  rho_ = const_cast< ::promc::ProMCEvent_Rho*>(&::promc::ProMCEvent_Rho::default_instance());
}

ProMCEvent::ProMCEvent(const ProMCEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProMCEvent::SharedCtor() {
  _cached_size_ = 0;
  event_ = NULL;
  particles_ = NULL;
  jets_ = NULL;
  genjets_ = NULL;
  cajets_ = NULL;
  electrons_ = NULL;
  muons_ = NULL;
  tracks_ = NULL;
  photons_ = NULL;
  missinget_ = NULL;
  ht_ = NULL;
  rho_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProMCEvent::~ProMCEvent() {
  SharedDtor();
}

void ProMCEvent::SharedDtor() {
  if (this != default_instance_) {
    delete event_;
    delete particles_;
    delete jets_;
    delete genjets_;
    delete cajets_;
    delete electrons_;
    delete muons_;
    delete tracks_;
    delete photons_;
    delete missinget_;
    delete ht_;
    delete rho_;
  }
}

void ProMCEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProMCEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProMCEvent_descriptor_;
}

const ProMCEvent& ProMCEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProMC_2eproto();
  return *default_instance_;
}

ProMCEvent* ProMCEvent::default_instance_ = NULL;

ProMCEvent* ProMCEvent::New() const {
  return new ProMCEvent;
}

void ProMCEvent::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_event()) {
      if (event_ != NULL) event_->::promc::ProMCEvent_Event::Clear();
    }
    if (has_particles()) {
      if (particles_ != NULL) particles_->::promc::ProMCEvent_Particles::Clear();
    }
    if (has_jets()) {
      if (jets_ != NULL) jets_->::promc::ProMCEvent_Jets::Clear();
    }
    if (has_genjets()) {
      if (genjets_ != NULL) genjets_->::promc::ProMCEvent_GenJets::Clear();
    }
    if (has_cajets()) {
      if (cajets_ != NULL) cajets_->::promc::ProMCEvent_CAJets::Clear();
    }
    if (has_electrons()) {
      if (electrons_ != NULL) electrons_->::promc::ProMCEvent_Electrons::Clear();
    }
    if (has_muons()) {
      if (muons_ != NULL) muons_->::promc::ProMCEvent_Muons::Clear();
    }
    if (has_tracks()) {
      if (tracks_ != NULL) tracks_->::promc::ProMCEvent_Tracks::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_photons()) {
      if (photons_ != NULL) photons_->::promc::ProMCEvent_Photons::Clear();
    }
    if (has_missinget()) {
      if (missinget_ != NULL) missinget_->::promc::ProMCEvent_MissingET::Clear();
    }
    if (has_ht()) {
      if (ht_ != NULL) ht_->::promc::ProMCEvent_HT::Clear();
    }
    if (has_rho()) {
      if (rho_ != NULL) rho_->::promc::ProMCEvent_Rho::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProMCEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .promc.ProMCEvent.Event event = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_particles;
        break;
      }

      // optional .promc.ProMCEvent.Particles particles = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_particles:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_particles()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_jets;
        break;
      }

      // optional .promc.ProMCEvent.Jets jets = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_jets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_jets()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_genjets;
        break;
      }

      // optional .promc.ProMCEvent.GenJets genjets = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_genjets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_genjets()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_cajets;
        break;
      }

      // optional .promc.ProMCEvent.CAJets cajets = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cajets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cajets()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_electrons;
        break;
      }

      // optional .promc.ProMCEvent.Electrons electrons = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_electrons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_electrons()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_muons;
        break;
      }

      // optional .promc.ProMCEvent.Muons muons = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_muons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_muons()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_tracks;
        break;
      }

      // optional .promc.ProMCEvent.Tracks tracks = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tracks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tracks()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_photons;
        break;
      }

      // optional .promc.ProMCEvent.Photons photons = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_photons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_photons()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_missingET;
        break;
      }

      // optional .promc.ProMCEvent.MissingET missingET = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_missingET:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_missinget()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_ht;
        break;
      }

      // optional .promc.ProMCEvent.HT ht = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ht:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ht()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_rho;
        break;
      }

      // optional .promc.ProMCEvent.Rho rho = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rho:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rho()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProMCEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .promc.ProMCEvent.Event event = 1;
  if (has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->event(), output);
  }

  // optional .promc.ProMCEvent.Particles particles = 2;
  if (has_particles()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->particles(), output);
  }

  // optional .promc.ProMCEvent.Jets jets = 3;
  if (has_jets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->jets(), output);
  }

  // optional .promc.ProMCEvent.GenJets genjets = 4;
  if (has_genjets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->genjets(), output);
  }

  // optional .promc.ProMCEvent.CAJets cajets = 5;
  if (has_cajets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->cajets(), output);
  }

  // optional .promc.ProMCEvent.Electrons electrons = 6;
  if (has_electrons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->electrons(), output);
  }

  // optional .promc.ProMCEvent.Muons muons = 7;
  if (has_muons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->muons(), output);
  }

  // optional .promc.ProMCEvent.Tracks tracks = 8;
  if (has_tracks()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->tracks(), output);
  }

  // optional .promc.ProMCEvent.Photons photons = 9;
  if (has_photons()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->photons(), output);
  }

  // optional .promc.ProMCEvent.MissingET missingET = 10;
  if (has_missinget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->missinget(), output);
  }

  // optional .promc.ProMCEvent.HT ht = 11;
  if (has_ht()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->ht(), output);
  }

  // optional .promc.ProMCEvent.Rho rho = 12;
  if (has_rho()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->rho(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProMCEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .promc.ProMCEvent.Event event = 1;
  if (has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->event(), target);
  }

  // optional .promc.ProMCEvent.Particles particles = 2;
  if (has_particles()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->particles(), target);
  }

  // optional .promc.ProMCEvent.Jets jets = 3;
  if (has_jets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->jets(), target);
  }

  // optional .promc.ProMCEvent.GenJets genjets = 4;
  if (has_genjets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->genjets(), target);
  }

  // optional .promc.ProMCEvent.CAJets cajets = 5;
  if (has_cajets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->cajets(), target);
  }

  // optional .promc.ProMCEvent.Electrons electrons = 6;
  if (has_electrons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->electrons(), target);
  }

  // optional .promc.ProMCEvent.Muons muons = 7;
  if (has_muons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->muons(), target);
  }

  // optional .promc.ProMCEvent.Tracks tracks = 8;
  if (has_tracks()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->tracks(), target);
  }

  // optional .promc.ProMCEvent.Photons photons = 9;
  if (has_photons()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->photons(), target);
  }

  // optional .promc.ProMCEvent.MissingET missingET = 10;
  if (has_missinget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->missinget(), target);
  }

  // optional .promc.ProMCEvent.HT ht = 11;
  if (has_ht()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->ht(), target);
  }

  // optional .promc.ProMCEvent.Rho rho = 12;
  if (has_rho()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->rho(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProMCEvent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .promc.ProMCEvent.Event event = 1;
    if (has_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->event());
    }

    // optional .promc.ProMCEvent.Particles particles = 2;
    if (has_particles()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->particles());
    }

    // optional .promc.ProMCEvent.Jets jets = 3;
    if (has_jets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->jets());
    }

    // optional .promc.ProMCEvent.GenJets genjets = 4;
    if (has_genjets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->genjets());
    }

    // optional .promc.ProMCEvent.CAJets cajets = 5;
    if (has_cajets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cajets());
    }

    // optional .promc.ProMCEvent.Electrons electrons = 6;
    if (has_electrons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->electrons());
    }

    // optional .promc.ProMCEvent.Muons muons = 7;
    if (has_muons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->muons());
    }

    // optional .promc.ProMCEvent.Tracks tracks = 8;
    if (has_tracks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tracks());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .promc.ProMCEvent.Photons photons = 9;
    if (has_photons()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->photons());
    }

    // optional .promc.ProMCEvent.MissingET missingET = 10;
    if (has_missinget()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->missinget());
    }

    // optional .promc.ProMCEvent.HT ht = 11;
    if (has_ht()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ht());
    }

    // optional .promc.ProMCEvent.Rho rho = 12;
    if (has_rho()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rho());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProMCEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProMCEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProMCEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProMCEvent::MergeFrom(const ProMCEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_event()) {
      mutable_event()->::promc::ProMCEvent_Event::MergeFrom(from.event());
    }
    if (from.has_particles()) {
      mutable_particles()->::promc::ProMCEvent_Particles::MergeFrom(from.particles());
    }
    if (from.has_jets()) {
      mutable_jets()->::promc::ProMCEvent_Jets::MergeFrom(from.jets());
    }
    if (from.has_genjets()) {
      mutable_genjets()->::promc::ProMCEvent_GenJets::MergeFrom(from.genjets());
    }
    if (from.has_cajets()) {
      mutable_cajets()->::promc::ProMCEvent_CAJets::MergeFrom(from.cajets());
    }
    if (from.has_electrons()) {
      mutable_electrons()->::promc::ProMCEvent_Electrons::MergeFrom(from.electrons());
    }
    if (from.has_muons()) {
      mutable_muons()->::promc::ProMCEvent_Muons::MergeFrom(from.muons());
    }
    if (from.has_tracks()) {
      mutable_tracks()->::promc::ProMCEvent_Tracks::MergeFrom(from.tracks());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_photons()) {
      mutable_photons()->::promc::ProMCEvent_Photons::MergeFrom(from.photons());
    }
    if (from.has_missinget()) {
      mutable_missinget()->::promc::ProMCEvent_MissingET::MergeFrom(from.missinget());
    }
    if (from.has_ht()) {
      mutable_ht()->::promc::ProMCEvent_HT::MergeFrom(from.ht());
    }
    if (from.has_rho()) {
      mutable_rho()->::promc::ProMCEvent_Rho::MergeFrom(from.rho());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProMCEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProMCEvent::CopyFrom(const ProMCEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProMCEvent::IsInitialized() const {

  return true;
}

void ProMCEvent::Swap(ProMCEvent* other) {
  if (other != this) {
    std::swap(event_, other->event_);
    std::swap(particles_, other->particles_);
    std::swap(jets_, other->jets_);
    std::swap(genjets_, other->genjets_);
    std::swap(cajets_, other->cajets_);
    std::swap(electrons_, other->electrons_);
    std::swap(muons_, other->muons_);
    std::swap(tracks_, other->tracks_);
    std::swap(photons_, other->photons_);
    std::swap(missinget_, other->missinget_);
    std::swap(ht_, other->ht_);
    std::swap(rho_, other->rho_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProMCEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProMCEvent_descriptor_;
  metadata.reflection = ProMCEvent_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace promc

// @@protoc_insertion_point(global_scope)
