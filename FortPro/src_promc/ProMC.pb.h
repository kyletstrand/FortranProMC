// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProMC.proto

#ifndef PROTOBUF_ProMC_2eproto__INCLUDED
#define PROTOBUF_ProMC_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace promc {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProMC_2eproto();
void protobuf_AssignDesc_ProMC_2eproto();
void protobuf_ShutdownFile_ProMC_2eproto();

class ProMCEvent;
class ProMCEvent_Event;
class ProMCEvent_Particles;
class ProMCEvent_Jets;
class ProMCEvent_CAJets;
class ProMCEvent_GenJets;
class ProMCEvent_Electrons;
class ProMCEvent_Muons;
class ProMCEvent_Tracks;
class ProMCEvent_Photons;
class ProMCEvent_MissingET;
class ProMCEvent_HT;
class ProMCEvent_Rho;

// ===================================================================

class ProMCEvent_Event : public ::google::protobuf::Message {
 public:
  ProMCEvent_Event();
  virtual ~ProMCEvent_Event();

  ProMCEvent_Event(const ProMCEvent_Event& from);

  inline ProMCEvent_Event& operator=(const ProMCEvent_Event& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProMCEvent_Event& default_instance();

  void Swap(ProMCEvent_Event* other);

  // implements Message ----------------------------------------------

  ProMCEvent_Event* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProMCEvent_Event& from);
  void MergeFrom(const ProMCEvent_Event& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Number = 1;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 1;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // optional int32 Process_ID = 2;
  inline bool has_process_id() const;
  inline void clear_process_id();
  static const int kProcessIDFieldNumber = 2;
  inline ::google::protobuf::int32 process_id() const;
  inline void set_process_id(::google::protobuf::int32 value);

  // optional int32 MPI = 3;
  inline bool has_mpi() const;
  inline void clear_mpi();
  static const int kMPIFieldNumber = 3;
  inline ::google::protobuf::int32 mpi() const;
  inline void set_mpi(::google::protobuf::int32 value);

  // optional int32 ID1 = 4;
  inline bool has_id1() const;
  inline void clear_id1();
  static const int kID1FieldNumber = 4;
  inline ::google::protobuf::int32 id1() const;
  inline void set_id1(::google::protobuf::int32 value);

  // optional int32 ID2 = 5;
  inline bool has_id2() const;
  inline void clear_id2();
  static const int kID2FieldNumber = 5;
  inline ::google::protobuf::int32 id2() const;
  inline void set_id2(::google::protobuf::int32 value);

  // optional float PDF1 = 6;
  inline bool has_pdf1() const;
  inline void clear_pdf1();
  static const int kPDF1FieldNumber = 6;
  inline float pdf1() const;
  inline void set_pdf1(float value);

  // optional float PDF2 = 7;
  inline bool has_pdf2() const;
  inline void clear_pdf2();
  static const int kPDF2FieldNumber = 7;
  inline float pdf2() const;
  inline void set_pdf2(float value);

  // optional float X1 = 8;
  inline bool has_x1() const;
  inline void clear_x1();
  static const int kX1FieldNumber = 8;
  inline float x1() const;
  inline void set_x1(float value);

  // optional float X2 = 9;
  inline bool has_x2() const;
  inline void clear_x2();
  static const int kX2FieldNumber = 9;
  inline float x2() const;
  inline void set_x2(float value);

  // optional float Scale_PDF = 10;
  inline bool has_scale_pdf() const;
  inline void clear_scale_pdf();
  static const int kScalePDFFieldNumber = 10;
  inline float scale_pdf() const;
  inline void set_scale_pdf(float value);

  // optional float Alpha_QED = 11;
  inline bool has_alpha_qed() const;
  inline void clear_alpha_qed();
  static const int kAlphaQEDFieldNumber = 11;
  inline float alpha_qed() const;
  inline void set_alpha_qed(float value);

  // optional float Scale = 12;
  inline bool has_scale() const;
  inline void clear_scale();
  static const int kScaleFieldNumber = 12;
  inline float scale() const;
  inline void set_scale(float value);

  // optional float Alpha_QCD = 13;
  inline bool has_alpha_qcd() const;
  inline void clear_alpha_qcd();
  static const int kAlphaQCDFieldNumber = 13;
  inline float alpha_qcd() const;
  inline void set_alpha_qcd(float value);

  // optional double Weight = 14;
  inline bool has_weight() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 14;
  inline double weight() const;
  inline void set_weight(double value);

  // @@protoc_insertion_point(class_scope:promc.ProMCEvent.Event)
 private:
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_process_id();
  inline void clear_has_process_id();
  inline void set_has_mpi();
  inline void clear_has_mpi();
  inline void set_has_id1();
  inline void clear_has_id1();
  inline void set_has_id2();
  inline void clear_has_id2();
  inline void set_has_pdf1();
  inline void clear_has_pdf1();
  inline void set_has_pdf2();
  inline void clear_has_pdf2();
  inline void set_has_x1();
  inline void clear_has_x1();
  inline void set_has_x2();
  inline void clear_has_x2();
  inline void set_has_scale_pdf();
  inline void clear_has_scale_pdf();
  inline void set_has_alpha_qed();
  inline void clear_has_alpha_qed();
  inline void set_has_scale();
  inline void clear_has_scale();
  inline void set_has_alpha_qcd();
  inline void clear_has_alpha_qcd();
  inline void set_has_weight();
  inline void clear_has_weight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 number_;
  ::google::protobuf::int32 process_id_;
  ::google::protobuf::int32 mpi_;
  ::google::protobuf::int32 id1_;
  ::google::protobuf::int32 id2_;
  float pdf1_;
  float pdf2_;
  float x1_;
  float x2_;
  float scale_pdf_;
  float alpha_qed_;
  float scale_;
  double weight_;
  float alpha_qcd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_ProMC_2eproto();
  friend void protobuf_AssignDesc_ProMC_2eproto();
  friend void protobuf_ShutdownFile_ProMC_2eproto();

  void InitAsDefaultInstance();
  static ProMCEvent_Event* default_instance_;
};
// -------------------------------------------------------------------

class ProMCEvent_Particles : public ::google::protobuf::Message {
 public:
  ProMCEvent_Particles();
  virtual ~ProMCEvent_Particles();

  ProMCEvent_Particles(const ProMCEvent_Particles& from);

  inline ProMCEvent_Particles& operator=(const ProMCEvent_Particles& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProMCEvent_Particles& default_instance();

  void Swap(ProMCEvent_Particles* other);

  // implements Message ----------------------------------------------

  ProMCEvent_Particles* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProMCEvent_Particles& from);
  void MergeFrom(const ProMCEvent_Particles& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 id = 1 [packed = true];
  inline int id_size() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id(int index) const;
  inline void set_id(int index, ::google::protobuf::uint32 value);
  inline void add_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_id();

  // repeated sint32 pdg_id = 2 [packed = true];
  inline int pdg_id_size() const;
  inline void clear_pdg_id();
  static const int kPdgIdFieldNumber = 2;
  inline ::google::protobuf::int32 pdg_id(int index) const;
  inline void set_pdg_id(int index, ::google::protobuf::int32 value);
  inline void add_pdg_id(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pdg_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pdg_id();

  // repeated uint32 status = 3 [packed = true];
  inline int status_size() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status(int index) const;
  inline void set_status(int index, ::google::protobuf::uint32 value);
  inline void add_status(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      status() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_status();

  // repeated uint64 mass = 4 [packed = true];
  inline int mass_size() const;
  inline void clear_mass();
  static const int kMassFieldNumber = 4;
  inline ::google::protobuf::uint64 mass(int index) const;
  inline void set_mass(int index, ::google::protobuf::uint64 value);
  inline void add_mass(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      mass() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_mass();

  // repeated sint64 Px = 5 [packed = true];
  inline int px_size() const;
  inline void clear_px();
  static const int kPxFieldNumber = 5;
  inline ::google::protobuf::int64 px(int index) const;
  inline void set_px(int index, ::google::protobuf::int64 value);
  inline void add_px(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      px() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_px();

  // repeated sint64 Py = 6 [packed = true];
  inline int py_size() const;
  inline void clear_py();
  static const int kPyFieldNumber = 6;
  inline ::google::protobuf::int64 py(int index) const;
  inline void set_py(int index, ::google::protobuf::int64 value);
  inline void add_py(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      py() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_py();

  // repeated sint64 Pz = 7 [packed = true];
  inline int pz_size() const;
  inline void clear_pz();
  static const int kPzFieldNumber = 7;
  inline ::google::protobuf::int64 pz(int index) const;
  inline void set_pz(int index, ::google::protobuf::int64 value);
  inline void add_pz(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      pz() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_pz();


 // repeated uint32 mother1 = 8 [packed = true];
  inline int mother1_size() const;
  inline void clear_mother1();
  static const int kMother1FieldNumber = 8;
  inline ::google::protobuf::uint32 mother1(int index) const;
  inline void set_mother1(int index, ::google::protobuf::uint32 value);
  inline void add_mother1(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mother1() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mother1();

  // repeated uint32 mother2 = 9 [packed = true];
  inline int mother2_size() const;
  inline void clear_mother2();
  static const int kMother2FieldNumber = 9;
  inline ::google::protobuf::uint32 mother2(int index) const;
  inline void set_mother2(int index, ::google::protobuf::uint32 value);
  inline void add_mother2(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mother2() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mother2();

  // repeated uint32 daughter1 = 10 [packed = true];
  inline int daughter1_size() const;
  inline void clear_daughter1();
  static const int kDaughter1FieldNumber = 10;
  inline ::google::protobuf::uint32 daughter1(int index) const;
  inline void set_daughter1(int index, ::google::protobuf::uint32 value);
  inline void add_daughter1(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      daughter1() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_daughter1();

  // repeated uint32 daughter2 = 11 [packed = true];
  inline int daughter2_size() const;
  inline void clear_daughter2();
  static const int kDaughter2FieldNumber = 11;
  inline ::google::protobuf::uint32 daughter2(int index) const;
  inline void set_daughter2(int index, ::google::protobuf::uint32 value);
  inline void add_daughter2(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      daughter2() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_daughter2();

  // repeated sint32 barcode = 12 [packed = true];
  inline int barcode_size() const;
  inline void clear_barcode();
  static const int kBarcodeFieldNumber = 12;
  inline ::google::protobuf::int32 barcode(int index) const;
  inline void set_barcode(int index, ::google::protobuf::int32 value);
  inline void add_barcode(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      barcode() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_barcode();

  // repeated sint32 X = 13 [packed = true];
  inline int x_size() const;
  inline void clear_x();
  static const int kXFieldNumber = 13;
  inline ::google::protobuf::int32 x(int index) const;
  inline void set_x(int index, ::google::protobuf::int32 value);
  inline void add_x(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      x() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_x();

  // repeated sint32 Y = 14 [packed = true];
  inline int y_size() const;
  inline void clear_y();
  static const int kYFieldNumber = 14;
  inline ::google::protobuf::int32 y(int index) const;
  inline void set_y(int index, ::google::protobuf::int32 value);
  inline void add_y(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      y() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_y();

  // repeated sint32 Z = 15 [packed = true];
  inline int z_size() const;
  inline void clear_z();
  static const int kZFieldNumber = 15;
  inline ::google::protobuf::int32 z(int index) const;
  inline void set_z(int index, ::google::protobuf::int32 value);
  inline void add_z(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      z() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_z();

  // repeated uint32 T = 16 [packed = true];
  inline int t_size() const;
  inline void clear_t();
  static const int kTFieldNumber = 16;
  inline ::google::protobuf::uint32 t(int index) const;
  inline void set_t(int index, ::google::protobuf::uint32 value);
  inline void add_t(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      t() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_t();

  // repeated uint64 weight = 17 [packed = true];
  inline int weight_size() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 17;
  inline ::google::protobuf::uint64 weight(int index) const;
  inline void set_weight(int index, ::google::protobuf::uint64 value);
  inline void add_weight(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      weight() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_weight();

  // repeated sint32 charge = 18 [packed = true];
  inline int charge_size() const;
  inline void clear_charge();
  static const int kChargeFieldNumber = 18;
  inline ::google::protobuf::int32 charge(int index) const;
  inline void set_charge(int index, ::google::protobuf::int32 value);
  inline void add_charge(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      charge() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_charge();

  // repeated uint64 PT = 19 [packed = true];
  inline int pt_size() const;
  inline void clear_pt();
  static const int kPTFieldNumber = 19;
  inline ::google::protobuf::uint64 pt(int index) const;
  inline void set_pt(int index, ::google::protobuf::uint64 value);
  inline void add_pt(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pt();

  // repeated sint64 Eta = 20 [packed = true];
  inline int eta_size() const;
  inline void clear_eta();
  static const int kEtaFieldNumber = 20;
  inline ::google::protobuf::int64 eta(int index) const;
  inline void set_eta(int index, ::google::protobuf::int64 value);
  inline void add_eta(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      eta() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_eta();

  // repeated sint64 Phi = 21 [packed = true];
  inline int phi_size() const;
  inline void clear_phi();
  static const int kPhiFieldNumber = 21;
  inline ::google::protobuf::int64 phi(int index) const;
  inline void set_phi(int index, ::google::protobuf::int64 value);
  inline void add_phi(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      phi() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_phi();

  // @@protoc_insertion_point(class_scope:promc.ProMCEvent.Particles)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > id_;
  mutable int _id_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pdg_id_;
  mutable int _pdg_id_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > status_;
  mutable int _status_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > mass_;
  mutable int _mass_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > px_;
  mutable int _px_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > py_;
  mutable int _py_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > pz_;
  mutable int _pz_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mother1_;
  mutable int _mother1_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mother2_;
  mutable int _mother2_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > daughter1_;
  mutable int _daughter1_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > daughter2_;
  mutable int _daughter2_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > barcode_;
  mutable int _barcode_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > x_;
  mutable int _x_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > y_;
  mutable int _y_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > z_;
  mutable int _z_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > t_;
  mutable int _t_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > weight_;
  mutable int _weight_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > charge_;
  mutable int _charge_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pt_;
  mutable int _pt_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > eta_;
  mutable int _eta_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > phi_;
  mutable int _phi_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(21 + 31) / 32];

  friend void  protobuf_AddDesc_ProMC_2eproto();
  friend void protobuf_AssignDesc_ProMC_2eproto();
  friend void protobuf_ShutdownFile_ProMC_2eproto();

  void InitAsDefaultInstance();
  static ProMCEvent_Particles* default_instance_;
};
// -------------------------------------------------------------------

class ProMCEvent_Jets : public ::google::protobuf::Message {
 public:
  ProMCEvent_Jets();
  virtual ~ProMCEvent_Jets();

  ProMCEvent_Jets(const ProMCEvent_Jets& from);

  inline ProMCEvent_Jets& operator=(const ProMCEvent_Jets& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProMCEvent_Jets& default_instance();

  void Swap(ProMCEvent_Jets* other);

  // implements Message ----------------------------------------------

  ProMCEvent_Jets* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProMCEvent_Jets& from);
  void MergeFrom(const ProMCEvent_Jets& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 PT = 1 [packed = true];
  inline int pt_size() const;
  inline void clear_pt();
  static const int kPTFieldNumber = 1;
  inline ::google::protobuf::uint64 pt(int index) const;
  inline void set_pt(int index, ::google::protobuf::uint64 value);
  inline void add_pt(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pt();

  // repeated sint64 Eta = 2 [packed = true];
  inline int eta_size() const;
  inline void clear_eta();
  static const int kEtaFieldNumber = 2;
  inline ::google::protobuf::int64 eta(int index) const;
  inline void set_eta(int index, ::google::protobuf::int64 value);
  inline void add_eta(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      eta() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_eta();

  // repeated sint64 Phi = 3 [packed = true];
  inline int phi_size() const;
  inline void clear_phi();
  static const int kPhiFieldNumber = 3;
  inline ::google::protobuf::int64 phi(int index) const;
  inline void set_phi(int index, ::google::protobuf::int64 value);
  inline void add_phi(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      phi() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_phi();

  // repeated uint64 Mass = 4 [packed = true];
  inline int mass_size() const;
  inline void clear_mass();
  static const int kMassFieldNumber = 4;
  inline ::google::protobuf::uint64 mass(int index) const;
  inline void set_mass(int index, ::google::protobuf::uint64 value);
  inline void add_mass(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      mass() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_mass();

  // repeated sint32 Btag = 5 [packed = true];
  inline int btag_size() const;
  inline void clear_btag();
  static const int kBtagFieldNumber = 5;
  inline ::google::protobuf::int32 btag(int index) const;
  inline void set_btag(int index, ::google::protobuf::int32 value);
  inline void add_btag(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      btag() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_btag();

  // repeated sint32 Tautag = 6 [packed = true];
  inline int tautag_size() const;
  inline void clear_tautag();
  static const int kTautagFieldNumber = 6;
  inline ::google::protobuf::int32 tautag(int index) const;
  inline void set_tautag(int index, ::google::protobuf::int32 value);
  inline void add_tautag(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      tautag() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_tautag();

  // repeated sint32 Charge = 7 [packed = true];
  inline int charge_size() const;
  inline void clear_charge();
  static const int kChargeFieldNumber = 7;
  inline ::google::protobuf::int32 charge(int index) const;
  inline void set_charge(int index, ::google::protobuf::int32 value);
  inline void add_charge(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      charge() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_charge();

  // repeated uint32 DeltaEta = 8 [packed = true];
  inline int deltaeta_size() const;
  inline void clear_deltaeta();
  static const int kDeltaEtaFieldNumber = 8;
  inline ::google::protobuf::uint32 deltaeta(int index) const;
  inline void set_deltaeta(int index, ::google::protobuf::uint32 value);
  inline void add_deltaeta(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      deltaeta() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_deltaeta();

  // repeated uint32 DeltaPhi = 9 [packed = true];
  inline int deltaphi_size() const;
  inline void clear_deltaphi();
  static const int kDeltaPhiFieldNumber = 9;
  inline ::google::protobuf::uint32 deltaphi(int index) const;
  inline void set_deltaphi(int index, ::google::protobuf::uint32 value);
  inline void add_deltaphi(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      deltaphi() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_deltaphi();

  // repeated sint32 HadOverEem = 10 [packed = true];
  inline int hadovereem_size() const;
  inline void clear_hadovereem();
  static const int kHadOverEemFieldNumber = 10;
  inline ::google::protobuf::int32 hadovereem(int index) const;
  inline void set_hadovereem(int index, ::google::protobuf::int32 value);
  inline void add_hadovereem(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hadovereem() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hadovereem();

  // @@protoc_insertion_point(class_scope:promc.ProMCEvent.Jets)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pt_;
  mutable int _pt_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > eta_;
  mutable int _eta_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > phi_;
  mutable int _phi_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > mass_;
  mutable int _mass_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > btag_;
  mutable int _btag_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > tautag_;
  mutable int _tautag_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > charge_;
  mutable int _charge_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > deltaeta_;
  mutable int _deltaeta_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > deltaphi_;
  mutable int _deltaphi_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hadovereem_;
  mutable int _hadovereem_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_ProMC_2eproto();
  friend void protobuf_AssignDesc_ProMC_2eproto();
  friend void protobuf_ShutdownFile_ProMC_2eproto();

  void InitAsDefaultInstance();
  static ProMCEvent_Jets* default_instance_;
};
// -------------------------------------------------------------------

class ProMCEvent_CAJets : public ::google::protobuf::Message {
 public:
  ProMCEvent_CAJets();
  virtual ~ProMCEvent_CAJets();

  ProMCEvent_CAJets(const ProMCEvent_CAJets& from);

  inline ProMCEvent_CAJets& operator=(const ProMCEvent_CAJets& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProMCEvent_CAJets& default_instance();

  void Swap(ProMCEvent_CAJets* other);

  // implements Message ----------------------------------------------

  ProMCEvent_CAJets* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProMCEvent_CAJets& from);
  void MergeFrom(const ProMCEvent_CAJets& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 PT = 1 [packed = true];
  inline int pt_size() const;
  inline void clear_pt();
  static const int kPTFieldNumber = 1;
  inline ::google::protobuf::uint64 pt(int index) const;
  inline void set_pt(int index, ::google::protobuf::uint64 value);
  inline void add_pt(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pt();

  // repeated sint64 Eta = 2 [packed = true];
  inline int eta_size() const;
  inline void clear_eta();
  static const int kEtaFieldNumber = 2;
  inline ::google::protobuf::int64 eta(int index) const;
  inline void set_eta(int index, ::google::protobuf::int64 value);
  inline void add_eta(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      eta() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_eta();

  // repeated sint64 Phi = 3 [packed = true];
  inline int phi_size() const;
  inline void clear_phi();
  static const int kPhiFieldNumber = 3;
  inline ::google::protobuf::int64 phi(int index) const;
  inline void set_phi(int index, ::google::protobuf::int64 value);
  inline void add_phi(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      phi() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_phi();

  // repeated uint64 Mass = 4 [packed = true];
  inline int mass_size() const;
  inline void clear_mass();
  static const int kMassFieldNumber = 4;
  inline ::google::protobuf::uint64 mass(int index) const;
  inline void set_mass(int index, ::google::protobuf::uint64 value);
  inline void add_mass(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      mass() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_mass();

  // repeated sint32 Btag = 5 [packed = true];
  inline int btag_size() const;
  inline void clear_btag();
  static const int kBtagFieldNumber = 5;
  inline ::google::protobuf::int32 btag(int index) const;
  inline void set_btag(int index, ::google::protobuf::int32 value);
  inline void add_btag(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      btag() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_btag();

  // repeated sint32 TauTag = 6 [packed = true];
  inline int tautag_size() const;
  inline void clear_tautag();
  static const int kTauTagFieldNumber = 6;
  inline ::google::protobuf::int32 tautag(int index) const;
  inline void set_tautag(int index, ::google::protobuf::int32 value);
  inline void add_tautag(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      tautag() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_tautag();

  // repeated sint32 Charge = 7 [packed = true];
  inline int charge_size() const;
  inline void clear_charge();
  static const int kChargeFieldNumber = 7;
  inline ::google::protobuf::int32 charge(int index) const;
  inline void set_charge(int index, ::google::protobuf::int32 value);
  inline void add_charge(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      charge() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_charge();

  // repeated uint32 DeltaEta = 8 [packed = true];
  inline int deltaeta_size() const;
  inline void clear_deltaeta();
  static const int kDeltaEtaFieldNumber = 8;
  inline ::google::protobuf::uint32 deltaeta(int index) const;
  inline void set_deltaeta(int index, ::google::protobuf::uint32 value);
  inline void add_deltaeta(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      deltaeta() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_deltaeta();

  // repeated uint32 DeltaPhi = 9 [packed = true];
  inline int deltaphi_size() const;
  inline void clear_deltaphi();
  static const int kDeltaPhiFieldNumber = 9;
  inline ::google::protobuf::uint32 deltaphi(int index) const;
  inline void set_deltaphi(int index, ::google::protobuf::uint32 value);
  inline void add_deltaphi(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      deltaphi() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_deltaphi();

  // repeated sint32 HadOverEem = 10 [packed = true];
  inline int hadovereem_size() const;
  inline void clear_hadovereem();
  static const int kHadOverEemFieldNumber = 10;
  inline ::google::protobuf::int32 hadovereem(int index) const;
  inline void set_hadovereem(int index, ::google::protobuf::int32 value);
  inline void add_hadovereem(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hadovereem() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hadovereem();

  // @@protoc_insertion_point(class_scope:promc.ProMCEvent.CAJets)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pt_;
  mutable int _pt_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > eta_;
  mutable int _eta_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > phi_;
  mutable int _phi_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > mass_;
  mutable int _mass_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > btag_;
  mutable int _btag_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > tautag_;
  mutable int _tautag_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > charge_;
  mutable int _charge_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > deltaeta_;
  mutable int _deltaeta_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > deltaphi_;
  mutable int _deltaphi_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hadovereem_;
  mutable int _hadovereem_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_ProMC_2eproto();
  friend void protobuf_AssignDesc_ProMC_2eproto();
  friend void protobuf_ShutdownFile_ProMC_2eproto();

  void InitAsDefaultInstance();
  static ProMCEvent_CAJets* default_instance_;
};
// -------------------------------------------------------------------

class ProMCEvent_GenJets : public ::google::protobuf::Message {
 public:
  ProMCEvent_GenJets();
  virtual ~ProMCEvent_GenJets();

  ProMCEvent_GenJets(const ProMCEvent_GenJets& from);

  inline ProMCEvent_GenJets& operator=(const ProMCEvent_GenJets& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProMCEvent_GenJets& default_instance();

  void Swap(ProMCEvent_GenJets* other);

  // implements Message ----------------------------------------------

  ProMCEvent_GenJets* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProMCEvent_GenJets& from);
  void MergeFrom(const ProMCEvent_GenJets& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 PT = 1 [packed = true];
  inline int pt_size() const;
  inline void clear_pt();
  static const int kPTFieldNumber = 1;
  inline ::google::protobuf::uint64 pt(int index) const;
  inline void set_pt(int index, ::google::protobuf::uint64 value);
  inline void add_pt(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pt();

  // repeated sint64 Eta = 2 [packed = true];
  inline int eta_size() const;
  inline void clear_eta();
  static const int kEtaFieldNumber = 2;
  inline ::google::protobuf::int64 eta(int index) const;
  inline void set_eta(int index, ::google::protobuf::int64 value);
  inline void add_eta(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      eta() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_eta();

  // repeated sint64 Phi = 3 [packed = true];
  inline int phi_size() const;
  inline void clear_phi();
  static const int kPhiFieldNumber = 3;
  inline ::google::protobuf::int64 phi(int index) const;
  inline void set_phi(int index, ::google::protobuf::int64 value);
  inline void add_phi(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      phi() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_phi();

  // repeated uint64 Mass = 4 [packed = true];
  inline int mass_size() const;
  inline void clear_mass();
  static const int kMassFieldNumber = 4;
  inline ::google::protobuf::uint64 mass(int index) const;
  inline void set_mass(int index, ::google::protobuf::uint64 value);
  inline void add_mass(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      mass() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_mass();

  // repeated sint32 Btag = 5 [packed = true];
  inline int btag_size() const;
  inline void clear_btag();
  static const int kBtagFieldNumber = 5;
  inline ::google::protobuf::int32 btag(int index) const;
  inline void set_btag(int index, ::google::protobuf::int32 value);
  inline void add_btag(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      btag() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_btag();

  // repeated sint32 TauTag = 6 [packed = true];
  inline int tautag_size() const;
  inline void clear_tautag();
  static const int kTauTagFieldNumber = 6;
  inline ::google::protobuf::int32 tautag(int index) const;
  inline void set_tautag(int index, ::google::protobuf::int32 value);
  inline void add_tautag(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      tautag() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_tautag();

  // repeated sint32 Charge = 7 [packed = true];
  inline int charge_size() const;
  inline void clear_charge();
  static const int kChargeFieldNumber = 7;
  inline ::google::protobuf::int32 charge(int index) const;
  inline void set_charge(int index, ::google::protobuf::int32 value);
  inline void add_charge(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      charge() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_charge();

  // repeated uint32 DeltaEta = 8 [packed = true];
  inline int deltaeta_size() const;
  inline void clear_deltaeta();
  static const int kDeltaEtaFieldNumber = 8;
  inline ::google::protobuf::uint32 deltaeta(int index) const;
  inline void set_deltaeta(int index, ::google::protobuf::uint32 value);
  inline void add_deltaeta(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      deltaeta() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_deltaeta();

  // repeated uint32 DeltaPhi = 9 [packed = true];
  inline int deltaphi_size() const;
  inline void clear_deltaphi();
  static const int kDeltaPhiFieldNumber = 9;
  inline ::google::protobuf::uint32 deltaphi(int index) const;
  inline void set_deltaphi(int index, ::google::protobuf::uint32 value);
  inline void add_deltaphi(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      deltaphi() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_deltaphi();

  // repeated sint32 HadOverEem = 10 [packed = true];
  inline int hadovereem_size() const;
  inline void clear_hadovereem();
  static const int kHadOverEemFieldNumber = 10;
  inline ::google::protobuf::int32 hadovereem(int index) const;
  inline void set_hadovereem(int index, ::google::protobuf::int32 value);
  inline void add_hadovereem(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      hadovereem() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_hadovereem();

  // @@protoc_insertion_point(class_scope:promc.ProMCEvent.GenJets)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pt_;
  mutable int _pt_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > eta_;
  mutable int _eta_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > phi_;
  mutable int _phi_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > mass_;
  mutable int _mass_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > btag_;
  mutable int _btag_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > tautag_;
  mutable int _tautag_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > charge_;
  mutable int _charge_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > deltaeta_;
  mutable int _deltaeta_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > deltaphi_;
  mutable int _deltaphi_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > hadovereem_;
  mutable int _hadovereem_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_ProMC_2eproto();
  friend void protobuf_AssignDesc_ProMC_2eproto();
  friend void protobuf_ShutdownFile_ProMC_2eproto();

  void InitAsDefaultInstance();
  static ProMCEvent_GenJets* default_instance_;
};
// -------------------------------------------------------------------

class ProMCEvent_Electrons : public ::google::protobuf::Message {
 public:
  ProMCEvent_Electrons();
  virtual ~ProMCEvent_Electrons();

  ProMCEvent_Electrons(const ProMCEvent_Electrons& from);

  inline ProMCEvent_Electrons& operator=(const ProMCEvent_Electrons& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProMCEvent_Electrons& default_instance();

  void Swap(ProMCEvent_Electrons* other);

  // implements Message ----------------------------------------------

  ProMCEvent_Electrons* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProMCEvent_Electrons& from);
  void MergeFrom(const ProMCEvent_Electrons& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 PT = 1 [packed = true];
  inline int pt_size() const;
  inline void clear_pt();
  static const int kPTFieldNumber = 1;
  inline ::google::protobuf::uint64 pt(int index) const;
  inline void set_pt(int index, ::google::protobuf::uint64 value);
  inline void add_pt(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pt();

  // repeated sint64 Eta = 2 [packed = true];
  inline int eta_size() const;
  inline void clear_eta();
  static const int kEtaFieldNumber = 2;
  inline ::google::protobuf::int64 eta(int index) const;
  inline void set_eta(int index, ::google::protobuf::int64 value);
  inline void add_eta(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      eta() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_eta();

  // repeated sint64 Phi = 3 [packed = true];
  inline int phi_size() const;
  inline void clear_phi();
  static const int kPhiFieldNumber = 3;
  inline ::google::protobuf::int64 phi(int index) const;
  inline void set_phi(int index, ::google::protobuf::int64 value);
  inline void add_phi(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      phi() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_phi();

  // repeated sint32 Charge = 4 [packed = true];
  inline int charge_size() const;
  inline void clear_charge();
  static const int kChargeFieldNumber = 4;
  inline ::google::protobuf::int32 charge(int index) const;
  inline void set_charge(int index, ::google::protobuf::int32 value);
  inline void add_charge(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      charge() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_charge();

  // @@protoc_insertion_point(class_scope:promc.ProMCEvent.Electrons)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pt_;
  mutable int _pt_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > eta_;
  mutable int _eta_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > phi_;
  mutable int _phi_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > charge_;
  mutable int _charge_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProMC_2eproto();
  friend void protobuf_AssignDesc_ProMC_2eproto();
  friend void protobuf_ShutdownFile_ProMC_2eproto();

  void InitAsDefaultInstance();
  static ProMCEvent_Electrons* default_instance_;
};
// -------------------------------------------------------------------

class ProMCEvent_Muons : public ::google::protobuf::Message {
 public:
  ProMCEvent_Muons();
  virtual ~ProMCEvent_Muons();

  ProMCEvent_Muons(const ProMCEvent_Muons& from);

  inline ProMCEvent_Muons& operator=(const ProMCEvent_Muons& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProMCEvent_Muons& default_instance();

  void Swap(ProMCEvent_Muons* other);

  // implements Message ----------------------------------------------

  ProMCEvent_Muons* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProMCEvent_Muons& from);
  void MergeFrom(const ProMCEvent_Muons& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 PT = 1 [packed = true];
  inline int pt_size() const;
  inline void clear_pt();
  static const int kPTFieldNumber = 1;
  inline ::google::protobuf::uint64 pt(int index) const;
  inline void set_pt(int index, ::google::protobuf::uint64 value);
  inline void add_pt(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pt();

  // repeated sint64 Eta = 2 [packed = true];
  inline int eta_size() const;
  inline void clear_eta();
  static const int kEtaFieldNumber = 2;
  inline ::google::protobuf::int64 eta(int index) const;
  inline void set_eta(int index, ::google::protobuf::int64 value);
  inline void add_eta(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      eta() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_eta();

  // repeated sint64 Phi = 3 [packed = true];
  inline int phi_size() const;
  inline void clear_phi();
  static const int kPhiFieldNumber = 3;
  inline ::google::protobuf::int64 phi(int index) const;
  inline void set_phi(int index, ::google::protobuf::int64 value);
  inline void add_phi(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      phi() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_phi();

  // repeated sint32 Charge = 4 [packed = true];
  inline int charge_size() const;
  inline void clear_charge();
  static const int kChargeFieldNumber = 4;
  inline ::google::protobuf::int32 charge(int index) const;
  inline void set_charge(int index, ::google::protobuf::int32 value);
  inline void add_charge(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      charge() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_charge();

  // @@protoc_insertion_point(class_scope:promc.ProMCEvent.Muons)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pt_;
  mutable int _pt_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > eta_;
  mutable int _eta_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > phi_;
  mutable int _phi_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > charge_;
  mutable int _charge_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProMC_2eproto();
  friend void protobuf_AssignDesc_ProMC_2eproto();
  friend void protobuf_ShutdownFile_ProMC_2eproto();

  void InitAsDefaultInstance();
  static ProMCEvent_Muons* default_instance_;
};
// -------------------------------------------------------------------

class ProMCEvent_Tracks : public ::google::protobuf::Message {
 public:
  ProMCEvent_Tracks();
  virtual ~ProMCEvent_Tracks();

  ProMCEvent_Tracks(const ProMCEvent_Tracks& from);

  inline ProMCEvent_Tracks& operator=(const ProMCEvent_Tracks& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProMCEvent_Tracks& default_instance();

  void Swap(ProMCEvent_Tracks* other);

  // implements Message ----------------------------------------------

  ProMCEvent_Tracks* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProMCEvent_Tracks& from);
  void MergeFrom(const ProMCEvent_Tracks& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 PT = 1 [packed = true];
  inline int pt_size() const;
  inline void clear_pt();
  static const int kPTFieldNumber = 1;
  inline ::google::protobuf::uint64 pt(int index) const;
  inline void set_pt(int index, ::google::protobuf::uint64 value);
  inline void add_pt(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pt();

  // repeated sint64 Eta = 2 [packed = true];
  inline int eta_size() const;
  inline void clear_eta();
  static const int kEtaFieldNumber = 2;
  inline ::google::protobuf::int64 eta(int index) const;
  inline void set_eta(int index, ::google::protobuf::int64 value);
  inline void add_eta(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      eta() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_eta();

  // repeated sint64 Phi = 3 [packed = true];
  inline int phi_size() const;
  inline void clear_phi();
  static const int kPhiFieldNumber = 3;
  inline ::google::protobuf::int64 phi(int index) const;
  inline void set_phi(int index, ::google::protobuf::int64 value);
  inline void add_phi(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      phi() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_phi();

  // repeated sint32 Charge = 4 [packed = true];
  inline int charge_size() const;
  inline void clear_charge();
  static const int kChargeFieldNumber = 4;
  inline ::google::protobuf::int32 charge(int index) const;
  inline void set_charge(int index, ::google::protobuf::int32 value);
  inline void add_charge(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      charge() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_charge();

  // repeated sint32 X = 5 [packed = true];
  inline int x_size() const;
  inline void clear_x();
  static const int kXFieldNumber = 5;
  inline ::google::protobuf::int32 x(int index) const;
  inline void set_x(int index, ::google::protobuf::int32 value);
  inline void add_x(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      x() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_x();

  // repeated sint32 Y = 6 [packed = true];
  inline int y_size() const;
  inline void clear_y();
  static const int kYFieldNumber = 6;
  inline ::google::protobuf::int32 y(int index) const;
  inline void set_y(int index, ::google::protobuf::int32 value);
  inline void add_y(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      y() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_y();

  // repeated sint32 Z = 7 [packed = true];
  inline int z_size() const;
  inline void clear_z();
  static const int kZFieldNumber = 7;
  inline ::google::protobuf::int32 z(int index) const;
  inline void set_z(int index, ::google::protobuf::int32 value);
  inline void add_z(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      z() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_z();

  // repeated sint32 XOuter = 8 [packed = true];
  inline int xouter_size() const;
  inline void clear_xouter();
  static const int kXOuterFieldNumber = 8;
  inline ::google::protobuf::int32 xouter(int index) const;
  inline void set_xouter(int index, ::google::protobuf::int32 value);
  inline void add_xouter(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      xouter() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_xouter();

  // repeated sint32 YOuter = 9 [packed = true];
  inline int youter_size() const;
  inline void clear_youter();
  static const int kYOuterFieldNumber = 9;
  inline ::google::protobuf::int32 youter(int index) const;
  inline void set_youter(int index, ::google::protobuf::int32 value);
  inline void add_youter(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      youter() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_youter();

  // repeated sint32 ZOuter = 10 [packed = true];
  inline int zouter_size() const;
  inline void clear_zouter();
  static const int kZOuterFieldNumber = 10;
  inline ::google::protobuf::int32 zouter(int index) const;
  inline void set_zouter(int index, ::google::protobuf::int32 value);
  inline void add_zouter(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      zouter() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_zouter();

  // repeated sint32 EtaOuter = 11 [packed = true];
  inline int etaouter_size() const;
  inline void clear_etaouter();
  static const int kEtaOuterFieldNumber = 11;
  inline ::google::protobuf::int32 etaouter(int index) const;
  inline void set_etaouter(int index, ::google::protobuf::int32 value);
  inline void add_etaouter(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      etaouter() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_etaouter();

  // repeated sint32 PhiOuter = 12 [packed = true];
  inline int phiouter_size() const;
  inline void clear_phiouter();
  static const int kPhiOuterFieldNumber = 12;
  inline ::google::protobuf::int32 phiouter(int index) const;
  inline void set_phiouter(int index, ::google::protobuf::int32 value);
  inline void add_phiouter(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      phiouter() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_phiouter();

  // @@protoc_insertion_point(class_scope:promc.ProMCEvent.Tracks)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pt_;
  mutable int _pt_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > eta_;
  mutable int _eta_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > phi_;
  mutable int _phi_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > charge_;
  mutable int _charge_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > x_;
  mutable int _x_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > y_;
  mutable int _y_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > z_;
  mutable int _z_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > xouter_;
  mutable int _xouter_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > youter_;
  mutable int _youter_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > zouter_;
  mutable int _zouter_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > etaouter_;
  mutable int _etaouter_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > phiouter_;
  mutable int _phiouter_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_ProMC_2eproto();
  friend void protobuf_AssignDesc_ProMC_2eproto();
  friend void protobuf_ShutdownFile_ProMC_2eproto();

  void InitAsDefaultInstance();
  static ProMCEvent_Tracks* default_instance_;
};
// -------------------------------------------------------------------

class ProMCEvent_Photons : public ::google::protobuf::Message {
 public:
  ProMCEvent_Photons();
  virtual ~ProMCEvent_Photons();

  ProMCEvent_Photons(const ProMCEvent_Photons& from);

  inline ProMCEvent_Photons& operator=(const ProMCEvent_Photons& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProMCEvent_Photons& default_instance();

  void Swap(ProMCEvent_Photons* other);

  // implements Message ----------------------------------------------

  ProMCEvent_Photons* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProMCEvent_Photons& from);
  void MergeFrom(const ProMCEvent_Photons& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 PT = 1 [packed = true];
  inline int pt_size() const;
  inline void clear_pt();
  static const int kPTFieldNumber = 1;
  inline ::google::protobuf::uint64 pt(int index) const;
  inline void set_pt(int index, ::google::protobuf::uint64 value);
  inline void add_pt(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pt();

  // repeated sint64 Eta = 2 [packed = true];
  inline int eta_size() const;
  inline void clear_eta();
  static const int kEtaFieldNumber = 2;
  inline ::google::protobuf::int64 eta(int index) const;
  inline void set_eta(int index, ::google::protobuf::int64 value);
  inline void add_eta(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      eta() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_eta();

  // repeated sint64 Phi = 3 [packed = true];
  inline int phi_size() const;
  inline void clear_phi();
  static const int kPhiFieldNumber = 3;
  inline ::google::protobuf::int64 phi(int index) const;
  inline void set_phi(int index, ::google::protobuf::int64 value);
  inline void add_phi(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      phi() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_phi();

  // repeated sint64 Energy = 4 [packed = true];
  inline int energy_size() const;
  inline void clear_energy();
  static const int kEnergyFieldNumber = 4;
  inline ::google::protobuf::int64 energy(int index) const;
  inline void set_energy(int index, ::google::protobuf::int64 value);
  inline void add_energy(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      energy() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_energy();

  // @@protoc_insertion_point(class_scope:promc.ProMCEvent.Photons)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pt_;
  mutable int _pt_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > eta_;
  mutable int _eta_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > phi_;
  mutable int _phi_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > energy_;
  mutable int _energy_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProMC_2eproto();
  friend void protobuf_AssignDesc_ProMC_2eproto();
  friend void protobuf_ShutdownFile_ProMC_2eproto();

  void InitAsDefaultInstance();
  static ProMCEvent_Photons* default_instance_;
};
// -------------------------------------------------------------------

class ProMCEvent_MissingET : public ::google::protobuf::Message {
 public:
  ProMCEvent_MissingET();
  virtual ~ProMCEvent_MissingET();

  ProMCEvent_MissingET(const ProMCEvent_MissingET& from);

  inline ProMCEvent_MissingET& operator=(const ProMCEvent_MissingET& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProMCEvent_MissingET& default_instance();

  void Swap(ProMCEvent_MissingET* other);

  // implements Message ----------------------------------------------

  ProMCEvent_MissingET* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProMCEvent_MissingET& from);
  void MergeFrom(const ProMCEvent_MissingET& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 MET = 1;
  inline bool has_met() const;
  inline void clear_met();
  static const int kMETFieldNumber = 1;
  inline ::google::protobuf::uint64 met() const;
  inline void set_met(::google::protobuf::uint64 value);

  // optional sint64 Phi = 2;
  inline bool has_phi() const;
  inline void clear_phi();
  static const int kPhiFieldNumber = 2;
  inline ::google::protobuf::int64 phi() const;
  inline void set_phi(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:promc.ProMCEvent.MissingET)
 private:
  inline void set_has_met();
  inline void clear_has_met();
  inline void set_has_phi();
  inline void clear_has_phi();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 met_;
  ::google::protobuf::int64 phi_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProMC_2eproto();
  friend void protobuf_AssignDesc_ProMC_2eproto();
  friend void protobuf_ShutdownFile_ProMC_2eproto();

  void InitAsDefaultInstance();
  static ProMCEvent_MissingET* default_instance_;
};
// -------------------------------------------------------------------

class ProMCEvent_HT : public ::google::protobuf::Message {
 public:
  ProMCEvent_HT();
  virtual ~ProMCEvent_HT();

  ProMCEvent_HT(const ProMCEvent_HT& from);

  inline ProMCEvent_HT& operator=(const ProMCEvent_HT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProMCEvent_HT& default_instance();

  void Swap(ProMCEvent_HT* other);

  // implements Message ----------------------------------------------

  ProMCEvent_HT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProMCEvent_HT& from);
  void MergeFrom(const ProMCEvent_HT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 HT = 1;
  inline bool has_ht() const;
  inline void clear_ht();
  static const int kHTFieldNumber = 1;
  inline ::google::protobuf::uint64 ht() const;
  inline void set_ht(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:promc.ProMCEvent.HT)
 private:
  inline void set_has_ht();
  inline void clear_has_ht();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 ht_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProMC_2eproto();
  friend void protobuf_AssignDesc_ProMC_2eproto();
  friend void protobuf_ShutdownFile_ProMC_2eproto();

  void InitAsDefaultInstance();
  static ProMCEvent_HT* default_instance_;
};
// -------------------------------------------------------------------

class ProMCEvent_Rho : public ::google::protobuf::Message {
 public:
  ProMCEvent_Rho();
  virtual ~ProMCEvent_Rho();

  ProMCEvent_Rho(const ProMCEvent_Rho& from);

  inline ProMCEvent_Rho& operator=(const ProMCEvent_Rho& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProMCEvent_Rho& default_instance();

  void Swap(ProMCEvent_Rho* other);

  // implements Message ----------------------------------------------

  ProMCEvent_Rho* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProMCEvent_Rho& from);
  void MergeFrom(const ProMCEvent_Rho& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Rho = 1;
  inline bool has_rho() const;
  inline void clear_rho();
  static const int kRhoFieldNumber = 1;
  inline ::google::protobuf::uint64 rho() const;
  inline void set_rho(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:promc.ProMCEvent.Rho)
 private:
  inline void set_has_rho();
  inline void clear_has_rho();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 rho_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProMC_2eproto();
  friend void protobuf_AssignDesc_ProMC_2eproto();
  friend void protobuf_ShutdownFile_ProMC_2eproto();

  void InitAsDefaultInstance();
  static ProMCEvent_Rho* default_instance_;
};
// -------------------------------------------------------------------

class ProMCEvent : public ::google::protobuf::Message {
 public:
  ProMCEvent();
  virtual ~ProMCEvent();

  ProMCEvent(const ProMCEvent& from);

  inline ProMCEvent& operator=(const ProMCEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProMCEvent& default_instance();

  void Swap(ProMCEvent* other);

  // implements Message ----------------------------------------------

  ProMCEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProMCEvent& from);
  void MergeFrom(const ProMCEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProMCEvent_Event Event;
  typedef ProMCEvent_Particles Particles;
  typedef ProMCEvent_Jets Jets;
  typedef ProMCEvent_CAJets CAJets;
  typedef ProMCEvent_GenJets GenJets;
  typedef ProMCEvent_Electrons Electrons;
  typedef ProMCEvent_Muons Muons;
  typedef ProMCEvent_Tracks Tracks;
  typedef ProMCEvent_Photons Photons;
  typedef ProMCEvent_MissingET MissingET;
  typedef ProMCEvent_HT HT;
  typedef ProMCEvent_Rho Rho;

  // accessors -------------------------------------------------------

  // optional .promc.ProMCEvent.Event event = 1;
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 1;
  inline const ::promc::ProMCEvent_Event& event() const;
  inline ::promc::ProMCEvent_Event* mutable_event();
  inline ::promc::ProMCEvent_Event* release_event();
  inline void set_allocated_event(::promc::ProMCEvent_Event* event);

  // optional .promc.ProMCEvent.Particles particles = 2;
  inline bool has_particles() const;
  inline void clear_particles();
  static const int kParticlesFieldNumber = 2;
  inline const ::promc::ProMCEvent_Particles& particles() const;
  inline ::promc::ProMCEvent_Particles* mutable_particles();
  inline ::promc::ProMCEvent_Particles* release_particles();
  inline void set_allocated_particles(::promc::ProMCEvent_Particles* particles);

  // optional .promc.ProMCEvent.Jets jets = 3;
  inline bool has_jets() const;
  inline void clear_jets();
  static const int kJetsFieldNumber = 3;
  inline const ::promc::ProMCEvent_Jets& jets() const;
  inline ::promc::ProMCEvent_Jets* mutable_jets();
  inline ::promc::ProMCEvent_Jets* release_jets();
  inline void set_allocated_jets(::promc::ProMCEvent_Jets* jets);

  // optional .promc.ProMCEvent.GenJets genjets = 4;
  inline bool has_genjets() const;
  inline void clear_genjets();
  static const int kGenjetsFieldNumber = 4;
  inline const ::promc::ProMCEvent_GenJets& genjets() const;
  inline ::promc::ProMCEvent_GenJets* mutable_genjets();
  inline ::promc::ProMCEvent_GenJets* release_genjets();
  inline void set_allocated_genjets(::promc::ProMCEvent_GenJets* genjets);

  // optional .promc.ProMCEvent.CAJets cajets = 5;
  inline bool has_cajets() const;
  inline void clear_cajets();
  static const int kCajetsFieldNumber = 5;
  inline const ::promc::ProMCEvent_CAJets& cajets() const;
  inline ::promc::ProMCEvent_CAJets* mutable_cajets();
  inline ::promc::ProMCEvent_CAJets* release_cajets();
  inline void set_allocated_cajets(::promc::ProMCEvent_CAJets* cajets);

  // optional .promc.ProMCEvent.Electrons electrons = 6;
  inline bool has_electrons() const;
  inline void clear_electrons();
  static const int kElectronsFieldNumber = 6;
  inline const ::promc::ProMCEvent_Electrons& electrons() const;
  inline ::promc::ProMCEvent_Electrons* mutable_electrons();
  inline ::promc::ProMCEvent_Electrons* release_electrons();
  inline void set_allocated_electrons(::promc::ProMCEvent_Electrons* electrons);

  // optional .promc.ProMCEvent.Muons muons = 7;
  inline bool has_muons() const;
  inline void clear_muons();
  static const int kMuonsFieldNumber = 7;
  inline const ::promc::ProMCEvent_Muons& muons() const;
  inline ::promc::ProMCEvent_Muons* mutable_muons();
  inline ::promc::ProMCEvent_Muons* release_muons();
  inline void set_allocated_muons(::promc::ProMCEvent_Muons* muons);

  // optional .promc.ProMCEvent.Tracks tracks = 8;
  inline bool has_tracks() const;
  inline void clear_tracks();
  static const int kTracksFieldNumber = 8;
  inline const ::promc::ProMCEvent_Tracks& tracks() const;
  inline ::promc::ProMCEvent_Tracks* mutable_tracks();
  inline ::promc::ProMCEvent_Tracks* release_tracks();
  inline void set_allocated_tracks(::promc::ProMCEvent_Tracks* tracks);

  // optional .promc.ProMCEvent.Photons photons = 9;
  inline bool has_photons() const;
  inline void clear_photons();
  static const int kPhotonsFieldNumber = 9;
  inline const ::promc::ProMCEvent_Photons& photons() const;
  inline ::promc::ProMCEvent_Photons* mutable_photons();
  inline ::promc::ProMCEvent_Photons* release_photons();
  inline void set_allocated_photons(::promc::ProMCEvent_Photons* photons);

  // optional .promc.ProMCEvent.MissingET missingET = 10;
  inline bool has_missinget() const;
  inline void clear_missinget();
  static const int kMissingETFieldNumber = 10;
  inline const ::promc::ProMCEvent_MissingET& missinget() const;
  inline ::promc::ProMCEvent_MissingET* mutable_missinget();
  inline ::promc::ProMCEvent_MissingET* release_missinget();
  inline void set_allocated_missinget(::promc::ProMCEvent_MissingET* missinget);

  // optional .promc.ProMCEvent.HT ht = 11;
  inline bool has_ht() const;
  inline void clear_ht();
  static const int kHtFieldNumber = 11;
  inline const ::promc::ProMCEvent_HT& ht() const;
  inline ::promc::ProMCEvent_HT* mutable_ht();
  inline ::promc::ProMCEvent_HT* release_ht();
  inline void set_allocated_ht(::promc::ProMCEvent_HT* ht);

  // optional .promc.ProMCEvent.Rho rho = 12;
  inline bool has_rho() const;
  inline void clear_rho();
  static const int kRhoFieldNumber = 12;
  inline const ::promc::ProMCEvent_Rho& rho() const;
  inline ::promc::ProMCEvent_Rho* mutable_rho();
  inline ::promc::ProMCEvent_Rho* release_rho();
  inline void set_allocated_rho(::promc::ProMCEvent_Rho* rho);

  // @@protoc_insertion_point(class_scope:promc.ProMCEvent)
 private:
  inline void set_has_event();
  inline void clear_has_event();
  inline void set_has_particles();
  inline void clear_has_particles();
  inline void set_has_jets();
  inline void clear_has_jets();
  inline void set_has_genjets();
  inline void clear_has_genjets();
  inline void set_has_cajets();
  inline void clear_has_cajets();
  inline void set_has_electrons();
  inline void clear_has_electrons();
  inline void set_has_muons();
  inline void clear_has_muons();
  inline void set_has_tracks();
  inline void clear_has_tracks();
  inline void set_has_photons();
  inline void clear_has_photons();
  inline void set_has_missinget();
  inline void clear_has_missinget();
  inline void set_has_ht();
  inline void clear_has_ht();
  inline void set_has_rho();
  inline void clear_has_rho();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::promc::ProMCEvent_Event* event_;
  ::promc::ProMCEvent_Particles* particles_;
  ::promc::ProMCEvent_Jets* jets_;
  ::promc::ProMCEvent_GenJets* genjets_;
  ::promc::ProMCEvent_CAJets* cajets_;
  ::promc::ProMCEvent_Electrons* electrons_;
  ::promc::ProMCEvent_Muons* muons_;
  ::promc::ProMCEvent_Tracks* tracks_;
  ::promc::ProMCEvent_Photons* photons_;
  ::promc::ProMCEvent_MissingET* missinget_;
  ::promc::ProMCEvent_HT* ht_;
  ::promc::ProMCEvent_Rho* rho_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_ProMC_2eproto();
  friend void protobuf_AssignDesc_ProMC_2eproto();
  friend void protobuf_ShutdownFile_ProMC_2eproto();

  void InitAsDefaultInstance();
  static ProMCEvent* default_instance_;
};
// ===================================================================


// ===================================================================

// ProMCEvent_Event

// optional int32 Number = 1;
inline bool ProMCEvent_Event::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProMCEvent_Event::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProMCEvent_Event::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProMCEvent_Event::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 ProMCEvent_Event::number() const {
  return number_;
}
inline void ProMCEvent_Event::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// optional int32 Process_ID = 2;
inline bool ProMCEvent_Event::has_process_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProMCEvent_Event::set_has_process_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProMCEvent_Event::clear_has_process_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProMCEvent_Event::clear_process_id() {
  process_id_ = 0;
  clear_has_process_id();
}
inline ::google::protobuf::int32 ProMCEvent_Event::process_id() const {
  return process_id_;
}
inline void ProMCEvent_Event::set_process_id(::google::protobuf::int32 value) {
  set_has_process_id();
  process_id_ = value;
}

// optional int32 MPI = 3;
inline bool ProMCEvent_Event::has_mpi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProMCEvent_Event::set_has_mpi() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProMCEvent_Event::clear_has_mpi() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProMCEvent_Event::clear_mpi() {
  mpi_ = 0;
  clear_has_mpi();
}
inline ::google::protobuf::int32 ProMCEvent_Event::mpi() const {
  return mpi_;
}
inline void ProMCEvent_Event::set_mpi(::google::protobuf::int32 value) {
  set_has_mpi();
  mpi_ = value;
}

// optional int32 ID1 = 4;
inline bool ProMCEvent_Event::has_id1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProMCEvent_Event::set_has_id1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProMCEvent_Event::clear_has_id1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProMCEvent_Event::clear_id1() {
  id1_ = 0;
  clear_has_id1();
}
inline ::google::protobuf::int32 ProMCEvent_Event::id1() const {
  return id1_;
}
inline void ProMCEvent_Event::set_id1(::google::protobuf::int32 value) {
  set_has_id1();
  id1_ = value;
}

// optional int32 ID2 = 5;
inline bool ProMCEvent_Event::has_id2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProMCEvent_Event::set_has_id2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProMCEvent_Event::clear_has_id2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProMCEvent_Event::clear_id2() {
  id2_ = 0;
  clear_has_id2();
}
inline ::google::protobuf::int32 ProMCEvent_Event::id2() const {
  return id2_;
}
inline void ProMCEvent_Event::set_id2(::google::protobuf::int32 value) {
  set_has_id2();
  id2_ = value;
}

// optional float PDF1 = 6;
inline bool ProMCEvent_Event::has_pdf1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProMCEvent_Event::set_has_pdf1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProMCEvent_Event::clear_has_pdf1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProMCEvent_Event::clear_pdf1() {
  pdf1_ = 0;
  clear_has_pdf1();
}
inline float ProMCEvent_Event::pdf1() const {
  return pdf1_;
}
inline void ProMCEvent_Event::set_pdf1(float value) {
  set_has_pdf1();
  pdf1_ = value;
}

// optional float PDF2 = 7;
inline bool ProMCEvent_Event::has_pdf2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProMCEvent_Event::set_has_pdf2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProMCEvent_Event::clear_has_pdf2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProMCEvent_Event::clear_pdf2() {
  pdf2_ = 0;
  clear_has_pdf2();
}
inline float ProMCEvent_Event::pdf2() const {
  return pdf2_;
}
inline void ProMCEvent_Event::set_pdf2(float value) {
  set_has_pdf2();
  pdf2_ = value;
}

// optional float X1 = 8;
inline bool ProMCEvent_Event::has_x1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProMCEvent_Event::set_has_x1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProMCEvent_Event::clear_has_x1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProMCEvent_Event::clear_x1() {
  x1_ = 0;
  clear_has_x1();
}
inline float ProMCEvent_Event::x1() const {
  return x1_;
}
inline void ProMCEvent_Event::set_x1(float value) {
  set_has_x1();
  x1_ = value;
}

// optional float X2 = 9;
inline bool ProMCEvent_Event::has_x2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProMCEvent_Event::set_has_x2() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProMCEvent_Event::clear_has_x2() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProMCEvent_Event::clear_x2() {
  x2_ = 0;
  clear_has_x2();
}
inline float ProMCEvent_Event::x2() const {
  return x2_;
}
inline void ProMCEvent_Event::set_x2(float value) {
  set_has_x2();
  x2_ = value;
}

// optional float Scale_PDF = 10;
inline bool ProMCEvent_Event::has_scale_pdf() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProMCEvent_Event::set_has_scale_pdf() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ProMCEvent_Event::clear_has_scale_pdf() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ProMCEvent_Event::clear_scale_pdf() {
  scale_pdf_ = 0;
  clear_has_scale_pdf();
}
inline float ProMCEvent_Event::scale_pdf() const {
  return scale_pdf_;
}
inline void ProMCEvent_Event::set_scale_pdf(float value) {
  set_has_scale_pdf();
  scale_pdf_ = value;
}

// optional float Alpha_QED = 11;
inline bool ProMCEvent_Event::has_alpha_qed() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProMCEvent_Event::set_has_alpha_qed() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ProMCEvent_Event::clear_has_alpha_qed() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ProMCEvent_Event::clear_alpha_qed() {
  alpha_qed_ = 0;
  clear_has_alpha_qed();
}
inline float ProMCEvent_Event::alpha_qed() const {
  return alpha_qed_;
}
inline void ProMCEvent_Event::set_alpha_qed(float value) {
  set_has_alpha_qed();
  alpha_qed_ = value;
}

// optional float Scale = 12;
inline bool ProMCEvent_Event::has_scale() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ProMCEvent_Event::set_has_scale() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ProMCEvent_Event::clear_has_scale() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ProMCEvent_Event::clear_scale() {
  scale_ = 0;
  clear_has_scale();
}
inline float ProMCEvent_Event::scale() const {
  return scale_;
}
inline void ProMCEvent_Event::set_scale(float value) {
  set_has_scale();
  scale_ = value;
}

// optional float Alpha_QCD = 13;
inline bool ProMCEvent_Event::has_alpha_qcd() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ProMCEvent_Event::set_has_alpha_qcd() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ProMCEvent_Event::clear_has_alpha_qcd() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ProMCEvent_Event::clear_alpha_qcd() {
  alpha_qcd_ = 0;
  clear_has_alpha_qcd();
}
inline float ProMCEvent_Event::alpha_qcd() const {
  return alpha_qcd_;
}
inline void ProMCEvent_Event::set_alpha_qcd(float value) {
  set_has_alpha_qcd();
  alpha_qcd_ = value;
}

// optional double Weight = 14;
inline bool ProMCEvent_Event::has_weight() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ProMCEvent_Event::set_has_weight() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ProMCEvent_Event::clear_has_weight() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ProMCEvent_Event::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
inline double ProMCEvent_Event::weight() const {
  return weight_;
}
inline void ProMCEvent_Event::set_weight(double value) {
  set_has_weight();
  weight_ = value;
}

// -------------------------------------------------------------------

// ProMCEvent_Particles

// repeated uint32 id = 1 [packed = true];
inline int ProMCEvent_Particles::id_size() const {
  return id_.size();
}
inline void ProMCEvent_Particles::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::uint32 ProMCEvent_Particles::id(int index) const {
  return id_.Get(index);
}
inline void ProMCEvent_Particles::set_id(int index, ::google::protobuf::uint32 value) {
  id_.Set(index, value);
}
inline void ProMCEvent_Particles::add_id(::google::protobuf::uint32 value) {
  id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProMCEvent_Particles::id() const {
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProMCEvent_Particles::mutable_id() {
  return &id_;
}

// repeated sint32 pdg_id = 2 [packed = true];
inline int ProMCEvent_Particles::pdg_id_size() const {
  return pdg_id_.size();
}
inline void ProMCEvent_Particles::clear_pdg_id() {
  pdg_id_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Particles::pdg_id(int index) const {
  return pdg_id_.Get(index);
}
inline void ProMCEvent_Particles::set_pdg_id(int index, ::google::protobuf::int32 value) {
  pdg_id_.Set(index, value);
}
inline void ProMCEvent_Particles::add_pdg_id(::google::protobuf::int32 value) {
  pdg_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Particles::pdg_id() const {
  return pdg_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Particles::mutable_pdg_id() {
  return &pdg_id_;
}

// repeated uint32 status = 3 [packed = true];
inline int ProMCEvent_Particles::status_size() const {
  return status_.size();
}
inline void ProMCEvent_Particles::clear_status() {
  status_.Clear();
}
inline ::google::protobuf::uint32 ProMCEvent_Particles::status(int index) const {
  return status_.Get(index);
}
inline void ProMCEvent_Particles::set_status(int index, ::google::protobuf::uint32 value) {
  status_.Set(index, value);
}
inline void ProMCEvent_Particles::add_status(::google::protobuf::uint32 value) {
  status_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProMCEvent_Particles::status() const {
  return status_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProMCEvent_Particles::mutable_status() {
  return &status_;
}

// repeated uint64 mass = 4 [packed = true];
inline int ProMCEvent_Particles::mass_size() const {
  return mass_.size();
}
inline void ProMCEvent_Particles::clear_mass() {
  mass_.Clear();
}
inline ::google::protobuf::uint64 ProMCEvent_Particles::mass(int index) const {
  return mass_.Get(index);
}
inline void ProMCEvent_Particles::set_mass(int index, ::google::protobuf::uint64 value) {
  mass_.Set(index, value);
}
inline void ProMCEvent_Particles::add_mass(::google::protobuf::uint64 value) {
  mass_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ProMCEvent_Particles::mass() const {
  return mass_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ProMCEvent_Particles::mutable_mass() {
  return &mass_;
}

// repeated sint64 Px = 5 [packed = true];
inline int ProMCEvent_Particles::px_size() const {
  return px_.size();
}
inline void ProMCEvent_Particles::clear_px() {
  px_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_Particles::px(int index) const {
  return px_.Get(index);
}
inline void ProMCEvent_Particles::set_px(int index, ::google::protobuf::int64 value) {
  px_.Set(index, value);
}
inline void ProMCEvent_Particles::add_px(::google::protobuf::int64 value) {
  px_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_Particles::px() const {
  return px_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_Particles::mutable_px() {
  return &px_;
}

// repeated sint64 Py = 6 [packed = true];
inline int ProMCEvent_Particles::py_size() const {
  return py_.size();
}
inline void ProMCEvent_Particles::clear_py() {
  py_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_Particles::py(int index) const {
  return py_.Get(index);
}
inline void ProMCEvent_Particles::set_py(int index, ::google::protobuf::int64 value) {
  py_.Set(index, value);
}
inline void ProMCEvent_Particles::add_py(::google::protobuf::int64 value) {
  py_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_Particles::py() const {
  return py_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_Particles::mutable_py() {
  return &py_;
}

// repeated sint64 Pz = 7 [packed = true];
inline int ProMCEvent_Particles::pz_size() const {
  return pz_.size();
}
inline void ProMCEvent_Particles::clear_pz() {
  pz_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_Particles::pz(int index) const {
  return pz_.Get(index);
}
inline void ProMCEvent_Particles::set_pz(int index, ::google::protobuf::int64 value) {
  pz_.Set(index, value);
}
inline void ProMCEvent_Particles::add_pz(::google::protobuf::int64 value) {
  pz_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_Particles::pz() const {
  return pz_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_Particles::mutable_pz() {
  return &pz_;
}

// repeated uint32 mother1 = 8 [packed = true];
inline int ProMCEvent_Particles::mother1_size() const {
  return mother1_.size();
}
inline void ProMCEvent_Particles::clear_mother1() {
  mother1_.Clear();
}
inline ::google::protobuf::uint32 ProMCEvent_Particles::mother1(int index) const {
  return mother1_.Get(index);
}
inline void ProMCEvent_Particles::set_mother1(int index, ::google::protobuf::uint32 value) {
  mother1_.Set(index, value);
}
inline void ProMCEvent_Particles::add_mother1(::google::protobuf::uint32 value) {
  mother1_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProMCEvent_Particles::mother1() const {
  return mother1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProMCEvent_Particles::mutable_mother1() {
  return &mother1_;
}

// repeated uint32 mother2 = 9 [packed = true];
inline int ProMCEvent_Particles::mother2_size() const {
  return mother2_.size();
}
inline void ProMCEvent_Particles::clear_mother2() {
  mother2_.Clear();
}
inline ::google::protobuf::uint32 ProMCEvent_Particles::mother2(int index) const {
  return mother2_.Get(index);
}
inline void ProMCEvent_Particles::set_mother2(int index, ::google::protobuf::uint32 value) {
  mother2_.Set(index, value);
}
inline void ProMCEvent_Particles::add_mother2(::google::protobuf::uint32 value) {
  mother2_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProMCEvent_Particles::mother2() const {
  return mother2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProMCEvent_Particles::mutable_mother2() {
  return &mother2_;
}

// repeated uint32 daughter1 = 10 [packed = true];
inline int ProMCEvent_Particles::daughter1_size() const {
  return daughter1_.size();
}
inline void ProMCEvent_Particles::clear_daughter1() {
  daughter1_.Clear();
}
inline ::google::protobuf::uint32 ProMCEvent_Particles::daughter1(int index) const {
  return daughter1_.Get(index);
}
inline void ProMCEvent_Particles::set_daughter1(int index, ::google::protobuf::uint32 value) {
  daughter1_.Set(index, value);
}
inline void ProMCEvent_Particles::add_daughter1(::google::protobuf::uint32 value) {
  daughter1_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProMCEvent_Particles::daughter1() const {
  return daughter1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProMCEvent_Particles::mutable_daughter1() {
  return &daughter1_;
}

// repeated uint32 daughter2 = 11 [packed = true];
inline int ProMCEvent_Particles::daughter2_size() const {
  return daughter2_.size();
}
inline void ProMCEvent_Particles::clear_daughter2() {
  daughter2_.Clear();
}
inline ::google::protobuf::uint32 ProMCEvent_Particles::daughter2(int index) const {
  return daughter2_.Get(index);
}
inline void ProMCEvent_Particles::set_daughter2(int index, ::google::protobuf::uint32 value) {
  daughter2_.Set(index, value);
}
inline void ProMCEvent_Particles::add_daughter2(::google::protobuf::uint32 value) {
  daughter2_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProMCEvent_Particles::daughter2() const {
  return daughter2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProMCEvent_Particles::mutable_daughter2() {
  return &daughter2_;
}

// repeated sint32 barcode = 12 [packed = true];
inline int ProMCEvent_Particles::barcode_size() const {
  return barcode_.size();
}
inline void ProMCEvent_Particles::clear_barcode() {
  barcode_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Particles::barcode(int index) const {
  return barcode_.Get(index);
}
inline void ProMCEvent_Particles::set_barcode(int index, ::google::protobuf::int32 value) {
  barcode_.Set(index, value);
}
inline void ProMCEvent_Particles::add_barcode(::google::protobuf::int32 value) {
  barcode_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Particles::barcode() const {
  return barcode_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Particles::mutable_barcode() {
  return &barcode_;
}

// repeated sint32 X = 13 [packed = true];
inline int ProMCEvent_Particles::x_size() const {
  return x_.size();
}
inline void ProMCEvent_Particles::clear_x() {
  x_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Particles::x(int index) const {
  return x_.Get(index);
}
inline void ProMCEvent_Particles::set_x(int index, ::google::protobuf::int32 value) {
  x_.Set(index, value);
}
inline void ProMCEvent_Particles::add_x(::google::protobuf::int32 value) {
  x_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Particles::x() const {
  return x_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Particles::mutable_x() {
  return &x_;
}

// repeated sint32 Y = 14 [packed = true];
inline int ProMCEvent_Particles::y_size() const {
  return y_.size();
}
inline void ProMCEvent_Particles::clear_y() {
  y_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Particles::y(int index) const {
  return y_.Get(index);
}
inline void ProMCEvent_Particles::set_y(int index, ::google::protobuf::int32 value) {
  y_.Set(index, value);
}
inline void ProMCEvent_Particles::add_y(::google::protobuf::int32 value) {
  y_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Particles::y() const {
  return y_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Particles::mutable_y() {
  return &y_;
}

// repeated sint32 Z = 15 [packed = true];
inline int ProMCEvent_Particles::z_size() const {
  return z_.size();
}
inline void ProMCEvent_Particles::clear_z() {
  z_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Particles::z(int index) const {
  return z_.Get(index);
}
inline void ProMCEvent_Particles::set_z(int index, ::google::protobuf::int32 value) {
  z_.Set(index, value);
}
inline void ProMCEvent_Particles::add_z(::google::protobuf::int32 value) {
  z_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Particles::z() const {
  return z_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Particles::mutable_z() {
  return &z_;
}

// repeated uint32 T = 16 [packed = true];
inline int ProMCEvent_Particles::t_size() const {
  return t_.size();
}
inline void ProMCEvent_Particles::clear_t() {
  t_.Clear();
}
inline ::google::protobuf::uint32 ProMCEvent_Particles::t(int index) const {
  return t_.Get(index);
}
inline void ProMCEvent_Particles::set_t(int index, ::google::protobuf::uint32 value) {
  t_.Set(index, value);
}
inline void ProMCEvent_Particles::add_t(::google::protobuf::uint32 value) {
  t_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProMCEvent_Particles::t() const {
  return t_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProMCEvent_Particles::mutable_t() {
  return &t_;
}

// repeated uint64 weight = 17 [packed = true];
inline int ProMCEvent_Particles::weight_size() const {
  return weight_.size();
}
inline void ProMCEvent_Particles::clear_weight() {
  weight_.Clear();
}
inline ::google::protobuf::uint64 ProMCEvent_Particles::weight(int index) const {
  return weight_.Get(index);
}
inline void ProMCEvent_Particles::set_weight(int index, ::google::protobuf::uint64 value) {
  weight_.Set(index, value);
}
inline void ProMCEvent_Particles::add_weight(::google::protobuf::uint64 value) {
  weight_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ProMCEvent_Particles::weight() const {
  return weight_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ProMCEvent_Particles::mutable_weight() {
  return &weight_;
}

// repeated sint32 charge = 18 [packed = true];
inline int ProMCEvent_Particles::charge_size() const {
  return charge_.size();
}
inline void ProMCEvent_Particles::clear_charge() {
  charge_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Particles::charge(int index) const {
  return charge_.Get(index);
}
inline void ProMCEvent_Particles::set_charge(int index, ::google::protobuf::int32 value) {
  charge_.Set(index, value);
}
inline void ProMCEvent_Particles::add_charge(::google::protobuf::int32 value) {
  charge_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Particles::charge() const {
  return charge_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Particles::mutable_charge() {
  return &charge_;
}

// repeated uint64 PT = 19 [packed = true];
inline int ProMCEvent_Particles::pt_size() const {
  return pt_.size();
}
inline void ProMCEvent_Particles::clear_pt() {
  pt_.Clear();
}
inline ::google::protobuf::uint64 ProMCEvent_Particles::pt(int index) const {
  return pt_.Get(index);
}
inline void ProMCEvent_Particles::set_pt(int index, ::google::protobuf::uint64 value) {
  pt_.Set(index, value);
}
inline void ProMCEvent_Particles::add_pt(::google::protobuf::uint64 value) {
  pt_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ProMCEvent_Particles::pt() const {
  return pt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ProMCEvent_Particles::mutable_pt() {
  return &pt_;
}

// repeated sint64 Eta = 20 [packed = true];
inline int ProMCEvent_Particles::eta_size() const {
  return eta_.size();
}
inline void ProMCEvent_Particles::clear_eta() {
  eta_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_Particles::eta(int index) const {
  return eta_.Get(index);
}
inline void ProMCEvent_Particles::set_eta(int index, ::google::protobuf::int64 value) {
  eta_.Set(index, value);
}
inline void ProMCEvent_Particles::add_eta(::google::protobuf::int64 value) {
  eta_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_Particles::eta() const {
  return eta_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_Particles::mutable_eta() {
  return &eta_;
}

// repeated sint64 Phi = 21 [packed = true];
inline int ProMCEvent_Particles::phi_size() const {
  return phi_.size();
}
inline void ProMCEvent_Particles::clear_phi() {
  phi_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_Particles::phi(int index) const {
  return phi_.Get(index);
}
inline void ProMCEvent_Particles::set_phi(int index, ::google::protobuf::int64 value) {
  phi_.Set(index, value);
}
inline void ProMCEvent_Particles::add_phi(::google::protobuf::int64 value) {
  phi_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_Particles::phi() const {
  return phi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_Particles::mutable_phi() {
  return &phi_;
}

// -------------------------------------------------------------------

// ProMCEvent_Jets

// repeated uint64 PT = 1 [packed = true];
inline int ProMCEvent_Jets::pt_size() const {
  return pt_.size();
}
inline void ProMCEvent_Jets::clear_pt() {
  pt_.Clear();
}
inline ::google::protobuf::uint64 ProMCEvent_Jets::pt(int index) const {
  return pt_.Get(index);
}
inline void ProMCEvent_Jets::set_pt(int index, ::google::protobuf::uint64 value) {
  pt_.Set(index, value);
}
inline void ProMCEvent_Jets::add_pt(::google::protobuf::uint64 value) {
  pt_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ProMCEvent_Jets::pt() const {
  return pt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ProMCEvent_Jets::mutable_pt() {
  return &pt_;
}

// repeated sint64 Eta = 2 [packed = true];
inline int ProMCEvent_Jets::eta_size() const {
  return eta_.size();
}
inline void ProMCEvent_Jets::clear_eta() {
  eta_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_Jets::eta(int index) const {
  return eta_.Get(index);
}
inline void ProMCEvent_Jets::set_eta(int index, ::google::protobuf::int64 value) {
  eta_.Set(index, value);
}
inline void ProMCEvent_Jets::add_eta(::google::protobuf::int64 value) {
  eta_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_Jets::eta() const {
  return eta_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_Jets::mutable_eta() {
  return &eta_;
}

// repeated sint64 Phi = 3 [packed = true];
inline int ProMCEvent_Jets::phi_size() const {
  return phi_.size();
}
inline void ProMCEvent_Jets::clear_phi() {
  phi_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_Jets::phi(int index) const {
  return phi_.Get(index);
}
inline void ProMCEvent_Jets::set_phi(int index, ::google::protobuf::int64 value) {
  phi_.Set(index, value);
}
inline void ProMCEvent_Jets::add_phi(::google::protobuf::int64 value) {
  phi_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_Jets::phi() const {
  return phi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_Jets::mutable_phi() {
  return &phi_;
}

// repeated uint64 Mass = 4 [packed = true];
inline int ProMCEvent_Jets::mass_size() const {
  return mass_.size();
}
inline void ProMCEvent_Jets::clear_mass() {
  mass_.Clear();
}
inline ::google::protobuf::uint64 ProMCEvent_Jets::mass(int index) const {
  return mass_.Get(index);
}
inline void ProMCEvent_Jets::set_mass(int index, ::google::protobuf::uint64 value) {
  mass_.Set(index, value);
}
inline void ProMCEvent_Jets::add_mass(::google::protobuf::uint64 value) {
  mass_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ProMCEvent_Jets::mass() const {
  return mass_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ProMCEvent_Jets::mutable_mass() {
  return &mass_;
}

// repeated sint32 Btag = 5 [packed = true];
inline int ProMCEvent_Jets::btag_size() const {
  return btag_.size();
}
inline void ProMCEvent_Jets::clear_btag() {
  btag_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Jets::btag(int index) const {
  return btag_.Get(index);
}
inline void ProMCEvent_Jets::set_btag(int index, ::google::protobuf::int32 value) {
  btag_.Set(index, value);
}
inline void ProMCEvent_Jets::add_btag(::google::protobuf::int32 value) {
  btag_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Jets::btag() const {
  return btag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Jets::mutable_btag() {
  return &btag_;
}

// repeated sint32 Tautag = 6 [packed = true];
inline int ProMCEvent_Jets::tautag_size() const {
  return tautag_.size();
}
inline void ProMCEvent_Jets::clear_tautag() {
  tautag_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Jets::tautag(int index) const {
  return tautag_.Get(index);
}
inline void ProMCEvent_Jets::set_tautag(int index, ::google::protobuf::int32 value) {
  tautag_.Set(index, value);
}
inline void ProMCEvent_Jets::add_tautag(::google::protobuf::int32 value) {
  tautag_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Jets::tautag() const {
  return tautag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Jets::mutable_tautag() {
  return &tautag_;
}

// repeated sint32 Charge = 7 [packed = true];
inline int ProMCEvent_Jets::charge_size() const {
  return charge_.size();
}
inline void ProMCEvent_Jets::clear_charge() {
  charge_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Jets::charge(int index) const {
  return charge_.Get(index);
}
inline void ProMCEvent_Jets::set_charge(int index, ::google::protobuf::int32 value) {
  charge_.Set(index, value);
}
inline void ProMCEvent_Jets::add_charge(::google::protobuf::int32 value) {
  charge_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Jets::charge() const {
  return charge_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Jets::mutable_charge() {
  return &charge_;
}

// repeated uint32 DeltaEta = 8 [packed = true];
inline int ProMCEvent_Jets::deltaeta_size() const {
  return deltaeta_.size();
}
inline void ProMCEvent_Jets::clear_deltaeta() {
  deltaeta_.Clear();
}
inline ::google::protobuf::uint32 ProMCEvent_Jets::deltaeta(int index) const {
  return deltaeta_.Get(index);
}
inline void ProMCEvent_Jets::set_deltaeta(int index, ::google::protobuf::uint32 value) {
  deltaeta_.Set(index, value);
}
inline void ProMCEvent_Jets::add_deltaeta(::google::protobuf::uint32 value) {
  deltaeta_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProMCEvent_Jets::deltaeta() const {
  return deltaeta_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProMCEvent_Jets::mutable_deltaeta() {
  return &deltaeta_;
}

// repeated uint32 DeltaPhi = 9 [packed = true];
inline int ProMCEvent_Jets::deltaphi_size() const {
  return deltaphi_.size();
}
inline void ProMCEvent_Jets::clear_deltaphi() {
  deltaphi_.Clear();
}
inline ::google::protobuf::uint32 ProMCEvent_Jets::deltaphi(int index) const {
  return deltaphi_.Get(index);
}
inline void ProMCEvent_Jets::set_deltaphi(int index, ::google::protobuf::uint32 value) {
  deltaphi_.Set(index, value);
}
inline void ProMCEvent_Jets::add_deltaphi(::google::protobuf::uint32 value) {
  deltaphi_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProMCEvent_Jets::deltaphi() const {
  return deltaphi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProMCEvent_Jets::mutable_deltaphi() {
  return &deltaphi_;
}

// repeated sint32 HadOverEem = 10 [packed = true];
inline int ProMCEvent_Jets::hadovereem_size() const {
  return hadovereem_.size();
}
inline void ProMCEvent_Jets::clear_hadovereem() {
  hadovereem_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Jets::hadovereem(int index) const {
  return hadovereem_.Get(index);
}
inline void ProMCEvent_Jets::set_hadovereem(int index, ::google::protobuf::int32 value) {
  hadovereem_.Set(index, value);
}
inline void ProMCEvent_Jets::add_hadovereem(::google::protobuf::int32 value) {
  hadovereem_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Jets::hadovereem() const {
  return hadovereem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Jets::mutable_hadovereem() {
  return &hadovereem_;
}

// -------------------------------------------------------------------

// ProMCEvent_CAJets

// repeated uint64 PT = 1 [packed = true];
inline int ProMCEvent_CAJets::pt_size() const {
  return pt_.size();
}
inline void ProMCEvent_CAJets::clear_pt() {
  pt_.Clear();
}
inline ::google::protobuf::uint64 ProMCEvent_CAJets::pt(int index) const {
  return pt_.Get(index);
}
inline void ProMCEvent_CAJets::set_pt(int index, ::google::protobuf::uint64 value) {
  pt_.Set(index, value);
}
inline void ProMCEvent_CAJets::add_pt(::google::protobuf::uint64 value) {
  pt_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ProMCEvent_CAJets::pt() const {
  return pt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ProMCEvent_CAJets::mutable_pt() {
  return &pt_;
}

// repeated sint64 Eta = 2 [packed = true];
inline int ProMCEvent_CAJets::eta_size() const {
  return eta_.size();
}
inline void ProMCEvent_CAJets::clear_eta() {
  eta_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_CAJets::eta(int index) const {
  return eta_.Get(index);
}
inline void ProMCEvent_CAJets::set_eta(int index, ::google::protobuf::int64 value) {
  eta_.Set(index, value);
}
inline void ProMCEvent_CAJets::add_eta(::google::protobuf::int64 value) {
  eta_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_CAJets::eta() const {
  return eta_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_CAJets::mutable_eta() {
  return &eta_;
}

// repeated sint64 Phi = 3 [packed = true];
inline int ProMCEvent_CAJets::phi_size() const {
  return phi_.size();
}
inline void ProMCEvent_CAJets::clear_phi() {
  phi_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_CAJets::phi(int index) const {
  return phi_.Get(index);
}
inline void ProMCEvent_CAJets::set_phi(int index, ::google::protobuf::int64 value) {
  phi_.Set(index, value);
}
inline void ProMCEvent_CAJets::add_phi(::google::protobuf::int64 value) {
  phi_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_CAJets::phi() const {
  return phi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_CAJets::mutable_phi() {
  return &phi_;
}

// repeated uint64 Mass = 4 [packed = true];
inline int ProMCEvent_CAJets::mass_size() const {
  return mass_.size();
}
inline void ProMCEvent_CAJets::clear_mass() {
  mass_.Clear();
}
inline ::google::protobuf::uint64 ProMCEvent_CAJets::mass(int index) const {
  return mass_.Get(index);
}
inline void ProMCEvent_CAJets::set_mass(int index, ::google::protobuf::uint64 value) {
  mass_.Set(index, value);
}
inline void ProMCEvent_CAJets::add_mass(::google::protobuf::uint64 value) {
  mass_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ProMCEvent_CAJets::mass() const {
  return mass_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ProMCEvent_CAJets::mutable_mass() {
  return &mass_;
}

// repeated sint32 Btag = 5 [packed = true];
inline int ProMCEvent_CAJets::btag_size() const {
  return btag_.size();
}
inline void ProMCEvent_CAJets::clear_btag() {
  btag_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_CAJets::btag(int index) const {
  return btag_.Get(index);
}
inline void ProMCEvent_CAJets::set_btag(int index, ::google::protobuf::int32 value) {
  btag_.Set(index, value);
}
inline void ProMCEvent_CAJets::add_btag(::google::protobuf::int32 value) {
  btag_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_CAJets::btag() const {
  return btag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_CAJets::mutable_btag() {
  return &btag_;
}

// repeated sint32 TauTag = 6 [packed = true];
inline int ProMCEvent_CAJets::tautag_size() const {
  return tautag_.size();
}
inline void ProMCEvent_CAJets::clear_tautag() {
  tautag_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_CAJets::tautag(int index) const {
  return tautag_.Get(index);
}
inline void ProMCEvent_CAJets::set_tautag(int index, ::google::protobuf::int32 value) {
  tautag_.Set(index, value);
}
inline void ProMCEvent_CAJets::add_tautag(::google::protobuf::int32 value) {
  tautag_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_CAJets::tautag() const {
  return tautag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_CAJets::mutable_tautag() {
  return &tautag_;
}

// repeated sint32 Charge = 7 [packed = true];
inline int ProMCEvent_CAJets::charge_size() const {
  return charge_.size();
}
inline void ProMCEvent_CAJets::clear_charge() {
  charge_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_CAJets::charge(int index) const {
  return charge_.Get(index);
}
inline void ProMCEvent_CAJets::set_charge(int index, ::google::protobuf::int32 value) {
  charge_.Set(index, value);
}
inline void ProMCEvent_CAJets::add_charge(::google::protobuf::int32 value) {
  charge_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_CAJets::charge() const {
  return charge_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_CAJets::mutable_charge() {
  return &charge_;
}

// repeated uint32 DeltaEta = 8 [packed = true];
inline int ProMCEvent_CAJets::deltaeta_size() const {
  return deltaeta_.size();
}
inline void ProMCEvent_CAJets::clear_deltaeta() {
  deltaeta_.Clear();
}
inline ::google::protobuf::uint32 ProMCEvent_CAJets::deltaeta(int index) const {
  return deltaeta_.Get(index);
}
inline void ProMCEvent_CAJets::set_deltaeta(int index, ::google::protobuf::uint32 value) {
  deltaeta_.Set(index, value);
}
inline void ProMCEvent_CAJets::add_deltaeta(::google::protobuf::uint32 value) {
  deltaeta_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProMCEvent_CAJets::deltaeta() const {
  return deltaeta_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProMCEvent_CAJets::mutable_deltaeta() {
  return &deltaeta_;
}

// repeated uint32 DeltaPhi = 9 [packed = true];
inline int ProMCEvent_CAJets::deltaphi_size() const {
  return deltaphi_.size();
}
inline void ProMCEvent_CAJets::clear_deltaphi() {
  deltaphi_.Clear();
}
inline ::google::protobuf::uint32 ProMCEvent_CAJets::deltaphi(int index) const {
  return deltaphi_.Get(index);
}
inline void ProMCEvent_CAJets::set_deltaphi(int index, ::google::protobuf::uint32 value) {
  deltaphi_.Set(index, value);
}
inline void ProMCEvent_CAJets::add_deltaphi(::google::protobuf::uint32 value) {
  deltaphi_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProMCEvent_CAJets::deltaphi() const {
  return deltaphi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProMCEvent_CAJets::mutable_deltaphi() {
  return &deltaphi_;
}

// repeated sint32 HadOverEem = 10 [packed = true];
inline int ProMCEvent_CAJets::hadovereem_size() const {
  return hadovereem_.size();
}
inline void ProMCEvent_CAJets::clear_hadovereem() {
  hadovereem_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_CAJets::hadovereem(int index) const {
  return hadovereem_.Get(index);
}
inline void ProMCEvent_CAJets::set_hadovereem(int index, ::google::protobuf::int32 value) {
  hadovereem_.Set(index, value);
}
inline void ProMCEvent_CAJets::add_hadovereem(::google::protobuf::int32 value) {
  hadovereem_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_CAJets::hadovereem() const {
  return hadovereem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_CAJets::mutable_hadovereem() {
  return &hadovereem_;
}

// -------------------------------------------------------------------

// ProMCEvent_GenJets

// repeated uint64 PT = 1 [packed = true];
inline int ProMCEvent_GenJets::pt_size() const {
  return pt_.size();
}
inline void ProMCEvent_GenJets::clear_pt() {
  pt_.Clear();
}
inline ::google::protobuf::uint64 ProMCEvent_GenJets::pt(int index) const {
  return pt_.Get(index);
}
inline void ProMCEvent_GenJets::set_pt(int index, ::google::protobuf::uint64 value) {
  pt_.Set(index, value);
}
inline void ProMCEvent_GenJets::add_pt(::google::protobuf::uint64 value) {
  pt_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ProMCEvent_GenJets::pt() const {
  return pt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ProMCEvent_GenJets::mutable_pt() {
  return &pt_;
}

// repeated sint64 Eta = 2 [packed = true];
inline int ProMCEvent_GenJets::eta_size() const {
  return eta_.size();
}
inline void ProMCEvent_GenJets::clear_eta() {
  eta_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_GenJets::eta(int index) const {
  return eta_.Get(index);
}
inline void ProMCEvent_GenJets::set_eta(int index, ::google::protobuf::int64 value) {
  eta_.Set(index, value);
}
inline void ProMCEvent_GenJets::add_eta(::google::protobuf::int64 value) {
  eta_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_GenJets::eta() const {
  return eta_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_GenJets::mutable_eta() {
  return &eta_;
}

// repeated sint64 Phi = 3 [packed = true];
inline int ProMCEvent_GenJets::phi_size() const {
  return phi_.size();
}
inline void ProMCEvent_GenJets::clear_phi() {
  phi_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_GenJets::phi(int index) const {
  return phi_.Get(index);
}
inline void ProMCEvent_GenJets::set_phi(int index, ::google::protobuf::int64 value) {
  phi_.Set(index, value);
}
inline void ProMCEvent_GenJets::add_phi(::google::protobuf::int64 value) {
  phi_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_GenJets::phi() const {
  return phi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_GenJets::mutable_phi() {
  return &phi_;
}

// repeated uint64 Mass = 4 [packed = true];
inline int ProMCEvent_GenJets::mass_size() const {
  return mass_.size();
}
inline void ProMCEvent_GenJets::clear_mass() {
  mass_.Clear();
}
inline ::google::protobuf::uint64 ProMCEvent_GenJets::mass(int index) const {
  return mass_.Get(index);
}
inline void ProMCEvent_GenJets::set_mass(int index, ::google::protobuf::uint64 value) {
  mass_.Set(index, value);
}
inline void ProMCEvent_GenJets::add_mass(::google::protobuf::uint64 value) {
  mass_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ProMCEvent_GenJets::mass() const {
  return mass_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ProMCEvent_GenJets::mutable_mass() {
  return &mass_;
}

// repeated sint32 Btag = 5 [packed = true];
inline int ProMCEvent_GenJets::btag_size() const {
  return btag_.size();
}
inline void ProMCEvent_GenJets::clear_btag() {
  btag_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_GenJets::btag(int index) const {
  return btag_.Get(index);
}
inline void ProMCEvent_GenJets::set_btag(int index, ::google::protobuf::int32 value) {
  btag_.Set(index, value);
}
inline void ProMCEvent_GenJets::add_btag(::google::protobuf::int32 value) {
  btag_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_GenJets::btag() const {
  return btag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_GenJets::mutable_btag() {
  return &btag_;
}

// repeated sint32 TauTag = 6 [packed = true];
inline int ProMCEvent_GenJets::tautag_size() const {
  return tautag_.size();
}
inline void ProMCEvent_GenJets::clear_tautag() {
  tautag_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_GenJets::tautag(int index) const {
  return tautag_.Get(index);
}
inline void ProMCEvent_GenJets::set_tautag(int index, ::google::protobuf::int32 value) {
  tautag_.Set(index, value);
}
inline void ProMCEvent_GenJets::add_tautag(::google::protobuf::int32 value) {
  tautag_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_GenJets::tautag() const {
  return tautag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_GenJets::mutable_tautag() {
  return &tautag_;
}

// repeated sint32 Charge = 7 [packed = true];
inline int ProMCEvent_GenJets::charge_size() const {
  return charge_.size();
}
inline void ProMCEvent_GenJets::clear_charge() {
  charge_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_GenJets::charge(int index) const {
  return charge_.Get(index);
}
inline void ProMCEvent_GenJets::set_charge(int index, ::google::protobuf::int32 value) {
  charge_.Set(index, value);
}
inline void ProMCEvent_GenJets::add_charge(::google::protobuf::int32 value) {
  charge_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_GenJets::charge() const {
  return charge_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_GenJets::mutable_charge() {
  return &charge_;
}

// repeated uint32 DeltaEta = 8 [packed = true];
inline int ProMCEvent_GenJets::deltaeta_size() const {
  return deltaeta_.size();
}
inline void ProMCEvent_GenJets::clear_deltaeta() {
  deltaeta_.Clear();
}
inline ::google::protobuf::uint32 ProMCEvent_GenJets::deltaeta(int index) const {
  return deltaeta_.Get(index);
}
inline void ProMCEvent_GenJets::set_deltaeta(int index, ::google::protobuf::uint32 value) {
  deltaeta_.Set(index, value);
}
inline void ProMCEvent_GenJets::add_deltaeta(::google::protobuf::uint32 value) {
  deltaeta_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProMCEvent_GenJets::deltaeta() const {
  return deltaeta_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProMCEvent_GenJets::mutable_deltaeta() {
  return &deltaeta_;
}

// repeated uint32 DeltaPhi = 9 [packed = true];
inline int ProMCEvent_GenJets::deltaphi_size() const {
  return deltaphi_.size();
}
inline void ProMCEvent_GenJets::clear_deltaphi() {
  deltaphi_.Clear();
}
inline ::google::protobuf::uint32 ProMCEvent_GenJets::deltaphi(int index) const {
  return deltaphi_.Get(index);
}
inline void ProMCEvent_GenJets::set_deltaphi(int index, ::google::protobuf::uint32 value) {
  deltaphi_.Set(index, value);
}
inline void ProMCEvent_GenJets::add_deltaphi(::google::protobuf::uint32 value) {
  deltaphi_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProMCEvent_GenJets::deltaphi() const {
  return deltaphi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProMCEvent_GenJets::mutable_deltaphi() {
  return &deltaphi_;
}

// repeated sint32 HadOverEem = 10 [packed = true];
inline int ProMCEvent_GenJets::hadovereem_size() const {
  return hadovereem_.size();
}
inline void ProMCEvent_GenJets::clear_hadovereem() {
  hadovereem_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_GenJets::hadovereem(int index) const {
  return hadovereem_.Get(index);
}
inline void ProMCEvent_GenJets::set_hadovereem(int index, ::google::protobuf::int32 value) {
  hadovereem_.Set(index, value);
}
inline void ProMCEvent_GenJets::add_hadovereem(::google::protobuf::int32 value) {
  hadovereem_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_GenJets::hadovereem() const {
  return hadovereem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_GenJets::mutable_hadovereem() {
  return &hadovereem_;
}

// -------------------------------------------------------------------

// ProMCEvent_Electrons

// repeated uint64 PT = 1 [packed = true];
inline int ProMCEvent_Electrons::pt_size() const {
  return pt_.size();
}
inline void ProMCEvent_Electrons::clear_pt() {
  pt_.Clear();
}
inline ::google::protobuf::uint64 ProMCEvent_Electrons::pt(int index) const {
  return pt_.Get(index);
}
inline void ProMCEvent_Electrons::set_pt(int index, ::google::protobuf::uint64 value) {
  pt_.Set(index, value);
}
inline void ProMCEvent_Electrons::add_pt(::google::protobuf::uint64 value) {
  pt_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ProMCEvent_Electrons::pt() const {
  return pt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ProMCEvent_Electrons::mutable_pt() {
  return &pt_;
}

// repeated sint64 Eta = 2 [packed = true];
inline int ProMCEvent_Electrons::eta_size() const {
  return eta_.size();
}
inline void ProMCEvent_Electrons::clear_eta() {
  eta_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_Electrons::eta(int index) const {
  return eta_.Get(index);
}
inline void ProMCEvent_Electrons::set_eta(int index, ::google::protobuf::int64 value) {
  eta_.Set(index, value);
}
inline void ProMCEvent_Electrons::add_eta(::google::protobuf::int64 value) {
  eta_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_Electrons::eta() const {
  return eta_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_Electrons::mutable_eta() {
  return &eta_;
}

// repeated sint64 Phi = 3 [packed = true];
inline int ProMCEvent_Electrons::phi_size() const {
  return phi_.size();
}
inline void ProMCEvent_Electrons::clear_phi() {
  phi_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_Electrons::phi(int index) const {
  return phi_.Get(index);
}
inline void ProMCEvent_Electrons::set_phi(int index, ::google::protobuf::int64 value) {
  phi_.Set(index, value);
}
inline void ProMCEvent_Electrons::add_phi(::google::protobuf::int64 value) {
  phi_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_Electrons::phi() const {
  return phi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_Electrons::mutable_phi() {
  return &phi_;
}

// repeated sint32 Charge = 4 [packed = true];
inline int ProMCEvent_Electrons::charge_size() const {
  return charge_.size();
}
inline void ProMCEvent_Electrons::clear_charge() {
  charge_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Electrons::charge(int index) const {
  return charge_.Get(index);
}
inline void ProMCEvent_Electrons::set_charge(int index, ::google::protobuf::int32 value) {
  charge_.Set(index, value);
}
inline void ProMCEvent_Electrons::add_charge(::google::protobuf::int32 value) {
  charge_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Electrons::charge() const {
  return charge_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Electrons::mutable_charge() {
  return &charge_;
}

// -------------------------------------------------------------------

// ProMCEvent_Muons

// repeated uint64 PT = 1 [packed = true];
inline int ProMCEvent_Muons::pt_size() const {
  return pt_.size();
}
inline void ProMCEvent_Muons::clear_pt() {
  pt_.Clear();
}
inline ::google::protobuf::uint64 ProMCEvent_Muons::pt(int index) const {
  return pt_.Get(index);
}
inline void ProMCEvent_Muons::set_pt(int index, ::google::protobuf::uint64 value) {
  pt_.Set(index, value);
}
inline void ProMCEvent_Muons::add_pt(::google::protobuf::uint64 value) {
  pt_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ProMCEvent_Muons::pt() const {
  return pt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ProMCEvent_Muons::mutable_pt() {
  return &pt_;
}

// repeated sint64 Eta = 2 [packed = true];
inline int ProMCEvent_Muons::eta_size() const {
  return eta_.size();
}
inline void ProMCEvent_Muons::clear_eta() {
  eta_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_Muons::eta(int index) const {
  return eta_.Get(index);
}
inline void ProMCEvent_Muons::set_eta(int index, ::google::protobuf::int64 value) {
  eta_.Set(index, value);
}
inline void ProMCEvent_Muons::add_eta(::google::protobuf::int64 value) {
  eta_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_Muons::eta() const {
  return eta_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_Muons::mutable_eta() {
  return &eta_;
}

// repeated sint64 Phi = 3 [packed = true];
inline int ProMCEvent_Muons::phi_size() const {
  return phi_.size();
}
inline void ProMCEvent_Muons::clear_phi() {
  phi_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_Muons::phi(int index) const {
  return phi_.Get(index);
}
inline void ProMCEvent_Muons::set_phi(int index, ::google::protobuf::int64 value) {
  phi_.Set(index, value);
}
inline void ProMCEvent_Muons::add_phi(::google::protobuf::int64 value) {
  phi_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_Muons::phi() const {
  return phi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_Muons::mutable_phi() {
  return &phi_;
}

// repeated sint32 Charge = 4 [packed = true];
inline int ProMCEvent_Muons::charge_size() const {
  return charge_.size();
}
inline void ProMCEvent_Muons::clear_charge() {
  charge_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Muons::charge(int index) const {
  return charge_.Get(index);
}
inline void ProMCEvent_Muons::set_charge(int index, ::google::protobuf::int32 value) {
  charge_.Set(index, value);
}
inline void ProMCEvent_Muons::add_charge(::google::protobuf::int32 value) {
  charge_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Muons::charge() const {
  return charge_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Muons::mutable_charge() {
  return &charge_;
}

// -------------------------------------------------------------------

// ProMCEvent_Tracks

// repeated uint64 PT = 1 [packed = true];
inline int ProMCEvent_Tracks::pt_size() const {
  return pt_.size();
}
inline void ProMCEvent_Tracks::clear_pt() {
  pt_.Clear();
}
inline ::google::protobuf::uint64 ProMCEvent_Tracks::pt(int index) const {
  return pt_.Get(index);
}
inline void ProMCEvent_Tracks::set_pt(int index, ::google::protobuf::uint64 value) {
  pt_.Set(index, value);
}
inline void ProMCEvent_Tracks::add_pt(::google::protobuf::uint64 value) {
  pt_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ProMCEvent_Tracks::pt() const {
  return pt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ProMCEvent_Tracks::mutable_pt() {
  return &pt_;
}

// repeated sint64 Eta = 2 [packed = true];
inline int ProMCEvent_Tracks::eta_size() const {
  return eta_.size();
}
inline void ProMCEvent_Tracks::clear_eta() {
  eta_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_Tracks::eta(int index) const {
  return eta_.Get(index);
}
inline void ProMCEvent_Tracks::set_eta(int index, ::google::protobuf::int64 value) {
  eta_.Set(index, value);
}
inline void ProMCEvent_Tracks::add_eta(::google::protobuf::int64 value) {
  eta_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_Tracks::eta() const {
  return eta_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_Tracks::mutable_eta() {
  return &eta_;
}

// repeated sint64 Phi = 3 [packed = true];
inline int ProMCEvent_Tracks::phi_size() const {
  return phi_.size();
}
inline void ProMCEvent_Tracks::clear_phi() {
  phi_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_Tracks::phi(int index) const {
  return phi_.Get(index);
}
inline void ProMCEvent_Tracks::set_phi(int index, ::google::protobuf::int64 value) {
  phi_.Set(index, value);
}
inline void ProMCEvent_Tracks::add_phi(::google::protobuf::int64 value) {
  phi_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_Tracks::phi() const {
  return phi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_Tracks::mutable_phi() {
  return &phi_;
}

// repeated sint32 Charge = 4 [packed = true];
inline int ProMCEvent_Tracks::charge_size() const {
  return charge_.size();
}
inline void ProMCEvent_Tracks::clear_charge() {
  charge_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Tracks::charge(int index) const {
  return charge_.Get(index);
}
inline void ProMCEvent_Tracks::set_charge(int index, ::google::protobuf::int32 value) {
  charge_.Set(index, value);
}
inline void ProMCEvent_Tracks::add_charge(::google::protobuf::int32 value) {
  charge_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Tracks::charge() const {
  return charge_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Tracks::mutable_charge() {
  return &charge_;
}

// repeated sint32 X = 5 [packed = true];
inline int ProMCEvent_Tracks::x_size() const {
  return x_.size();
}
inline void ProMCEvent_Tracks::clear_x() {
  x_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Tracks::x(int index) const {
  return x_.Get(index);
}
inline void ProMCEvent_Tracks::set_x(int index, ::google::protobuf::int32 value) {
  x_.Set(index, value);
}
inline void ProMCEvent_Tracks::add_x(::google::protobuf::int32 value) {
  x_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Tracks::x() const {
  return x_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Tracks::mutable_x() {
  return &x_;
}

// repeated sint32 Y = 6 [packed = true];
inline int ProMCEvent_Tracks::y_size() const {
  return y_.size();
}
inline void ProMCEvent_Tracks::clear_y() {
  y_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Tracks::y(int index) const {
  return y_.Get(index);
}
inline void ProMCEvent_Tracks::set_y(int index, ::google::protobuf::int32 value) {
  y_.Set(index, value);
}
inline void ProMCEvent_Tracks::add_y(::google::protobuf::int32 value) {
  y_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Tracks::y() const {
  return y_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Tracks::mutable_y() {
  return &y_;
}

// repeated sint32 Z = 7 [packed = true];
inline int ProMCEvent_Tracks::z_size() const {
  return z_.size();
}
inline void ProMCEvent_Tracks::clear_z() {
  z_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Tracks::z(int index) const {
  return z_.Get(index);
}
inline void ProMCEvent_Tracks::set_z(int index, ::google::protobuf::int32 value) {
  z_.Set(index, value);
}
inline void ProMCEvent_Tracks::add_z(::google::protobuf::int32 value) {
  z_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Tracks::z() const {
  return z_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Tracks::mutable_z() {
  return &z_;
}

// repeated sint32 XOuter = 8 [packed = true];
inline int ProMCEvent_Tracks::xouter_size() const {
  return xouter_.size();
}
inline void ProMCEvent_Tracks::clear_xouter() {
  xouter_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Tracks::xouter(int index) const {
  return xouter_.Get(index);
}
inline void ProMCEvent_Tracks::set_xouter(int index, ::google::protobuf::int32 value) {
  xouter_.Set(index, value);
}
inline void ProMCEvent_Tracks::add_xouter(::google::protobuf::int32 value) {
  xouter_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Tracks::xouter() const {
  return xouter_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Tracks::mutable_xouter() {
  return &xouter_;
}

// repeated sint32 YOuter = 9 [packed = true];
inline int ProMCEvent_Tracks::youter_size() const {
  return youter_.size();
}
inline void ProMCEvent_Tracks::clear_youter() {
  youter_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Tracks::youter(int index) const {
  return youter_.Get(index);
}
inline void ProMCEvent_Tracks::set_youter(int index, ::google::protobuf::int32 value) {
  youter_.Set(index, value);
}
inline void ProMCEvent_Tracks::add_youter(::google::protobuf::int32 value) {
  youter_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Tracks::youter() const {
  return youter_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Tracks::mutable_youter() {
  return &youter_;
}

// repeated sint32 ZOuter = 10 [packed = true];
inline int ProMCEvent_Tracks::zouter_size() const {
  return zouter_.size();
}
inline void ProMCEvent_Tracks::clear_zouter() {
  zouter_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Tracks::zouter(int index) const {
  return zouter_.Get(index);
}
inline void ProMCEvent_Tracks::set_zouter(int index, ::google::protobuf::int32 value) {
  zouter_.Set(index, value);
}
inline void ProMCEvent_Tracks::add_zouter(::google::protobuf::int32 value) {
  zouter_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Tracks::zouter() const {
  return zouter_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Tracks::mutable_zouter() {
  return &zouter_;
}

// repeated sint32 EtaOuter = 11 [packed = true];
inline int ProMCEvent_Tracks::etaouter_size() const {
  return etaouter_.size();
}
inline void ProMCEvent_Tracks::clear_etaouter() {
  etaouter_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Tracks::etaouter(int index) const {
  return etaouter_.Get(index);
}
inline void ProMCEvent_Tracks::set_etaouter(int index, ::google::protobuf::int32 value) {
  etaouter_.Set(index, value);
}
inline void ProMCEvent_Tracks::add_etaouter(::google::protobuf::int32 value) {
  etaouter_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Tracks::etaouter() const {
  return etaouter_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Tracks::mutable_etaouter() {
  return &etaouter_;
}

// repeated sint32 PhiOuter = 12 [packed = true];
inline int ProMCEvent_Tracks::phiouter_size() const {
  return phiouter_.size();
}
inline void ProMCEvent_Tracks::clear_phiouter() {
  phiouter_.Clear();
}
inline ::google::protobuf::int32 ProMCEvent_Tracks::phiouter(int index) const {
  return phiouter_.Get(index);
}
inline void ProMCEvent_Tracks::set_phiouter(int index, ::google::protobuf::int32 value) {
  phiouter_.Set(index, value);
}
inline void ProMCEvent_Tracks::add_phiouter(::google::protobuf::int32 value) {
  phiouter_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProMCEvent_Tracks::phiouter() const {
  return phiouter_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProMCEvent_Tracks::mutable_phiouter() {
  return &phiouter_;
}

// -------------------------------------------------------------------

// ProMCEvent_Photons

// repeated uint64 PT = 1 [packed = true];
inline int ProMCEvent_Photons::pt_size() const {
  return pt_.size();
}
inline void ProMCEvent_Photons::clear_pt() {
  pt_.Clear();
}
inline ::google::protobuf::uint64 ProMCEvent_Photons::pt(int index) const {
  return pt_.Get(index);
}
inline void ProMCEvent_Photons::set_pt(int index, ::google::protobuf::uint64 value) {
  pt_.Set(index, value);
}
inline void ProMCEvent_Photons::add_pt(::google::protobuf::uint64 value) {
  pt_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ProMCEvent_Photons::pt() const {
  return pt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ProMCEvent_Photons::mutable_pt() {
  return &pt_;
}

// repeated sint64 Eta = 2 [packed = true];
inline int ProMCEvent_Photons::eta_size() const {
  return eta_.size();
}
inline void ProMCEvent_Photons::clear_eta() {
  eta_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_Photons::eta(int index) const {
  return eta_.Get(index);
}
inline void ProMCEvent_Photons::set_eta(int index, ::google::protobuf::int64 value) {
  eta_.Set(index, value);
}
inline void ProMCEvent_Photons::add_eta(::google::protobuf::int64 value) {
  eta_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_Photons::eta() const {
  return eta_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_Photons::mutable_eta() {
  return &eta_;
}

// repeated sint64 Phi = 3 [packed = true];
inline int ProMCEvent_Photons::phi_size() const {
  return phi_.size();
}
inline void ProMCEvent_Photons::clear_phi() {
  phi_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_Photons::phi(int index) const {
  return phi_.Get(index);
}
inline void ProMCEvent_Photons::set_phi(int index, ::google::protobuf::int64 value) {
  phi_.Set(index, value);
}
inline void ProMCEvent_Photons::add_phi(::google::protobuf::int64 value) {
  phi_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_Photons::phi() const {
  return phi_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_Photons::mutable_phi() {
  return &phi_;
}

// repeated sint64 Energy = 4 [packed = true];
inline int ProMCEvent_Photons::energy_size() const {
  return energy_.size();
}
inline void ProMCEvent_Photons::clear_energy() {
  energy_.Clear();
}
inline ::google::protobuf::int64 ProMCEvent_Photons::energy(int index) const {
  return energy_.Get(index);
}
inline void ProMCEvent_Photons::set_energy(int index, ::google::protobuf::int64 value) {
  energy_.Set(index, value);
}
inline void ProMCEvent_Photons::add_energy(::google::protobuf::int64 value) {
  energy_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProMCEvent_Photons::energy() const {
  return energy_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProMCEvent_Photons::mutable_energy() {
  return &energy_;
}

// -------------------------------------------------------------------

// ProMCEvent_MissingET

// optional uint64 MET = 1;
inline bool ProMCEvent_MissingET::has_met() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProMCEvent_MissingET::set_has_met() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProMCEvent_MissingET::clear_has_met() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProMCEvent_MissingET::clear_met() {
  met_ = GOOGLE_ULONGLONG(0);
  clear_has_met();
}
inline ::google::protobuf::uint64 ProMCEvent_MissingET::met() const {
  return met_;
}
inline void ProMCEvent_MissingET::set_met(::google::protobuf::uint64 value) {
  set_has_met();
  met_ = value;
}

// optional sint64 Phi = 2;
inline bool ProMCEvent_MissingET::has_phi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProMCEvent_MissingET::set_has_phi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProMCEvent_MissingET::clear_has_phi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProMCEvent_MissingET::clear_phi() {
  phi_ = GOOGLE_LONGLONG(0);
  clear_has_phi();
}
inline ::google::protobuf::int64 ProMCEvent_MissingET::phi() const {
  return phi_;
}
inline void ProMCEvent_MissingET::set_phi(::google::protobuf::int64 value) {
  set_has_phi();
  phi_ = value;
}

// -------------------------------------------------------------------

// ProMCEvent_HT

// optional uint64 HT = 1;
inline bool ProMCEvent_HT::has_ht() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProMCEvent_HT::set_has_ht() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProMCEvent_HT::clear_has_ht() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProMCEvent_HT::clear_ht() {
  ht_ = GOOGLE_ULONGLONG(0);
  clear_has_ht();
}
inline ::google::protobuf::uint64 ProMCEvent_HT::ht() const {
  return ht_;
}
inline void ProMCEvent_HT::set_ht(::google::protobuf::uint64 value) {
  set_has_ht();
  ht_ = value;
}

// -------------------------------------------------------------------

// ProMCEvent_Rho

// optional uint64 Rho = 1;
inline bool ProMCEvent_Rho::has_rho() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProMCEvent_Rho::set_has_rho() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProMCEvent_Rho::clear_has_rho() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProMCEvent_Rho::clear_rho() {
  rho_ = GOOGLE_ULONGLONG(0);
  clear_has_rho();
}
inline ::google::protobuf::uint64 ProMCEvent_Rho::rho() const {
  return rho_;
}
inline void ProMCEvent_Rho::set_rho(::google::protobuf::uint64 value) {
  set_has_rho();
  rho_ = value;
}

// -------------------------------------------------------------------

// ProMCEvent

// optional .promc.ProMCEvent.Event event = 1;
inline bool ProMCEvent::has_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProMCEvent::set_has_event() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProMCEvent::clear_has_event() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProMCEvent::clear_event() {
  if (event_ != NULL) event_->::promc::ProMCEvent_Event::Clear();
  clear_has_event();
}
inline const ::promc::ProMCEvent_Event& ProMCEvent::event() const {
  return event_ != NULL ? *event_ : *default_instance_->event_;
}
inline ::promc::ProMCEvent_Event* ProMCEvent::mutable_event() {
  set_has_event();
  if (event_ == NULL) event_ = new ::promc::ProMCEvent_Event;
  return event_;
}
inline ::promc::ProMCEvent_Event* ProMCEvent::release_event() {
  clear_has_event();
  ::promc::ProMCEvent_Event* temp = event_;
  event_ = NULL;
  return temp;
}
inline void ProMCEvent::set_allocated_event(::promc::ProMCEvent_Event* event) {
  delete event_;
  event_ = event;
  if (event) {
    set_has_event();
  } else {
    clear_has_event();
  }
}

// optional .promc.ProMCEvent.Particles particles = 2;
inline bool ProMCEvent::has_particles() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProMCEvent::set_has_particles() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProMCEvent::clear_has_particles() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProMCEvent::clear_particles() {
  if (particles_ != NULL) particles_->::promc::ProMCEvent_Particles::Clear();
  clear_has_particles();
}
inline const ::promc::ProMCEvent_Particles& ProMCEvent::particles() const {
  return particles_ != NULL ? *particles_ : *default_instance_->particles_;
}
inline ::promc::ProMCEvent_Particles* ProMCEvent::mutable_particles() {
  set_has_particles();
  if (particles_ == NULL) particles_ = new ::promc::ProMCEvent_Particles;
  return particles_;
}
inline ::promc::ProMCEvent_Particles* ProMCEvent::release_particles() {
  clear_has_particles();
  ::promc::ProMCEvent_Particles* temp = particles_;
  particles_ = NULL;
  return temp;
}
inline void ProMCEvent::set_allocated_particles(::promc::ProMCEvent_Particles* particles) {
  delete particles_;
  particles_ = particles;
  if (particles) {
    set_has_particles();
  } else {
    clear_has_particles();
  }
}

// optional .promc.ProMCEvent.Jets jets = 3;
inline bool ProMCEvent::has_jets() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProMCEvent::set_has_jets() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProMCEvent::clear_has_jets() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProMCEvent::clear_jets() {
  if (jets_ != NULL) jets_->::promc::ProMCEvent_Jets::Clear();
  clear_has_jets();
}
inline const ::promc::ProMCEvent_Jets& ProMCEvent::jets() const {
  return jets_ != NULL ? *jets_ : *default_instance_->jets_;
}
inline ::promc::ProMCEvent_Jets* ProMCEvent::mutable_jets() {
  set_has_jets();
  if (jets_ == NULL) jets_ = new ::promc::ProMCEvent_Jets;
  return jets_;
}
inline ::promc::ProMCEvent_Jets* ProMCEvent::release_jets() {
  clear_has_jets();
  ::promc::ProMCEvent_Jets* temp = jets_;
  jets_ = NULL;
  return temp;
}
inline void ProMCEvent::set_allocated_jets(::promc::ProMCEvent_Jets* jets) {
  delete jets_;
  jets_ = jets;
  if (jets) {
    set_has_jets();
  } else {
    clear_has_jets();
  }
}

// optional .promc.ProMCEvent.GenJets genjets = 4;
inline bool ProMCEvent::has_genjets() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProMCEvent::set_has_genjets() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProMCEvent::clear_has_genjets() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProMCEvent::clear_genjets() {
  if (genjets_ != NULL) genjets_->::promc::ProMCEvent_GenJets::Clear();
  clear_has_genjets();
}
inline const ::promc::ProMCEvent_GenJets& ProMCEvent::genjets() const {
  return genjets_ != NULL ? *genjets_ : *default_instance_->genjets_;
}
inline ::promc::ProMCEvent_GenJets* ProMCEvent::mutable_genjets() {
  set_has_genjets();
  if (genjets_ == NULL) genjets_ = new ::promc::ProMCEvent_GenJets;
  return genjets_;
}
inline ::promc::ProMCEvent_GenJets* ProMCEvent::release_genjets() {
  clear_has_genjets();
  ::promc::ProMCEvent_GenJets* temp = genjets_;
  genjets_ = NULL;
  return temp;
}
inline void ProMCEvent::set_allocated_genjets(::promc::ProMCEvent_GenJets* genjets) {
  delete genjets_;
  genjets_ = genjets;
  if (genjets) {
    set_has_genjets();
  } else {
    clear_has_genjets();
  }
}

// optional .promc.ProMCEvent.CAJets cajets = 5;
inline bool ProMCEvent::has_cajets() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProMCEvent::set_has_cajets() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProMCEvent::clear_has_cajets() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProMCEvent::clear_cajets() {
  if (cajets_ != NULL) cajets_->::promc::ProMCEvent_CAJets::Clear();
  clear_has_cajets();
}
inline const ::promc::ProMCEvent_CAJets& ProMCEvent::cajets() const {
  return cajets_ != NULL ? *cajets_ : *default_instance_->cajets_;
}
inline ::promc::ProMCEvent_CAJets* ProMCEvent::mutable_cajets() {
  set_has_cajets();
  if (cajets_ == NULL) cajets_ = new ::promc::ProMCEvent_CAJets;
  return cajets_;
}
inline ::promc::ProMCEvent_CAJets* ProMCEvent::release_cajets() {
  clear_has_cajets();
  ::promc::ProMCEvent_CAJets* temp = cajets_;
  cajets_ = NULL;
  return temp;
}
inline void ProMCEvent::set_allocated_cajets(::promc::ProMCEvent_CAJets* cajets) {
  delete cajets_;
  cajets_ = cajets;
  if (cajets) {
    set_has_cajets();
  } else {
    clear_has_cajets();
  }
}

// optional .promc.ProMCEvent.Electrons electrons = 6;
inline bool ProMCEvent::has_electrons() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProMCEvent::set_has_electrons() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProMCEvent::clear_has_electrons() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProMCEvent::clear_electrons() {
  if (electrons_ != NULL) electrons_->::promc::ProMCEvent_Electrons::Clear();
  clear_has_electrons();
}
inline const ::promc::ProMCEvent_Electrons& ProMCEvent::electrons() const {
  return electrons_ != NULL ? *electrons_ : *default_instance_->electrons_;
}
inline ::promc::ProMCEvent_Electrons* ProMCEvent::mutable_electrons() {
  set_has_electrons();
  if (electrons_ == NULL) electrons_ = new ::promc::ProMCEvent_Electrons;
  return electrons_;
}
inline ::promc::ProMCEvent_Electrons* ProMCEvent::release_electrons() {
  clear_has_electrons();
  ::promc::ProMCEvent_Electrons* temp = electrons_;
  electrons_ = NULL;
  return temp;
}
inline void ProMCEvent::set_allocated_electrons(::promc::ProMCEvent_Electrons* electrons) {
  delete electrons_;
  electrons_ = electrons;
  if (electrons) {
    set_has_electrons();
  } else {
    clear_has_electrons();
  }
}

// optional .promc.ProMCEvent.Muons muons = 7;
inline bool ProMCEvent::has_muons() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProMCEvent::set_has_muons() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProMCEvent::clear_has_muons() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProMCEvent::clear_muons() {
  if (muons_ != NULL) muons_->::promc::ProMCEvent_Muons::Clear();
  clear_has_muons();
}
inline const ::promc::ProMCEvent_Muons& ProMCEvent::muons() const {
  return muons_ != NULL ? *muons_ : *default_instance_->muons_;
}
inline ::promc::ProMCEvent_Muons* ProMCEvent::mutable_muons() {
  set_has_muons();
  if (muons_ == NULL) muons_ = new ::promc::ProMCEvent_Muons;
  return muons_;
}
inline ::promc::ProMCEvent_Muons* ProMCEvent::release_muons() {
  clear_has_muons();
  ::promc::ProMCEvent_Muons* temp = muons_;
  muons_ = NULL;
  return temp;
}
inline void ProMCEvent::set_allocated_muons(::promc::ProMCEvent_Muons* muons) {
  delete muons_;
  muons_ = muons;
  if (muons) {
    set_has_muons();
  } else {
    clear_has_muons();
  }
}

// optional .promc.ProMCEvent.Tracks tracks = 8;
inline bool ProMCEvent::has_tracks() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProMCEvent::set_has_tracks() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProMCEvent::clear_has_tracks() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProMCEvent::clear_tracks() {
  if (tracks_ != NULL) tracks_->::promc::ProMCEvent_Tracks::Clear();
  clear_has_tracks();
}
inline const ::promc::ProMCEvent_Tracks& ProMCEvent::tracks() const {
  return tracks_ != NULL ? *tracks_ : *default_instance_->tracks_;
}
inline ::promc::ProMCEvent_Tracks* ProMCEvent::mutable_tracks() {
  set_has_tracks();
  if (tracks_ == NULL) tracks_ = new ::promc::ProMCEvent_Tracks;
  return tracks_;
}
inline ::promc::ProMCEvent_Tracks* ProMCEvent::release_tracks() {
  clear_has_tracks();
  ::promc::ProMCEvent_Tracks* temp = tracks_;
  tracks_ = NULL;
  return temp;
}
inline void ProMCEvent::set_allocated_tracks(::promc::ProMCEvent_Tracks* tracks) {
  delete tracks_;
  tracks_ = tracks;
  if (tracks) {
    set_has_tracks();
  } else {
    clear_has_tracks();
  }
}

// optional .promc.ProMCEvent.Photons photons = 9;
inline bool ProMCEvent::has_photons() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProMCEvent::set_has_photons() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProMCEvent::clear_has_photons() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProMCEvent::clear_photons() {
  if (photons_ != NULL) photons_->::promc::ProMCEvent_Photons::Clear();
  clear_has_photons();
}
inline const ::promc::ProMCEvent_Photons& ProMCEvent::photons() const {
  return photons_ != NULL ? *photons_ : *default_instance_->photons_;
}
inline ::promc::ProMCEvent_Photons* ProMCEvent::mutable_photons() {
  set_has_photons();
  if (photons_ == NULL) photons_ = new ::promc::ProMCEvent_Photons;
  return photons_;
}
inline ::promc::ProMCEvent_Photons* ProMCEvent::release_photons() {
  clear_has_photons();
  ::promc::ProMCEvent_Photons* temp = photons_;
  photons_ = NULL;
  return temp;
}
inline void ProMCEvent::set_allocated_photons(::promc::ProMCEvent_Photons* photons) {
  delete photons_;
  photons_ = photons;
  if (photons) {
    set_has_photons();
  } else {
    clear_has_photons();
  }
}

// optional .promc.ProMCEvent.MissingET missingET = 10;
inline bool ProMCEvent::has_missinget() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProMCEvent::set_has_missinget() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ProMCEvent::clear_has_missinget() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ProMCEvent::clear_missinget() {
  if (missinget_ != NULL) missinget_->::promc::ProMCEvent_MissingET::Clear();
  clear_has_missinget();
}
inline const ::promc::ProMCEvent_MissingET& ProMCEvent::missinget() const {
  return missinget_ != NULL ? *missinget_ : *default_instance_->missinget_;
}
inline ::promc::ProMCEvent_MissingET* ProMCEvent::mutable_missinget() {
  set_has_missinget();
  if (missinget_ == NULL) missinget_ = new ::promc::ProMCEvent_MissingET;
  return missinget_;
}
inline ::promc::ProMCEvent_MissingET* ProMCEvent::release_missinget() {
  clear_has_missinget();
  ::promc::ProMCEvent_MissingET* temp = missinget_;
  missinget_ = NULL;
  return temp;
}
inline void ProMCEvent::set_allocated_missinget(::promc::ProMCEvent_MissingET* missinget) {
  delete missinget_;
  missinget_ = missinget;
  if (missinget) {
    set_has_missinget();
  } else {
    clear_has_missinget();
  }
}

// optional .promc.ProMCEvent.HT ht = 11;
inline bool ProMCEvent::has_ht() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProMCEvent::set_has_ht() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ProMCEvent::clear_has_ht() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ProMCEvent::clear_ht() {
  if (ht_ != NULL) ht_->::promc::ProMCEvent_HT::Clear();
  clear_has_ht();
}
inline const ::promc::ProMCEvent_HT& ProMCEvent::ht() const {
  return ht_ != NULL ? *ht_ : *default_instance_->ht_;
}
inline ::promc::ProMCEvent_HT* ProMCEvent::mutable_ht() {
  set_has_ht();
  if (ht_ == NULL) ht_ = new ::promc::ProMCEvent_HT;
  return ht_;
}
inline ::promc::ProMCEvent_HT* ProMCEvent::release_ht() {
  clear_has_ht();
  ::promc::ProMCEvent_HT* temp = ht_;
  ht_ = NULL;
  return temp;
}
inline void ProMCEvent::set_allocated_ht(::promc::ProMCEvent_HT* ht) {
  delete ht_;
  ht_ = ht;
  if (ht) {
    set_has_ht();
  } else {
    clear_has_ht();
  }
}

// optional .promc.ProMCEvent.Rho rho = 12;
inline bool ProMCEvent::has_rho() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ProMCEvent::set_has_rho() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ProMCEvent::clear_has_rho() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ProMCEvent::clear_rho() {
  if (rho_ != NULL) rho_->::promc::ProMCEvent_Rho::Clear();
  clear_has_rho();
}
inline const ::promc::ProMCEvent_Rho& ProMCEvent::rho() const {
  return rho_ != NULL ? *rho_ : *default_instance_->rho_;
}
inline ::promc::ProMCEvent_Rho* ProMCEvent::mutable_rho() {
  set_has_rho();
  if (rho_ == NULL) rho_ = new ::promc::ProMCEvent_Rho;
  return rho_;
}
inline ::promc::ProMCEvent_Rho* ProMCEvent::release_rho() {
  clear_has_rho();
  ::promc::ProMCEvent_Rho* temp = rho_;
  rho_ = NULL;
  return temp;
}
inline void ProMCEvent::set_allocated_rho(::promc::ProMCEvent_Rho* rho) {
  delete rho_;
  rho_ = rho;
  if (rho) {
    set_has_rho();
  } else {
    clear_has_rho();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace promc

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProMC_2eproto__INCLUDED
